2022-12-20 16:24:43 Tuesday  nameko serivce shutdown!
2022-12-20 16:24:43 Tuesday  nameko serivce [name service] start!
2022-12-20 16:24:43 Tuesday  nameko serivce [producer service] start!
2022-12-20 16:24:43 Tuesday  nameko serivce [optimize service] start!
2022-12-20 16:24:43 Tuesday  nameko serivce [image_recognition service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
Traceback (most recent call last):
  File "/usr/local/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./name_service.py", line 2, in <module>
    sys.path.append("..")
NameError: name 'sys' is not defined
Traceback (most recent call last):
  File "/usr/local/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./optimize_service.py", line 4, in <module>
    sys.path.append("..")
NameError: name 'sys' is not defined
Traceback (most recent call last):
  File "/usr/local/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 10, in <module>
    sys.path.append("..")
NameError: name 'sys' is not defined
nohup: ignoring input
Traceback (most recent call last):
  File "/usr/local/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./name_service.py", line 2, in <module>
    sys.path.append("..")
NameError: name 'sys' is not defined
nohup: ignoring input
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
2022-12-20 16:28:16 Tuesday  nameko serivce shutdown!
2022-12-20 16:28:16 Tuesday  nameko serivce [name service] start!
2022-12-20 16:28:16 Tuesday  nameko serivce [producer service] start!
2022-12-20 16:28:16 Tuesday  nameko serivce [optimize service] start!
2022-12-20 16:28:16 Tuesday  nameko serivce [image_recognition service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
Traceback (most recent call last):
  File "/usr/local/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./name_service.py", line 2, in <module>
    sys.path.append("..")
NameError: name 'sys' is not defined
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
2022-12-20 16:28:19 Tuesday  nameko serivce shutdown!
2022-12-20 16:28:19 Tuesday  nameko serivce [name service] start!
2022-12-20 16:28:19 Tuesday  nameko serivce [producer service] start!
2022-12-20 16:28:19 Tuesday  nameko serivce [optimize service] start!
2022-12-20 16:28:19 Tuesday  nameko serivce [image_recognition service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
Traceback (most recent call last):
  File "/usr/local/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./name_service.py", line 2, in <module>
    sys.path.append("..")
NameError: name 'sys' is not defined
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
2022-12-20 16:29:07 Tuesday  nameko serivce shutdown!
2022-12-20 16:29:07 Tuesday  nameko serivce [name service] start!
2022-12-20 16:29:07 Tuesday  nameko serivce [producer service] start!
2022-12-20 16:29:07 Tuesday  nameko serivce [optimize service] start!
2022-12-20 16:29:07 Tuesday  nameko serivce [image_recognition service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
Optimization problem (res):	Positive directional derivative for linesearch
玻璃面积 24.7492
玻璃价格 75.0
玻璃k值 1.5
外墙材料面积 15.2508
外墙材料价格 69.57
外墙材料k值 0.95
最低成本（元）2917.2
20221220 16:30:29  optimize_service.optimize_service:95  INFO:      fun: 2917.19627134985
     jac: array([75.        , 24.74920654,  0.        , 69.57052612, 15.25079346,
       -0.        ])
 message: 'Positive directional derivative for linesearch'
    nfev: 35
     nit: 9
    njev: 5
  status: 8
 success: False
       x: array([24.74921845, 75.        ,  1.5       , 15.25078155, 69.57052556,
        0.95      ])
Optimization problem (res):	Positive directional derivative for linesearch
玻璃面积 24.7492
玻璃价格 75.0
玻璃k值 1.5
外墙材料面积 15.2508
外墙材料价格 69.57
外墙材料k值 0.95
最低成本（元）2917.2
20221220 16:46:06  optimize_service.optimize_service:95  INFO:      fun: 2917.19627134985
     jac: array([75.        , 24.74920654,  0.        , 69.57052612, 15.25079346,
       -0.        ])
 message: 'Positive directional derivative for linesearch'
    nfev: 35
     nit: 9
    njev: 5
  status: 8
 success: False
       x: array([24.74921845, 75.        ,  1.5       , 15.25078155, 69.57052556,
        0.95      ])
2022-12-21 08:52:15 Wednesday  nameko serivce shutdown!
2022-12-21 08:52:15 Wednesday  nameko serivce [name service] start!
2022-12-21 08:52:15 Wednesday  nameko serivce [producer service] start!
2022-12-21 08:52:15 Wednesday  nameko serivce [optimize service] start!
2022-12-21 08:52:15 Wednesday  nameko serivce [image_recognition service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
20221221 08:53:49  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
[W NNPACK.cpp:53] Could not initialize NNPACK! Reason: Unsupported hardware.
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7f77071f5400>: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 44, in image_recognition_service
    class_id, class_name = self.get_prediction(io.BytesIO(base64.b64decode(img_bytes)).read())
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 37, in get_prediction
    return self.magenet_class_index[predicted_idx]
AttributeError: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
iVBORw0KGgoAAAANSUhEUgAAAMwAAAAlCAIAAACBC5HvAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAADIJJREFUeNrsXAtsFNcV3fXu2ruLvf7s+ouBULBNLAyEJg7l20KRKW2julSNqJVQQaJYQKlQUWmR2lKQ0jiKhApJRFpASipSQSCu1ArVCoqKDSQxnwQb3Nj4A/57/cHf9Wc/7n1zd5/HszNvZ8bsYrt7tbJmZ957M5535txz77uz2vHxcU3YwhZM04dvQdj8rbW9tbOnG7fjLJYkW5LJaJoCyAbsnqY79HtE9mb/RuMd1ePdjbitNcdqn8pVcSZn8ZGRkvf992vNJl1ahm5uhn75ZtGzT93w1PrFy0wHipX2HX4r31VbYczbYcj/vbq+sKGuO53vq7fL6dcta79jscTK736r4su65oe4bYtL2Lh6PeuCR4Zr6mvrmxudLqfg0PyUtOXZOeqgph/8w8Zxx/DE94xlpl9NnonBzsHDW/k7jHk/N/zod48LAXB2mAn4jF65qEtfaCp4XbswN8wlUtbc3pqtBGRdvT1yW3Z33rpX0Tc4IHq0sb21ratz3TdzbdZExSDjI4ybc78m0f6DTknGwWPN/+p51O7pacMn3t3cMHRip/mVY0GitFlg8kED1t/fJwUafw777M5t+IuEt2j+AnSRsKe5reXrhjrYAHoru1WuAmdPQJOJO44Bu/PySXBqAHrHqf3Rf/xUE5M00wEBGsArQmxzJYm8o9rTVKl79icBR0uxJbZ3dcIH5lum2wLa4/dltLxR4UUYuMVVKyc8CZwoY+Hi9NS5d6oqgcwAZ8B2ees3KboPEdNlQmKSAHzmgkPoQEc/OjwLWCdy+5ugAuGjW7dLtIH75oWhom2epio5owHB4Ia9y66I9gx6Q2y0hS37EIKART7C+FCD/bHRMbAN1Hi/oXZmggwf/XW7QJ4TqX639P/B943956xQrkhbnCUWCazN3iHTAyJ0Um0BvNvX9V7QrFiylNEsJ/Np3KhvejiDQUYeu5z1SGbgR8IKTGBpNiIhOnsfyWlMCS81KZmt25DwwFGy49a0lDRkUyAziBJmMMgi5nkfJpo0CduEx0xIQIqSM8eU8JJsSXJ0GxuLaPNS03CjpaN9BoMsbAxbkL4ABJbMOUbCA5nFjhJouAqDBxwz2RdXdstj0ycWXbJt3NEnp5mn6hNP091xxwDGbhGZa7XJWQrO0lDurrkG3bXmGN2KrYr6wqnd1Z/heXUrfhjiKNgaF8fFmPblbMnf3UnzEewBu3t75TRDs3C6kFCpkkyKH8i0Txhk7vve7LZUqsxVcmy09JzHz19AxGB86Y3AcBmwD7/3GqblvFb8dtSGbZE/OBAQLgBNx6l9/FNri48Z83bp8/ZLwXHoeCEJnU/WTbqEwkX8ryMl7/PXQtgrE6mJyQAyUEWgpRgSilJdekoaW5Bhct9sNMqcoNjoaIQv+wIk3KX2ySMMEDB24xIJM9MXih4fPbN7uPhtnGZoA/OB0SgBX22F4/gOGIE9vuPPP0OEYXetmbiS0SsXYX9AhA2d2ImnpueFAAWuZ+zvvw7ZHUpP9abcOpiyrJ1T/cA6bBwMOoZokkI2yCyCvjPMXY5+dBhD+qgN2/2POouPjJWXID5Mr74zQVoDdugIhwABzssnGauEcNTd3DBp8crXF/bD+Iy+Ixf/BNdmyFljfPkt5DyIf4f/ugc6AkYVLbzO2XfSO+bHRdA9MjfPsCp/4mE3sWABaIiNjgEma+vsyFi4WCp5gYn+NFsAbqZrlGaT4kVJ//VNucIfnnL3zQv8R9/5jyPC7M6NS+MPylkPvYrsw4B95J2XEUNAEqLZy9Gy8xpuQd38yw8nucWYpKid7yK1jN28xAJx2Xlvd7o8yvVF4iTjSxChu7UW7gzxyHs+oF4VroFgHbnw0rsKoq3szfjRGkl6MyI+he4hOwMt3c7jPCBqKfGAsa1FZsDY29/vxb3JLPPiExOsgr5qmMxx+qAGPgzl29M5WORjGollTFP+XimlIvBBnu5GV8WnzrulyGGEZl57T1TfYIPI57aKiqfIbxcADog7A6CINUAvSRYV/I4af3wQxBNZqr9+VvSynZXXSLOX3hAq2OSsqHU/BUUFg8P/Epql/SSrTVNbDUTysPmhaEgIJKfhEv1pTEEWMguWu8S4T5yzJsveiefbmmjc8qrUCkzEvOXoZbTW+RINcrxwbLoj5bngFKLjEwqxJhJvW1kq9WyAUxONKvSrX9Rwst311b8NIQGZzZroDfF6ekRBhiQXMNEfMpsueTISUhUclUIY+jWvN5GIH+WkIQxL17MPTYo6BVe4bKPUedHbuuq+DNntSoyLh7+tYouYQG+olqzxCdNlcnnkE6JTCkp9iNypu01Kyo4XEqiBrwxa5gnkudQhXUau5spF9MuiRMgolNAvWgn6nQHQx24gthrbW4HM/PMIQG+COHTWuksWnUyO4Ayo+j84ALoH5gk2iLgOEm9LB4Bac6zP0feJEi1jWK0xmoYvocnNgpf8ooIQp38NI9IbRKBTKZieje4yJgmAhU4HoAYKWq7y66gm+fey087iI/AJ8K8yS+0o/kQLbyISUhl9dVnfonIwZPcshZNcgioxIDbMlM6TJ/l5oWKfzPPSzAXtGxQmI1kAXvEqSRf9ZY+7pWGqbpQL8ci/8fmFSKaCBmA5Py8GJ+tRVAsQn6r+WYxP0Uwzw9R/V28Pv4aRrnaTCFRZ0ssls6X8zMWUQAYame93SBj/vULHqYNT92UY4gF6IqWpa+Rvv+GrH+A/zDaxZfvsM7pWbe+y0xgTiQ0wJ7NCOp4LIDSkekcudFw+OMrPj+gfy2NNBc1UFeKilWPdJPkuhbChom2YLTPkrDE8/4JAjEslR2algd73pv7tHQgyum4dMNFPDeCI2ZC+wUGZXXAtQZHgm2aVsb6ieHCI/keBwxBh5oJDRMPJqIuXb3SVglGPL9mXvi8okcMLmiwjYGrzyTJapYhlZzItNjoaAdovT5YhjhN9FDgDQZa5xqeg7wonsqGcvsMomk4LGC6wnSkbKOwcmKerhSqHUN6uuckpqMSxhhGrFA16g5zKML62E+g5hj30vcKpKAmnBmT+d9wfE+qMLsu4W+4LDrlrrnld6uoXRfvSBozoj7GoiiViGm5pYbIHf4b8g4/aAt4QqcqR4Bmm/jW+wh6kNGtcnKJBaDqtrjlwKTKttk1W8lacKpDVVoye2U3KBrmPq+TYSMnpx3XjMCPl6RFOKl2nkmKL0dJzktj1kZOn5qpkeHWv1AuUyYku9J4QjkgCdMCOHAmCMvTcj26rvcsOZIbJBcpM8mXZfE7Cg8dkv4YEp2jk2M4Wl6DoLXaVydix8hKsmAiGLMMXyiVbiCU8ncVHGOkMwCXGrWNf/Msk5mpJso2LNiKf+77wKcxc6320rp8TLQRyXvbW7RhWqdSI4yODqm8Xpv5BjFfV1ajgGLTsxVmInrv3q+MtsaKRKUDw1j3vpCz5hkiJEUg6cLhJVpu9u2uO2Qwu+05VZWKCFYLQ6fciiS/tKdBY1OXRSeUjTPRXNvgW+exWjX8hkw+1Ix8XcTGySb+6wB+gSK6jZef9yQwuEguQSP2j8tVxrSmG87a3Vd8uQfIC4k1FHEMD1aWLs1Deld0qb/UTZ7CntPw6xpVAY6LJCxgkjgMo/MVcmkGvnxKTBRFkvreVPM2VOt60kaVxswmiS8CTu7XW8PwLWnMsaEFaih21Ydsot/gontv7biFBiWN4+MPDxu4mWmpBCw+5kGKX6KJQ1NbdLq4QyHF8h6ng6MTaQNUnjlP7MeA1bvutKm3wjLPymrBeUuHaFP/t8BSbykWt7Myn+wcH8B3xq7fLAawAJr1e73K5IJykv3UAO4HGEIXQEsBkNplEayeB2AwGw3QFmW8K3c3VOoF6yN/vOPu6hlt6wgKvCaLKzYvc/iYDZDBtc35xZujETiyYjig9FxGfOj4yQHNyMIJUkQ9ckrngEJwa0Dx0vBDTvxAKUAcNR9VVkgFxaktO45MzdvMSXhIMrujXhzD1z4831dmqlbmWmv9WP6gH9ACqRH9EAwDH/4khhJ0/yOIslvsP6rMzlzziXmqajq/EYZjmH2Dq1u0y5e8Vehx4lPL3Ru0MXJgKOACc4eBkXQFcJ4cwOSPAqc2vFGERLBZcIMJA6s3Zd5JVocQ2Dvq4qMq/JEVGRZj8RD+DzzatWpv11CKZLy8xnPjQiIMmbLVDRzep+McCGkzJ402W8iWU+6t/YmoKhJqK3/+h78OpGIG+D0fepctc87hKYemwhN5WbJllP56lDf+cZ9iCLoHCtyBswbb/CTAAAps2/8CIvu4AAAAASUVORK5CYII=
predicted_idx =902
20221221 08:55:06  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7f7707243730>: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 44, in image_recognition_service
    class_id, class_name = self.get_prediction(io.BytesIO(base64.b64decode(img_bytes)).read())
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 37, in get_prediction
    return self.magenet_class_index[predicted_idx]
AttributeError: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
iVBORw0KGgoAAAANSUhEUgAAAMwAAAAlCAIAAACBC5HvAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAADIJJREFUeNrsXAtsFNcV3fXu2ruLvf7s+ouBULBNLAyEJg7l20KRKW2julSNqJVQQaJYQKlQUWmR2lKQ0jiKhApJRFpASipSQSCu1ArVCoqKDSQxnwQb3Nj4A/57/cHf9Wc/7n1zd5/HszNvZ8bsYrt7tbJmZ957M5535txz77uz2vHxcU3YwhZM04dvQdj8rbW9tbOnG7fjLJYkW5LJaJoCyAbsnqY79HtE9mb/RuMd1ePdjbitNcdqn8pVcSZn8ZGRkvf992vNJl1ahm5uhn75ZtGzT93w1PrFy0wHipX2HX4r31VbYczbYcj/vbq+sKGuO53vq7fL6dcta79jscTK736r4su65oe4bYtL2Lh6PeuCR4Zr6mvrmxudLqfg0PyUtOXZOeqgph/8w8Zxx/DE94xlpl9NnonBzsHDW/k7jHk/N/zod48LAXB2mAn4jF65qEtfaCp4XbswN8wlUtbc3pqtBGRdvT1yW3Z33rpX0Tc4IHq0sb21ratz3TdzbdZExSDjI4ybc78m0f6DTknGwWPN/+p51O7pacMn3t3cMHRip/mVY0GitFlg8kED1t/fJwUafw777M5t+IuEt2j+AnSRsKe5reXrhjrYAHoru1WuAmdPQJOJO44Bu/PySXBqAHrHqf3Rf/xUE5M00wEBGsArQmxzJYm8o9rTVKl79icBR0uxJbZ3dcIH5lum2wLa4/dltLxR4UUYuMVVKyc8CZwoY+Hi9NS5d6oqgcwAZ8B2ees3KboPEdNlQmKSAHzmgkPoQEc/OjwLWCdy+5ugAuGjW7dLtIH75oWhom2epio5owHB4Ia9y66I9gx6Q2y0hS37EIKART7C+FCD/bHRMbAN1Hi/oXZmggwf/XW7QJ4TqX639P/B943956xQrkhbnCUWCazN3iHTAyJ0Um0BvNvX9V7QrFiylNEsJ/Np3KhvejiDQUYeu5z1SGbgR8IKTGBpNiIhOnsfyWlMCS81KZmt25DwwFGy49a0lDRkUyAziBJmMMgi5nkfJpo0CduEx0xIQIqSM8eU8JJsSXJ0GxuLaPNS03CjpaN9BoMsbAxbkL4ABJbMOUbCA5nFjhJouAqDBxwz2RdXdstj0ycWXbJt3NEnp5mn6hNP091xxwDGbhGZa7XJWQrO0lDurrkG3bXmGN2KrYr6wqnd1Z/heXUrfhjiKNgaF8fFmPblbMnf3UnzEewBu3t75TRDs3C6kFCpkkyKH8i0Txhk7vve7LZUqsxVcmy09JzHz19AxGB86Y3AcBmwD7/3GqblvFb8dtSGbZE/OBAQLgBNx6l9/FNri48Z83bp8/ZLwXHoeCEJnU/WTbqEwkX8ryMl7/PXQtgrE6mJyQAyUEWgpRgSilJdekoaW5Bhct9sNMqcoNjoaIQv+wIk3KX2ySMMEDB24xIJM9MXih4fPbN7uPhtnGZoA/OB0SgBX22F4/gOGIE9vuPPP0OEYXetmbiS0SsXYX9AhA2d2ImnpueFAAWuZ+zvvw7ZHUpP9abcOpiyrJ1T/cA6bBwMOoZokkI2yCyCvjPMXY5+dBhD+qgN2/2POouPjJWXID5Mr74zQVoDdugIhwABzssnGauEcNTd3DBp8crXF/bD+Iy+Ixf/BNdmyFljfPkt5DyIf4f/ugc6AkYVLbzO2XfSO+bHRdA9MjfPsCp/4mE3sWABaIiNjgEma+vsyFi4WCp5gYn+NFsAbqZrlGaT4kVJ//VNucIfnnL3zQv8R9/5jyPC7M6NS+MPylkPvYrsw4B95J2XEUNAEqLZy9Gy8xpuQd38yw8nucWYpKid7yK1jN28xAJx2Xlvd7o8yvVF4iTjSxChu7UW7gzxyHs+oF4VroFgHbnw0rsKoq3szfjRGkl6MyI+he4hOwMt3c7jPCBqKfGAsa1FZsDY29/vxb3JLPPiExOsgr5qmMxx+qAGPgzl29M5WORjGollTFP+XimlIvBBnu5GV8WnzrulyGGEZl57T1TfYIPI57aKiqfIbxcADog7A6CINUAvSRYV/I4af3wQxBNZqr9+VvSynZXXSLOX3hAq2OSsqHU/BUUFg8P/Epql/SSrTVNbDUTysPmhaEgIJKfhEv1pTEEWMguWu8S4T5yzJsveiefbmmjc8qrUCkzEvOXoZbTW+RINcrxwbLoj5bngFKLjEwqxJhJvW1kq9WyAUxONKvSrX9Rwst311b8NIQGZzZroDfF6ekRBhiQXMNEfMpsueTISUhUclUIY+jWvN5GIH+WkIQxL17MPTYo6BVe4bKPUedHbuuq+DNntSoyLh7+tYouYQG+olqzxCdNlcnnkE6JTCkp9iNypu01Kyo4XEqiBrwxa5gnkudQhXUau5spF9MuiRMgolNAvWgn6nQHQx24gthrbW4HM/PMIQG+COHTWuksWnUyO4Ayo+j84ALoH5gk2iLgOEm9LB4Bac6zP0feJEi1jWK0xmoYvocnNgpf8ooIQp38NI9IbRKBTKZieje4yJgmAhU4HoAYKWq7y66gm+fey087iI/AJ8K8yS+0o/kQLbyISUhl9dVnfonIwZPcshZNcgioxIDbMlM6TJ/l5oWKfzPPSzAXtGxQmI1kAXvEqSRf9ZY+7pWGqbpQL8ci/8fmFSKaCBmA5Py8GJ+tRVAsQn6r+WYxP0Uwzw9R/V28Pv4aRrnaTCFRZ0ssls6X8zMWUQAYame93SBj/vULHqYNT92UY4gF6IqWpa+Rvv+GrH+A/zDaxZfvsM7pWbe+y0xgTiQ0wJ7NCOp4LIDSkekcudFw+OMrPj+gfy2NNBc1UFeKilWPdJPkuhbChom2YLTPkrDE8/4JAjEslR2algd73pv7tHQgyum4dMNFPDeCI2ZC+wUGZXXAtQZHgm2aVsb6ieHCI/keBwxBh5oJDRMPJqIuXb3SVglGPL9mXvi8okcMLmiwjYGrzyTJapYhlZzItNjoaAdovT5YhjhN9FDgDQZa5xqeg7wonsqGcvsMomk4LGC6wnSkbKOwcmKerhSqHUN6uuckpqMSxhhGrFA16g5zKML62E+g5hj30vcKpKAmnBmT+d9wfE+qMLsu4W+4LDrlrrnld6uoXRfvSBozoj7GoiiViGm5pYbIHf4b8g4/aAt4QqcqR4Bmm/jW+wh6kNGtcnKJBaDqtrjlwKTKttk1W8lacKpDVVoye2U3KBrmPq+TYSMnpx3XjMCPl6RFOKl2nkmKL0dJzktj1kZOn5qpkeHWv1AuUyYku9J4QjkgCdMCOHAmCMvTcj26rvcsOZIbJBcpM8mXZfE7Cg8dkv4YEp2jk2M4Wl6DoLXaVydix8hKsmAiGLMMXyiVbiCU8ncVHGOkMwCXGrWNf/Msk5mpJso2LNiKf+77wKcxc6320rp8TLQRyXvbW7RhWqdSI4yODqm8Xpv5BjFfV1ajgGLTsxVmInrv3q+MtsaKRKUDw1j3vpCz5hkiJEUg6cLhJVpu9u2uO2Qwu+05VZWKCFYLQ6fciiS/tKdBY1OXRSeUjTPRXNvgW+exWjX8hkw+1Ix8XcTGySb+6wB+gSK6jZef9yQwuEguQSP2j8tVxrSmG87a3Vd8uQfIC4k1FHEMD1aWLs1Deld0qb/UTZ7CntPw6xpVAY6LJCxgkjgMo/MVcmkGvnxKTBRFkvreVPM2VOt60kaVxswmiS8CTu7XW8PwLWnMsaEFaih21Ydsot/gontv7biFBiWN4+MPDxu4mWmpBCw+5kGKX6KJQ1NbdLq4QyHF8h6ng6MTaQNUnjlP7MeA1bvutKm3wjLPymrBeUuHaFP/t8BSbykWt7Myn+wcH8B3xq7fLAawAJr1e73K5IJykv3UAO4HGEIXQEsBkNplEayeB2AwGw3QFmW8K3c3VOoF6yN/vOPu6hlt6wgKvCaLKzYvc/iYDZDBtc35xZujETiyYjig9FxGfOj4yQHNyMIJUkQ9ckrngEJwa0Dx0vBDTvxAKUAcNR9VVkgFxaktO45MzdvMSXhIMrujXhzD1z4831dmqlbmWmv9WP6gH9ACqRH9EAwDH/4khhJ0/yOIslvsP6rMzlzziXmqajq/EYZjmH2Dq1u0y5e8Vehx4lPL3Ru0MXJgKOACc4eBkXQFcJ4cwOSPAqc2vFGERLBZcIMJA6s3Zd5JVocQ2Dvq4qMq/JEVGRZj8RD+DzzatWpv11CKZLy8xnPjQiIMmbLVDRzep+McCGkzJ402W8iWU+6t/YmoKhJqK3/+h78OpGIG+D0fepctc87hKYemwhN5WbJllP56lDf+cZ9iCLoHCtyBswbb/CTAAAps2/8CIvu4AAAAASUVORK5CYII=
predicted_idx =902
20221221 08:56:37  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
 handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7f770723f490>: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 44, in image_recognition_service
    class_id, class_name = self.get_prediction(io.BytesIO(base64.b64decode(img_bytes)).read())
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 37, in get_prediction
    return self.magenet_class_index[predicted_idx]
AttributeError: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
2022-12-21 08:59:33 Wednesday  nameko serivce shutdown!
2022-12-21 08:59:33 Wednesday  nameko serivce [name service] start!
2022-12-21 08:59:33 Wednesday  nameko serivce [producer service] start!
2022-12-21 08:59:33 Wednesday  nameko serivce [optimize service] start!
2022-12-21 08:59:33 Wednesday  nameko serivce [image_recognition service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
20221221 09:00:39  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
[W NNPACK.cpp:53] Could not initialize NNPACK! Reason: Unsupported hardware.
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7fac5cdc4220>: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 43, in image_recognition_service
    class_id, class_name = self.get_prediction(io.BytesIO(base64.b64decode(img_bytes)).read())
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 37, in get_prediction
    return self.magenet_class_index[predicted_idx]
AttributeError: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
predicted_idx =345
20221221 09:01:46  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7fac5ce13820>: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 43, in image_recognition_service
    class_id, class_name = self.get_prediction(io.BytesIO(base64.b64decode(img_bytes)).read())
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 37, in get_prediction
    return self.magenet_class_index[predicted_idx]
AttributeError: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
predicted_idx =902
20221221 09:02:09  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7fac5cdc4340>: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 43, in image_recognition_service
    class_id, class_name = self.get_prediction(io.BytesIO(base64.b64decode(img_bytes)).read())
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 37, in get_prediction
    return self.magenet_class_index[predicted_idx]
AttributeError: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
predicted_idx =902
20221221 09:02:35  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7fac5ce173d0>: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 43, in image_recognition_service
    class_id, class_name = self.get_prediction(io.BytesIO(base64.b64decode(img_bytes)).read())
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 37, in get_prediction
    return self.magenet_class_index[predicted_idx]
AttributeError: 'ImageRecognitionService' object has no attribute 'magenet_class_index'
2022-12-21 09:58:41 Wednesday  nameko serivce shutdown!
2022-12-21 09:58:41 Wednesday  nameko serivce [name service] start!
2022-12-21 09:58:41 Wednesday  nameko serivce [producer service] start!
2022-12-21 09:58:41 Wednesday  nameko serivce [optimize service] start!
2022-12-21 09:58:41 Wednesday  nameko serivce [image_recognition service] start!
starting services: generate_service
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
20221221 10:00:02  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
[W NNPACK.cpp:53] Could not initialize NNPACK! Reason: Unsupported hardware.
predicted_idx =345
20221221 10:00:02  image_recognition_service.image_recognition_service:44  INFO: class_idn02403003,class_name ox
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7f414d316610>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 45, in image_recognition_service
    return jsonify({'class_id': class_id, 'class_name': class_name})
  File "/usr/local/lib/python3.8/dist-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/usr/local/lib/python3.8/dist-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
20221221 10:01:30  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
predicted_idx =345
20221221 10:01:30  image_recognition_service.image_recognition_service:44  INFO: class_idn02403003,class_name ox
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7f414d35c6a0>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 45, in image_recognition_service
    return jsonify({'class_id': class_id, 'class_name': class_name})
  File "/usr/local/lib/python3.8/dist-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/usr/local/lib/python3.8/dist-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
2022-12-21 10:03:07 Wednesday  nameko serivce shutdown!
2022-12-21 10:03:07 Wednesday  nameko serivce [name service] start!
2022-12-21 10:03:07 Wednesday  nameko serivce [producer service] start!
2022-12-21 10:03:07 Wednesday  nameko serivce [optimize service] start!
2022-12-21 10:03:07 Wednesday  nameko serivce [image_recognition service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
20221221 10:03:35  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
[W NNPACK.cpp:53] Could not initialize NNPACK! Reason: Unsupported hardware.
predicted_idx =345
class_idn02403003,class_name ox
20221221 10:03:35  image_recognition_service.image_recognition_service:45  INFO: class_idn02403003,class_name ox
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7faf1f8eb940>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 46, in image_recognition_service
    return jsonify({'class_id': class_id, 'class_name': class_name})
  File "/usr/local/lib/python3.8/dist-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/usr/local/lib/python3.8/dist-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
20221221 10:03:56  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
predicted_idx =902
class_idn04579432,class_name whistle
20221221 10:03:56  image_recognition_service.image_recognition_service:45  INFO: class_idn04579432,class_name whistle
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7faf1f93eac0>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 46, in image_recognition_service
    return jsonify({'class_id': class_id, 'class_name': class_name})
  File "/usr/local/lib/python3.8/dist-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/usr/local/lib/python3.8/dist-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
20221221 10:04:36  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
predicted_idx =902
class_idn04579432,class_name whistle
20221221 10:04:37  image_recognition_service.image_recognition_service:45  INFO: class_idn04579432,class_name whistle
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7faf1f93a6a0>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 46, in image_recognition_service
    return jsonify({'class_id': class_id, 'class_name': class_name})
  File "/usr/local/lib/python3.8/dist-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/usr/local/lib/python3.8/dist-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
2022-12-21 10:09:29 Wednesday  nameko serivce shutdown!
2022-12-21 10:09:29 Wednesday  nameko serivce [name service] start!
2022-12-21 10:09:29 Wednesday  nameko serivce [producer service] start!
2022-12-21 10:09:29 Wednesday  nameko serivce [optimize service] start!
2022-12-21 10:09:29 Wednesday  nameko serivce [image_recognition service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
20221221 10:10:01  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
[W NNPACK.cpp:53] Could not initialize NNPACK! Reason: Unsupported hardware.
predicted_idx =902
class_idn04579432,class_name whistle
20221221 10:10:01  image_recognition_service.image_recognition_service:45  INFO: class_idn04579432,class_name whistle
20221221 10:10:49  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7f40c23802b0>: cannot identify image file <_io.BytesIO object at 0x7f40c22c8b30>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 43, in image_recognition_service
    class_id, class_name = self.get_prediction(io.BytesIO(base64.b64decode(img_bytes)).read())
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 32, in get_prediction
    tensor = self.transform_image(image_bytes=image_bytes)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 28, in transform_image
    image = Image.open(io.BytesIO(image_bytes))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2861, in open
    raise UnidentifiedImageError(
PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7f40c22c8b30>
20221221 10:11:04  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
predicted_idx =345
class_idn02403003,class_name ox
20221221 10:11:04  image_recognition_service.image_recognition_service:45  INFO: class_idn02403003,class_name ox
20221221 10:11:15  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
predicted_idx =345
class_idn02403003,class_name ox
20221221 10:11:15  image_recognition_service.image_recognition_service:45  INFO: class_idn02403003,class_name ox
20221221 10:13:09  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
predicted_idx =339
class_idn02389026,class_name sorrel
20221221 10:13:09  image_recognition_service.image_recognition_service:45  INFO: class_idn02389026,class_name sorrel
20221221 10:14:59  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
predicted_idx =348
class_idn02412080,class_name ram
20221221 10:15:00  image_recognition_service.image_recognition_service:45  INFO: class_idn02412080,class_name ram
20221221 10:15:59  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
predicted_idx =162
class_idn02088364,class_name beagle
20221221 10:15:59  image_recognition_service.image_recognition_service:45  INFO: class_idn02088364,class_name beagle
20221221 10:18:32  image_recognition_service.image_recognition_service:41  INFO: call image_recognition_service
predicted_idx =3
class_idn01491361,class_name tiger_shark
20221221 10:18:32  image_recognition_service.image_recognition_service:45  INFO: class_idn01491361,class_name tiger_shark
2022-12-21 10:20:57 Wednesday  nameko serivce shutdown!
2022-12-21 10:20:57 Wednesday  nameko serivce [name service] start!
2022-12-21 10:20:57 Wednesday  nameko serivce [producer service] start!
2022-12-21 10:20:57 Wednesday  nameko serivce [optimize service] start!
2022-12-21 10:20:57 Wednesday  nameko serivce [image_recognition service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
20221221 10:21:12  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
[W NNPACK.cpp:53] Could not initialize NNPACK! Reason: Unsupported hardware.
20221221 10:21:12  image_recognition_service.image_recognition_service:43  INFO: class_idn01491361,class_name tiger_shark
20221221 10:21:15  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 10:21:15  image_recognition_service.image_recognition_service:43  INFO: class_idn01491361,class_name tiger_shark
20221221 10:21:49  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 10:21:49  image_recognition_service.image_recognition_service:43  INFO: class_idn01491361,class_name tiger_shark
20221221 10:21:51  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 10:21:52  image_recognition_service.image_recognition_service:43  INFO: class_idn01491361,class_name tiger_shark
20221221 10:21:53  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 10:21:53  image_recognition_service.image_recognition_service:43  INFO: class_idn01491361,class_name tiger_shark
20221221 10:22:16  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 10:22:16  image_recognition_service.image_recognition_service:43  INFO: class_idn01491361,class_name tiger_shark
20221221 10:22:18  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 10:22:18  image_recognition_service.image_recognition_service:43  INFO: class_idn01491361,class_name tiger_shark
20221221 10:22:45  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 10:22:45  image_recognition_service.image_recognition_service:43  INFO: class_idn01491361,class_name tiger_shark
20221221 11:30:06  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7f528818a550>: cannot identify image file <_io.BytesIO object at 0x7f52818a9ef0>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 42, in image_recognition_service
    class_id, class_name = self.get_prediction(io.BytesIO(base64.b64decode(img_bytes)).read())
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 32, in get_prediction
    tensor = self.transform_image(image_bytes=image_bytes)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 28, in transform_image
    image = Image.open(io.BytesIO(image_bytes))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2861, in open
    raise UnidentifiedImageError(
PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7f52818a9ef0>
20221221 11:30:20  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 11:30:20  image_recognition_service.image_recognition_service:43  INFO: class_idn02412080,class_name ram
20221221 11:37:56  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 11:37:56  image_recognition_service.image_recognition_service:43  INFO: class_idn02412080,class_name ram
20221221 11:37:58  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 11:37:59  image_recognition_service.image_recognition_service:43  INFO: class_idn02412080,class_name ram
20221221 11:38:00  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 11:38:00  image_recognition_service.image_recognition_service:43  INFO: class_idn02412080,class_name ram
20221221 12:47:54  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 12:47:54  image_recognition_service.image_recognition_service:43  INFO: class_idn02412080,class_name ram
20221221 12:47:56  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 12:47:56  image_recognition_service.image_recognition_service:43  INFO: class_idn02412080,class_name ram
20221221 12:49:29  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 12:49:29  image_recognition_service.image_recognition_service:43  INFO: class_idn01697457,class_name African_crocodile
20221221 13:11:25  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221221 13:11:25  image_recognition_service.image_recognition_service:43  INFO: class_idn01601694,class_name water_ouzel
20221222 09:07:05  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221222 09:07:05  image_recognition_service.image_recognition_service:43  INFO: class_idn01601694,class_name water_ouzel
20221223 16:15:47  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20221223 16:15:47  image_recognition_service.image_recognition_service:43  INFO: class_idn02088364,class_name beagle
2023-01-04 17:00:33 Wednesday  nameko serivce shutdown!
2023-01-04 17:00:33 Wednesday  nameko serivce [name service] start!
2023-01-04 17:00:33 Wednesday  nameko serivce [producer service] start!
2023-01-04 17:00:33 Wednesday  nameko serivce [optimize service] start!
2023-01-04 17:00:33 Wednesday  nameko serivce [image_recognition service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
2023-01-04 17:00:52 Wednesday  nameko serivce shutdown!
2023-01-04 17:00:52 Wednesday  nameko serivce [name service] start!
2023-01-04 17:00:52 Wednesday  nameko serivce [producer service] start!
2023-01-04 17:00:52 Wednesday  nameko serivce [optimize service] start!
2023-01-04 17:00:52 Wednesday  nameko serivce [image_recognition service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
20230104 17:04:15  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
[W NNPACK.cpp:53] Could not initialize NNPACK! Reason: Unsupported hardware.
20230104 17:04:15  image_recognition_service.image_recognition_service:43  INFO: class_idn02403003,class_name ox
Optimization problem (res):	Positive directional derivative for linesearch
玻璃面积 24.7492
玻璃价格 75.0
玻璃k值 1.5
外墙材料面积 15.2508
外墙材料价格 69.57
外墙材料k值 0.95
最低成本（元）2917.2
20230104 17:04:43  optimize_service.optimize_service:95  INFO:      fun: 2917.19627134985
     jac: array([75.        , 24.74920654,  0.        , 69.57052612, 15.25079346,
       -0.        ])
 message: 'Positive directional derivative for linesearch'
    nfev: 35
     nit: 9
    njev: 5
  status: 8
 success: False
       x: array([24.74921845, 75.        ,  1.5       , 15.25078155, 69.57052556,
        0.95      ])
Optimization problem (res):	Positive directional derivative for linesearch
玻璃面积 24.7492
玻璃价格 75.0
玻璃k值 1.5
外墙材料面积 15.2508
外墙材料价格 69.57
外墙材料k值 0.95
最低成本（元）2917.2
20230104 17:05:01  optimize_service.optimize_service:95  INFO:      fun: 2917.19627134985
     jac: array([75.        , 24.74920654,  0.        , 69.57052612, 15.25079346,
       -0.        ])
 message: 'Positive directional derivative for linesearch'
    nfev: 35
     nit: 9
    njev: 5
  status: 8
 success: False
       x: array([24.74921845, 75.        ,  1.5       , 15.25078155, 69.57052556,
        0.95      ])
20230104 17:05:20  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:05:21  image_recognition_service.image_recognition_service:43  INFO: class_idn02088364,class_name beagle
20230104 17:06:22  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:06:22  image_recognition_service.image_recognition_service:43  INFO: class_idn02088364,class_name beagle
20230104 17:06:36  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:06:36  image_recognition_service.image_recognition_service:43  INFO: class_idn02389026,class_name sorrel
20230104 17:08:10  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:08:10  image_recognition_service.image_recognition_service:43  INFO: class_idn01734418,class_name king_snake
20230104 17:08:21  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:08:21  image_recognition_service.image_recognition_service:43  INFO: class_idn01748264,class_name Indian_cobra
20230104 17:09:41  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:09:41  image_recognition_service.image_recognition_service:43  INFO: class_idn02128925,class_name jaguar
20230104 17:09:54  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:09:54  image_recognition_service.image_recognition_service:43  INFO: class_idn02128925,class_name jaguar
20230104 17:10:11  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:10:11  image_recognition_service.image_recognition_service:43  INFO: class_idn02128925,class_name jaguar
20230104 17:10:58  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:10:59  image_recognition_service.image_recognition_service:43  INFO: class_idn02120079,class_name Arctic_fox
20230104 17:11:08  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:11:08  image_recognition_service.image_recognition_service:43  INFO: class_idn02447366,class_name badger
20230104 17:11:36  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:11:36  image_recognition_service.image_recognition_service:43  INFO: class_idn02123045,class_name tabby
20230104 17:11:47  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:11:48  image_recognition_service.image_recognition_service:43  INFO: class_idn02123045,class_name tabby
20230104 17:11:59  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:11:59  image_recognition_service.image_recognition_service:43  INFO: class_idn02120079,class_name Arctic_fox
20230104 17:12:44  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:12:44  image_recognition_service.image_recognition_service:43  INFO: class_idn01728572,class_name thunder_snake
20230104 17:13:21  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:13:21  image_recognition_service.image_recognition_service:43  INFO: class_idn02389026,class_name sorrel
20230104 17:13:30  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:13:30  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:13:41  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:13:41  image_recognition_service.image_recognition_service:43  INFO: class_idn02437616,class_name llama
20230104 17:14:13  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:14:13  image_recognition_service.image_recognition_service:43  INFO: class_idn02403003,class_name ox
20230104 17:14:21  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:14:21  image_recognition_service.image_recognition_service:43  INFO: class_idn02389026,class_name sorrel
20230104 17:14:41  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:14:41  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:10  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:10  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:13  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:13  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:14  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:15  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:16  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:16  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:17  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:17  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:19  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:19  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:26  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:26  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:28  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:28  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:29  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:30  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:31  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:31  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:33  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:33  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:34  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:35  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:36  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:36  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:37  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:37  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:17:38  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:17:38  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:35  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:35  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:37  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:37  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:38  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:38  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:39  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:39  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:40  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:40  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:42  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:42  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:48  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:48  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:50  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:50  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:51  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:51  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:52  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:52  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:53  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:53  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:54  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:54  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:55  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:56  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:57  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:57  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:58  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:18:59  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:18:59  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:19:00  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:19:01  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:19:01  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:19:02  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:19:02  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:19:03  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:19:03  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230104 17:19:04  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230104 17:19:04  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230105 08:49:22  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230105 08:49:23  image_recognition_service.image_recognition_service:43  INFO: class_idn02091032,class_name Italian_greyhound
20230105 08:50:46  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230105 08:50:46  image_recognition_service.image_recognition_service:43  INFO: class_idn02128925,class_name jaguar
2023-01-05 08:51:53 Thursday  nameko serivce shutdown!
2023-01-05 08:51:53 Thursday  nameko serivce [name service] start!
2023-01-05 08:51:53 Thursday  nameko serivce [producer service] start!
2023-01-05 08:51:53 Thursday  nameko serivce [optimize service] start!
2023-01-05 08:51:53 Thursday  nameko serivce [image_recognition service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
20230105 08:52:01  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
[W NNPACK.cpp:53] Could not initialize NNPACK! Reason: Unsupported hardware.
20230105 08:52:02  image_recognition_service.image_recognition_service:43  INFO: class_id n02128925,class_name jaguar
20230105 08:52:29  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230105 08:52:29  image_recognition_service.image_recognition_service:43  INFO: class_id n02128925,class_name jaguar
20230105 08:52:32  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230105 08:52:32  image_recognition_service.image_recognition_service:43  INFO: class_id n02128925,class_name jaguar
20230105 08:52:40  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230105 08:52:40  image_recognition_service.image_recognition_service:43  INFO: class_id n02128925,class_name jaguar
20230105 08:52:51  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230105 08:52:52  image_recognition_service.image_recognition_service:43  INFO: class_id n02091032,class_name Italian_greyhound
20230106 09:48:28  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230106 09:48:28  image_recognition_service.image_recognition_service:43  INFO: class_id n02437616,class_name llama
20230106 09:49:33  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7f7a4f21b2e0>: The size of tensor a (4) must match the size of tensor b (3) at non-singleton dimension 0
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 42, in image_recognition_service
    class_id, class_name = self.get_prediction(io.BytesIO(base64.b64decode(img_bytes)).read())
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 32, in get_prediction
    tensor = self.transform_image(image_bytes=image_bytes)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 29, in transform_image
    return my_transforms(image).unsqueeze(0)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/transforms.py", line 95, in __call__
    img = t(img)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/transforms.py", line 270, in forward
    return F.normalize(tensor, self.mean, self.std, self.inplace)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/functional.py", line 360, in normalize
    return F_t.normalize(tensor, mean=mean, std=std, inplace=inplace)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/functional_tensor.py", line 940, in normalize
    return tensor.sub_(mean).div_(std)
RuntimeError: The size of tensor a (4) must match the size of tensor b (3) at non-singleton dimension 0
20230106 09:49:49  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7f7a4f222550>: The size of tensor a (4) must match the size of tensor b (3) at non-singleton dimension 0
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 42, in image_recognition_service
    class_id, class_name = self.get_prediction(io.BytesIO(base64.b64decode(img_bytes)).read())
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 32, in get_prediction
    tensor = self.transform_image(image_bytes=image_bytes)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 29, in transform_image
    return my_transforms(image).unsqueeze(0)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/transforms.py", line 95, in __call__
    img = t(img)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/transforms.py", line 270, in forward
    return F.normalize(tensor, self.mean, self.std, self.inplace)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/functional.py", line 360, in normalize
    return F_t.normalize(tensor, mean=mean, std=std, inplace=inplace)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/functional_tensor.py", line 940, in normalize
    return tensor.sub_(mean).div_(std)
RuntimeError: The size of tensor a (4) must match the size of tensor b (3) at non-singleton dimension 0
20230106 09:50:39  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230106 09:50:40  image_recognition_service.image_recognition_service:43  INFO: class_id n01728572,class_name thunder_snake
20230106 09:50:52  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230106 09:50:52  image_recognition_service.image_recognition_service:43  INFO: class_id n02500267,class_name indri
20230106 09:51:03  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7f7a4f216340>: The size of tensor a (4) must match the size of tensor b (3) at non-singleton dimension 0
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 42, in image_recognition_service
    class_id, class_name = self.get_prediction(io.BytesIO(base64.b64decode(img_bytes)).read())
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 32, in get_prediction
    tensor = self.transform_image(image_bytes=image_bytes)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 29, in transform_image
    return my_transforms(image).unsqueeze(0)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/transforms.py", line 95, in __call__
    img = t(img)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/transforms.py", line 270, in forward
    return F.normalize(tensor, self.mean, self.std, self.inplace)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/functional.py", line 360, in normalize
    return F_t.normalize(tensor, mean=mean, std=std, inplace=inplace)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/functional_tensor.py", line 940, in normalize
    return tensor.sub_(mean).div_(std)
RuntimeError: The size of tensor a (4) must match the size of tensor b (3) at non-singleton dimension 0
Optimization problem (res):	Positive directional derivative for linesearch
玻璃面积 24.7492
玻璃价格 75.0
玻璃k值 1.5
外墙材料面积 15.2508
外墙材料价格 69.57
外墙材料k值 0.95
最低成本（元）2917.2
20230106 09:52:51  optimize_service.optimize_service:95  INFO:      fun: 2917.19627134985
     jac: array([75.        , 24.74920654,  0.        , 69.57052612, 15.25079346,
       -0.        ])
 message: 'Positive directional derivative for linesearch'
    nfev: 35
     nit: 9
    njev: 5
  status: 8
 success: False
       x: array([24.74921845, 75.        ,  1.5       , 15.25078155, 69.57052556,
        0.95      ])
20230106 10:01:50  name_service.what_your_name:18  INFO: [[1, '厚度玻璃', '3mm', 'λ', 1.03, 0.0029, 16.13], [2, '厚度玻璃', '5mm', 'λ', 1.03, 0.0049, 26.88], [3, '厚度玻璃', '6mm', 'λ', 1.03, 0.0058, 32.26], [4, '厚度玻璃', '8mm', 'λ', 1.03, 0.0078, 43.01], [5, '厚度玻璃', '10mm', 'λ', 1.03, 0.0097, 53.76], [6, '厚度玻璃', '12mm', 'λ', 1.03, 0.0117, 64.51], [7, '厚度玻璃', '15mm', 'λ', 1.03, 0.0146, 80.64], [8, '镀膜', '无镀膜', 'ε', 0.84, 0.1578, 0], [9, '镀膜', '单银LE', 'ε', 0.115, 0.2758, 14.16], [10, '镀膜', '双银LE', 'ε', 0.06, 0.2955, 26.55], [11, '中空', '6空气', 'λ', 0.0244, 4.0667, 13.28], [12, '中空', '9空气', 'λ', 0.0244, 2.7111, 15.04], [13, '中空', '12空气', 'λ', 0.0244, 2.0333, 18.59], [14, '中空', '6氩气', 'λ', 0.0173, 2.8833, 17.7], [15, '中空', '9氩气', 'λ', 0.0173, 1.9222, 19.47], [16, '中空', '12氩气', 'λ', 0.0173, 1.4417, 23.01], [17, '中空', '无镀膜', '0.84', 0.84, 4.4317, 0], [18, '中空', '单面单银LE', '0.84', 0.115, 0.6887, 14.16], [19, '中空', '单面双银LE', '0.84', 0.006, 0.0367, 26.55], [20, '中空', '双面一边单银LE一边双银LE', '0.006', 0.115, 0.0351, 40.71], [21, '中空', '双面单LE', '0.115', 0.115, 0.3734, 28.32], [22, '中空', '双面双LE', '0.006', 0.006, 0.0184, 53.1]]
20230106 10:01:50  name_service.what_your_name:20  INFO: shark8848
20230106 14:11:27  name_service.what_your_name:18  INFO: [[1, '厚度玻璃', '3mm', 'λ', 1.03, 0.0029, 16.13], [2, '厚度玻璃', '5mm', 'λ', 1.03, 0.0049, 26.88], [3, '厚度玻璃', '6mm', 'λ', 1.03, 0.0058, 32.26], [4, '厚度玻璃', '8mm', 'λ', 1.03, 0.0078, 43.01], [5, '厚度玻璃', '10mm', 'λ', 1.03, 0.0097, 53.76], [6, '厚度玻璃', '12mm', 'λ', 1.03, 0.0117, 64.51], [7, '厚度玻璃', '15mm', 'λ', 1.03, 0.0146, 80.64], [8, '镀膜', '无镀膜', 'ε', 0.84, 0.1578, 0], [9, '镀膜', '单银LE', 'ε', 0.115, 0.2758, 14.16], [10, '镀膜', '双银LE', 'ε', 0.06, 0.2955, 26.55], [11, '中空', '6空气', 'λ', 0.0244, 4.0667, 13.28], [12, '中空', '9空气', 'λ', 0.0244, 2.7111, 15.04], [13, '中空', '12空气', 'λ', 0.0244, 2.0333, 18.59], [14, '中空', '6氩气', 'λ', 0.0173, 2.8833, 17.7], [15, '中空', '9氩气', 'λ', 0.0173, 1.9222, 19.47], [16, '中空', '12氩气', 'λ', 0.0173, 1.4417, 23.01], [17, '中空', '无镀膜', '0.84', 0.84, 4.4317, 0], [18, '中空', '单面单银LE', '0.84', 0.115, 0.6887, 14.16], [19, '中空', '单面双银LE', '0.84', 0.006, 0.0367, 26.55], [20, '中空', '双面一边单银LE一边双银LE', '0.006', 0.115, 0.0351, 40.71], [21, '中空', '双面单LE', '0.115', 0.115, 0.3734, 28.32], [22, '中空', '双面双LE', '0.006', 0.006, 0.0184, 53.1]]
20230106 14:11:27  name_service.what_your_name:20  INFO: shark8848
20230106 14:11:59  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230106 14:11:59  image_recognition_service.image_recognition_service:43  INFO: class_id n02123045,class_name tabby
20230106 14:12:12  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230106 14:12:12  image_recognition_service.image_recognition_service:43  INFO: class_id n01748264,class_name Indian_cobra
20230106 14:12:31  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230106 14:12:31  image_recognition_service.image_recognition_service:43  INFO: class_id n02128925,class_name jaguar
20230106 17:28:15  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230106 17:28:15  image_recognition_service.image_recognition_service:43  INFO: class_id n02128925,class_name jaguar
20230108 10:03:21  name_service.what_your_name:18  INFO: [[1, '厚度玻璃', '3mm', 'λ', 1.03, 0.0029, 16.13], [2, '厚度玻璃', '5mm', 'λ', 1.03, 0.0049, 26.88], [3, '厚度玻璃', '6mm', 'λ', 1.03, 0.0058, 32.26], [4, '厚度玻璃', '8mm', 'λ', 1.03, 0.0078, 43.01], [5, '厚度玻璃', '10mm', 'λ', 1.03, 0.0097, 53.76], [6, '厚度玻璃', '12mm', 'λ', 1.03, 0.0117, 64.51], [7, '厚度玻璃', '15mm', 'λ', 1.03, 0.0146, 80.64], [8, '镀膜', '无镀膜', 'ε', 0.84, 0.1578, 0], [9, '镀膜', '单银LE', 'ε', 0.115, 0.2758, 14.16], [10, '镀膜', '双银LE', 'ε', 0.06, 0.2955, 26.55], [11, '中空', '6空气', 'λ', 0.0244, 4.0667, 13.28], [12, '中空', '9空气', 'λ', 0.0244, 2.7111, 15.04], [13, '中空', '12空气', 'λ', 0.0244, 2.0333, 18.59], [14, '中空', '6氩气', 'λ', 0.0173, 2.8833, 17.7], [15, '中空', '9氩气', 'λ', 0.0173, 1.9222, 19.47], [16, '中空', '12氩气', 'λ', 0.0173, 1.4417, 23.01], [17, '中空', '无镀膜', '0.84', 0.84, 4.4317, 0], [18, '中空', '单面单银LE', '0.84', 0.115, 0.6887, 14.16], [19, '中空', '单面双银LE', '0.84', 0.006, 0.0367, 26.55], [20, '中空', '双面一边单银LE一边双银LE', '0.006', 0.115, 0.0351, 40.71], [21, '中空', '双面单LE', '0.115', 0.115, 0.3734, 28.32], [22, '中空', '双面双LE', '0.006', 0.006, 0.0184, 53.1]]
20230108 10:03:21  name_service.what_your_name:20  INFO: shark8848
20230108 10:46:45  name_service.what_your_name:18  INFO: [[1, '厚度玻璃', '3mm', 'λ', 1.03, 0.0029, 16.13], [2, '厚度玻璃', '5mm', 'λ', 1.03, 0.0049, 26.88], [3, '厚度玻璃', '6mm', 'λ', 1.03, 0.0058, 32.26], [4, '厚度玻璃', '8mm', 'λ', 1.03, 0.0078, 43.01], [5, '厚度玻璃', '10mm', 'λ', 1.03, 0.0097, 53.76], [6, '厚度玻璃', '12mm', 'λ', 1.03, 0.0117, 64.51], [7, '厚度玻璃', '15mm', 'λ', 1.03, 0.0146, 80.64], [8, '镀膜', '无镀膜', 'ε', 0.84, 0.1578, 0], [9, '镀膜', '单银LE', 'ε', 0.115, 0.2758, 14.16], [10, '镀膜', '双银LE', 'ε', 0.06, 0.2955, 26.55], [11, '中空', '6空气', 'λ', 0.0244, 4.0667, 13.28], [12, '中空', '9空气', 'λ', 0.0244, 2.7111, 15.04], [13, '中空', '12空气', 'λ', 0.0244, 2.0333, 18.59], [14, '中空', '6氩气', 'λ', 0.0173, 2.8833, 17.7], [15, '中空', '9氩气', 'λ', 0.0173, 1.9222, 19.47], [16, '中空', '12氩气', 'λ', 0.0173, 1.4417, 23.01], [17, '中空', '无镀膜', '0.84', 0.84, 4.4317, 0], [18, '中空', '单面单银LE', '0.84', 0.115, 0.6887, 14.16], [19, '中空', '单面双银LE', '0.84', 0.006, 0.0367, 26.55], [20, '中空', '双面一边单银LE一边双银LE', '0.006', 0.115, 0.0351, 40.71], [21, '中空', '双面单LE', '0.115', 0.115, 0.3734, 28.32], [22, '中空', '双面双LE', '0.006', 0.006, 0.0184, 53.1]]
20230108 10:46:45  name_service.what_your_name:20  INFO: shark8848
20230108 10:47:17  name_service.what_your_name:18  INFO: [[1, '厚度玻璃', '3mm', 'λ', 1.03, 0.0029, 16.13], [2, '厚度玻璃', '5mm', 'λ', 1.03, 0.0049, 26.88], [3, '厚度玻璃', '6mm', 'λ', 1.03, 0.0058, 32.26], [4, '厚度玻璃', '8mm', 'λ', 1.03, 0.0078, 43.01], [5, '厚度玻璃', '10mm', 'λ', 1.03, 0.0097, 53.76], [6, '厚度玻璃', '12mm', 'λ', 1.03, 0.0117, 64.51], [7, '厚度玻璃', '15mm', 'λ', 1.03, 0.0146, 80.64], [8, '镀膜', '无镀膜', 'ε', 0.84, 0.1578, 0], [9, '镀膜', '单银LE', 'ε', 0.115, 0.2758, 14.16], [10, '镀膜', '双银LE', 'ε', 0.06, 0.2955, 26.55], [11, '中空', '6空气', 'λ', 0.0244, 4.0667, 13.28], [12, '中空', '9空气', 'λ', 0.0244, 2.7111, 15.04], [13, '中空', '12空气', 'λ', 0.0244, 2.0333, 18.59], [14, '中空', '6氩气', 'λ', 0.0173, 2.8833, 17.7], [15, '中空', '9氩气', 'λ', 0.0173, 1.9222, 19.47], [16, '中空', '12氩气', 'λ', 0.0173, 1.4417, 23.01], [17, '中空', '无镀膜', '0.84', 0.84, 4.4317, 0], [18, '中空', '单面单银LE', '0.84', 0.115, 0.6887, 14.16], [19, '中空', '单面双银LE', '0.84', 0.006, 0.0367, 26.55], [20, '中空', '双面一边单银LE一边双银LE', '0.006', 0.115, 0.0351, 40.71], [21, '中空', '双面单LE', '0.115', 0.115, 0.3734, 28.32], [22, '中空', '双面双LE', '0.006', 0.006, 0.0184, 53.1]]
20230108 10:47:17  name_service.what_your_name:20  INFO: shark8848
20230108 10:50:32  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230108 10:50:33  image_recognition_service.image_recognition_service:43  INFO: class_id n02229544,class_name cricket
20230108 10:50:50  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230108 10:50:50  image_recognition_service.image_recognition_service:43  INFO: class_id n02229544,class_name cricket
20230108 10:51:34  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230108 10:51:35  image_recognition_service.image_recognition_service:43  INFO: class_id n02398521,class_name hippopotamus
20230108 10:51:47  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230108 10:51:47  image_recognition_service.image_recognition_service:43  INFO: class_id n02398521,class_name hippopotamus
20230108 10:52:28  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230108 10:52:28  image_recognition_service.image_recognition_service:43  INFO: class_id n02391049,class_name zebra
20230109 09:55:56  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230109 09:55:56  image_recognition_service.image_recognition_service:43  INFO: class_id n02391049,class_name zebra
20230121 17:53:21  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230121 17:53:22  image_recognition_service.image_recognition_service:43  INFO: class_id n02391049,class_name zebra
20230121 17:53:57  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230121 17:53:57  image_recognition_service.image_recognition_service:43  INFO: class_id n02391049,class_name zebra
20230207 15:26:23  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
error handling worker <WorkerContext [image_recognition_service.image_recognition_service] at 0x7f7a4f230760>: The size of tensor a (4) must match the size of tensor b (3) at non-singleton dimension 0
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 42, in image_recognition_service
    class_id, class_name = self.get_prediction(io.BytesIO(base64.b64decode(img_bytes)).read())
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 32, in get_prediction
    tensor = self.transform_image(image_bytes=image_bytes)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./image_recognition_service.py", line 29, in transform_image
    return my_transforms(image).unsqueeze(0)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/transforms.py", line 95, in __call__
    img = t(img)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/transforms.py", line 270, in forward
    return F.normalize(tensor, self.mean, self.std, self.inplace)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/functional.py", line 360, in normalize
    return F_t.normalize(tensor, mean=mean, std=std, inplace=inplace)
  File "/usr/local/lib/python3.8/dist-packages/torchvision/transforms/functional_tensor.py", line 940, in normalize
    return tensor.sub_(mean).div_(std)
RuntimeError: The size of tensor a (4) must match the size of tensor b (3) at non-singleton dimension 0
20230207 15:27:27  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230207 15:27:27  image_recognition_service.image_recognition_service:43  INFO: class_id n02091831,class_name Saluki
20230207 16:14:41  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230207 16:14:41  image_recognition_service.image_recognition_service:43  INFO: class_id n02091831,class_name Saluki
20230207 16:31:43  image_recognition_service.image_recognition_service:40  INFO: call image_recognition_service
20230207 16:31:44  image_recognition_service.image_recognition_service:43  INFO: class_id n02091831,class_name Saluki
2023-02-10 11:40:04 Friday  nameko serivce shutdown!
2023-02-10 11:40:04 Friday  nameko serivce [name service] start!
2023-02-10 11:40:04 Friday  nameko serivce [producer service] start!
2023-02-10 11:40:04 Friday  nameko serivce [optimize service] start!
2023-02-10 11:40:04 Friday  nameko serivce [image_recognition service] start!
2023-02-10 11:40:04 Friday  nameko serivce [image_recognition service] start!
Error: No module named 'projectManager'
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
2023-02-10 11:40:56 Friday  nameko serivce shutdown!
2023-02-10 11:40:56 Friday  nameko serivce [name service] start!
2023-02-10 11:40:56 Friday  nameko serivce [producer service] start!
2023-02-10 11:40:56 Friday  nameko serivce [optimize service] start!
2023-02-10 11:40:56 Friday  nameko serivce [image_recognition service] start!
2023-02-10 11:40:56 Friday  nameko serivce [image_recognition service] start!
Error: Service class must define a `name` attribute (projectService.ProjectService)
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
2023-02-10 11:47:29 Friday  nameko serivce shutdown!
2023-02-10 11:47:29 Friday  nameko serivce [name service] start!
2023-02-10 11:47:29 Friday  nameko serivce [producer service] start!
2023-02-10 11:47:29 Friday  nameko serivce [optimize service] start!
2023-02-10 11:47:29 Friday  nameko serivce [image_recognition service] start!
2023-02-10 11:47:29 Friday  nameko serivce [image_recognition service] start!
starting services: projectService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
20230210 12:15:34  name_service.what_your_name:18  INFO: [[1, '厚度玻璃', '3mm', 'λ', 1.03, 0.0029, 16.13], [2, '厚度玻璃', '5mm', 'λ', 1.03, 0.0049, 26.88], [3, '厚度玻璃', '6mm', 'λ', 1.03, 0.0058, 32.26], [4, '厚度玻璃', '8mm', 'λ', 1.03, 0.0078, 43.01], [5, '厚度玻璃', '10mm', 'λ', 1.03, 0.0097, 53.76], [6, '厚度玻璃', '12mm', 'λ', 1.03, 0.0117, 64.51], [7, '厚度玻璃', '15mm', 'λ', 1.03, 0.0146, 80.64], [8, '镀膜', '无镀膜', 'ε', 0.84, 0.1578, 0], [9, '镀膜', '单银LE', 'ε', 0.115, 0.2758, 14.16], [10, '镀膜', '双银LE', 'ε', 0.06, 0.2955, 26.55], [11, '中空', '6空气', 'λ', 0.0244, 4.0667, 13.28], [12, '中空', '9空气', 'λ', 0.0244, 2.7111, 15.04], [13, '中空', '12空气', 'λ', 0.0244, 2.0333, 18.59], [14, '中空', '6氩气', 'λ', 0.0173, 2.8833, 17.7], [15, '中空', '9氩气', 'λ', 0.0173, 1.9222, 19.47], [16, '中空', '12氩气', 'λ', 0.0173, 1.4417, 23.01], [17, '中空', '无镀膜', '0.84', 0.84, 4.4317, 0], [18, '中空', '单面单银LE', '0.84', 0.115, 0.6887, 14.16], [19, '中空', '单面双银LE', '0.84', 0.006, 0.0367, 26.55], [20, '中空', '双面一边单银LE一边双银LE', '0.006', 0.115, 0.0351, 40.71], [21, '中空', '双面单LE', '0.115', 0.115, 0.3734, 28.32], [22, '中空', '双面双LE', '0.006', 0.006, 0.0184, 53.1]]
20230210 12:15:34  name_service.what_your_name:20  INFO: shark8848
error handling worker <WorkerContext [projectService.get_building_info] at 0x7f1f775bb970>: [Errno 2] No such file or directory: 'project.json'
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./projectService.py", line 21, in get_building_info
    with open("project.json") as f:
FileNotFoundError: [Errno 2] No such file or directory: 'project.json'
error handling worker <WorkerContext [projectService.get_project_info] at 0x7f1f7751b370>: [Errno 2] No such file or directory: 'project.json'
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./projectService.py", line 9, in get_project_info
    with open("project.json") as f:
FileNotFoundError: [Errno 2] No such file or directory: 'project.json'
error handling worker <WorkerContext [projectService.get_project_info] at 0x7f1f7751b400>: [Errno 2] No such file or directory: 'project.json'
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./projectService.py", line 9, in get_project_info
    with open("project.json") as f:
FileNotFoundError: [Errno 2] No such file or directory: 'project.json'
2023-02-10 12:40:38 Friday  nameko serivce shutdown!
2023-02-10 12:40:38 Friday  nameko serivce [name service] start!
2023-02-10 12:40:38 Friday  nameko serivce [producer service] start!
2023-02-10 12:40:38 Friday  nameko serivce [optimize service] start!
2023-02-10 12:40:38 Friday  nameko serivce [image_recognition service] start!
2023-02-10 12:40:38 Friday  nameko serivce [image_recognition service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: projectService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
error handling worker <WorkerContext [projectService.get_project_info] at 0x7f003ad5bbe0>: name 'project_json' is not defined
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/demo/nameko_server/./projectService.py", line 10, in get_project_info
    with open(project_json) as f:
NameError: name 'project_json' is not defined
2023-02-10 12:43:22 Friday  nameko serivce shutdown!
2023-02-10 12:43:22 Friday  nameko serivce [name service] start!
2023-02-10 12:43:22 Friday  nameko serivce [producer service] start!
2023-02-10 12:43:22 Friday  nameko serivce [optimize service] start!
2023-02-10 12:43:22 Friday  nameko serivce [image_recognition service] start!
2023-02-10 12:43:22 Friday  nameko serivce [image_recognition service] start!
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: projectService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
2023-02-10 14:48:16 Friday  nameko serivce shutdown!
2023-02-10 14:48:16 Friday  nameko serivce [name service] start!
2023-02-10 14:48:16 Friday  nameko serivce [producer service] start!
2023-02-10 14:48:16 Friday  nameko serivce [optimize service] start!
2023-02-10 14:48:16 Friday  nameko serivce [image_recognition service] start!
2023-02-10 14:48:16 Friday  nameko serivce [projectService service] start!
2023-02-10 14:48:16 Friday  nameko serivce [organizationsService service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: projectService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: organizationsService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
2023-02-10 15:04:36 Friday  nameko serivce shutdown!
2023-02-10 15:04:36 Friday  nameko serivce [name service] start!
2023-02-10 15:04:36 Friday  nameko serivce [producer service] start!
2023-02-10 15:04:36 Friday  nameko serivce [optimize service] start!
2023-02-10 15:04:36 Friday  nameko serivce [image_recognition service] start!
2023-02-10 15:04:36 Friday  nameko serivce [projectService service] start!
2023-02-10 15:04:36 Friday  nameko serivce [organizationsService service] start!
starting services: projectService
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: organizationsService
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
2023-02-10 15:07:14 Friday  nameko serivce shutdown!
2023-02-10 15:07:14 Friday  nameko serivce [name service] start!
2023-02-10 15:07:14 Friday  nameko serivce [producer service] start!
2023-02-10 15:07:14 Friday  nameko serivce [optimize service] start!
2023-02-10 15:07:14 Friday  nameko serivce [image_recognition service] start!
2023-02-10 15:07:14 Friday  nameko serivce [projectService service] start!
2023-02-10 15:07:14 Friday  nameko serivce [organizationsService service] start!
starting services: organizationsService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: projectService
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
2023-02-10 15:15:02 Friday  nameko serivce shutdown!
2023-02-10 15:15:02 Friday  nameko serivce [name service] start!
2023-02-10 15:15:02 Friday  nameko serivce [producer service] start!
2023-02-10 15:15:02 Friday  nameko serivce [optimize service] start!
2023-02-10 15:15:02 Friday  nameko serivce [image_recognition service] start!
2023-02-10 15:15:02 Friday  nameko serivce [projectService service] start!
2023-02-10 15:15:02 Friday  nameko serivce [organizationsService service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: projectService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: organizationsService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.8/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
starting services: image_recognition_service
Connected to amqp://guest:**@192.168.1.19:5672//
2023-02-12 11:10:22 Sunday  nameko serivce shutdown!
2023-02-12 11:10:22 Sunday  nameko serivce [name service] start!
2023-02-12 11:10:22 Sunday  nameko serivce [producer service] start!
2023-02-12 11:10:22 Sunday  nameko serivce [optimize service] start!
2023-02-12 11:10:22 Sunday  nameko serivce [image_recognition service] start!
2023-02-12 11:10:22 Sunday  nameko serivce [projectService service] start!
2023-02-12 11:10:22 Sunday  nameko serivce [organizationsService service] start!
Traceback (most recent call last):
  File "/usr/local/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/commands.py", line 109, in main
    import eventlet
  File "/usr/local/lib/python3.8/dist-packages/eventlet/__init__.py", line 17, in <module>
    from eventlet import convenience
  File "/usr/local/lib/python3.8/dist-packages/eventlet/convenience.py", line 7, in <module>
    from eventlet.green import socket
  File "/usr/local/lib/python3.8/dist-packages/eventlet/green/socket.py", line 4, in <module>
    __import__('eventlet.green._socket_nodns')
  File "/usr/local/lib/python3.8/dist-packages/eventlet/green/_socket_nodns.py", line 11, in <module>
    from eventlet import greenio
  File "/usr/local/lib/python3.8/dist-packages/eventlet/greenio/__init__.py", line 3, in <module>
    from eventlet.greenio.base import *  # noqa
  File "/usr/local/lib/python3.8/dist-packages/eventlet/greenio/base.py", line 473, in <module>
    from OpenSSL import SSL
  File "/usr/lib/python3/dist-packages/OpenSSL/__init__.py", line 8, in <module>
    from OpenSSL import crypto, SSL
  File "/usr/lib/python3/dist-packages/OpenSSL/crypto.py", line 1550, in <module>
    class X509StoreFlags(object):
  File "/usr/lib/python3/dist-packages/OpenSSL/crypto.py", line 1570, in X509StoreFlags
    CB_ISSUER_CHECK = _lib.X509_V_FLAG_CB_ISSUER_CHECK
AttributeError: module 'lib' has no attribute 'X509_V_FLAG_CB_ISSUER_CHECK'
Traceback (most recent call last):
  File "/usr/local/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/commands.py", line 109, in main
    import eventlet
  File "/usr/local/lib/python3.8/dist-packages/eventlet/__init__.py", line 17, in <module>
    from eventlet import convenience
  File "/usr/local/lib/python3.8/dist-packages/eventlet/convenience.py", line 7, in <module>
    from eventlet.green import socket
  File "/usr/local/lib/python3.8/dist-packages/eventlet/green/socket.py", line 4, in <module>
    __import__('eventlet.green._socket_nodns')
  File "/usr/local/lib/python3.8/dist-packages/eventlet/green/_socket_nodns.py", line 11, in <module>
    from eventlet import greenio
  File "/usr/local/lib/python3.8/dist-packages/eventlet/greenio/__init__.py", line 3, in <module>
    from eventlet.greenio.base import *  # noqa
  File "/usr/local/lib/python3.8/dist-packages/eventlet/greenio/base.py", line 473, in <module>
    from OpenSSL import SSL
  File "/usr/lib/python3/dist-packages/OpenSSL/__init__.py", line 8, in <module>
    from OpenSSL import crypto, SSL
  File "/usr/lib/python3/dist-packages/OpenSSL/crypto.py", line 1550, in <module>
    class X509StoreFlags(object):
  File "/usr/lib/python3/dist-packages/OpenSSL/crypto.py", line 1570, in X509StoreFlags
    CB_ISSUER_CHECK = _lib.X509_V_FLAG_CB_ISSUER_CHECK
AttributeError: module 'lib' has no attribute 'X509_V_FLAG_CB_ISSUER_CHECK'
Traceback (most recent call last):
  File "/usr/local/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/commands.py", line 109, in main
    import eventlet
  File "/usr/local/lib/python3.8/dist-packages/eventlet/__init__.py", line 17, in <module>
    from eventlet import convenience
  File "/usr/local/lib/python3.8/dist-packages/eventlet/convenience.py", line 7, in <module>
    from eventlet.green import socket
  File "/usr/local/lib/python3.8/dist-packages/eventlet/green/socket.py", line 4, in <module>
    __import__('eventlet.green._socket_nodns')
  File "/usr/local/lib/python3.8/dist-packages/eventlet/green/_socket_nodns.py", line 11, in <module>
    from eventlet import greenio
  File "/usr/local/lib/python3.8/dist-packages/eventlet/greenio/__init__.py", line 3, in <module>
    from eventlet.greenio.base import *  # noqa
  File "/usr/local/lib/python3.8/dist-packages/eventlet/greenio/base.py", line 473, in <module>
    from OpenSSL import SSL
  File "/usr/lib/python3/dist-packages/OpenSSL/__init__.py", line 8, in <module>
    from OpenSSL import crypto, SSL
  File "/usr/lib/python3/dist-packages/OpenSSL/crypto.py", line 1550, in <module>
    class X509StoreFlags(object):
  File "/usr/lib/python3/dist-packages/OpenSSL/crypto.py", line 1570, in X509StoreFlags
    CB_ISSUER_CHECK = _lib.X509_V_FLAG_CB_ISSUER_CHECK
AttributeError: module 'lib' has no attribute 'X509_V_FLAG_CB_ISSUER_CHECK'
Traceback (most recent call last):
  File "/usr/local/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/commands.py", line 109, in main
    import eventlet
  File "/usr/local/lib/python3.8/dist-packages/eventlet/__init__.py", line 17, in <module>
    from eventlet import convenience
  File "/usr/local/lib/python3.8/dist-packages/eventlet/convenience.py", line 7, in <module>
    from eventlet.green import socket
  File "/usr/local/lib/python3.8/dist-packages/eventlet/green/socket.py", line 4, in <module>
    __import__('eventlet.green._socket_nodns')
  File "/usr/local/lib/python3.8/dist-packages/eventlet/green/_socket_nodns.py", line 11, in <module>
    from eventlet import greenio
  File "/usr/local/lib/python3.8/dist-packages/eventlet/greenio/__init__.py", line 3, in <module>
    from eventlet.greenio.base import *  # noqa
  File "/usr/local/lib/python3.8/dist-packages/eventlet/greenio/base.py", line 473, in <module>
    from OpenSSL import SSL
  File "/usr/lib/python3/dist-packages/OpenSSL/__init__.py", line 8, in <module>
    from OpenSSL import crypto, SSL
  File "/usr/lib/python3/dist-packages/OpenSSL/crypto.py", line 1550, in <module>
    class X509StoreFlags(object):
  File "/usr/lib/python3/dist-packages/OpenSSL/crypto.py", line 1570, in X509StoreFlags
    CB_ISSUER_CHECK = _lib.X509_V_FLAG_CB_ISSUER_CHECK
AttributeError: module 'lib' has no attribute 'X509_V_FLAG_CB_ISSUER_CHECK'
Traceback (most recent call last):
  File "/usr/local/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/commands.py", line 109, in main
    import eventlet
  File "/usr/local/lib/python3.8/dist-packages/eventlet/__init__.py", line 17, in <module>
    from eventlet import convenience
  File "/usr/local/lib/python3.8/dist-packages/eventlet/convenience.py", line 7, in <module>
    from eventlet.green import socket
  File "/usr/local/lib/python3.8/dist-packages/eventlet/green/socket.py", line 4, in <module>
    __import__('eventlet.green._socket_nodns')
  File "/usr/local/lib/python3.8/dist-packages/eventlet/green/_socket_nodns.py", line 11, in <module>
    from eventlet import greenio
  File "/usr/local/lib/python3.8/dist-packages/eventlet/greenio/__init__.py", line 3, in <module>
    from eventlet.greenio.base import *  # noqa
  File "/usr/local/lib/python3.8/dist-packages/eventlet/greenio/base.py", line 473, in <module>
    from OpenSSL import SSL
  File "/usr/lib/python3/dist-packages/OpenSSL/__init__.py", line 8, in <module>
    from OpenSSL import crypto, SSL
  File "/usr/lib/python3/dist-packages/OpenSSL/crypto.py", line 1550, in <module>
    class X509StoreFlags(object):
  File "/usr/lib/python3/dist-packages/OpenSSL/crypto.py", line 1570, in X509StoreFlags
    CB_ISSUER_CHECK = _lib.X509_V_FLAG_CB_ISSUER_CHECK
AttributeError: module 'lib' has no attribute 'X509_V_FLAG_CB_ISSUER_CHECK'
Traceback (most recent call last):
  File "/usr/local/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/usr/local/lib/python3.8/dist-packages/nameko/cli/commands.py", line 109, in main
    import eventlet
  File "/usr/local/lib/python3.8/dist-packages/eventlet/__init__.py", line 17, in <module>
    from eventlet import convenience
  File "/usr/local/lib/python3.8/dist-packages/eventlet/convenience.py", line 7, in <module>
    from eventlet.green import socket
  File "/usr/local/lib/python3.8/dist-packages/eventlet/green/socket.py", line 4, in <module>
    __import__('eventlet.green._socket_nodns')
  File "/usr/local/lib/python3.8/dist-packages/eventlet/green/_socket_nodns.py", line 11, in <module>
    from eventlet import greenio
  File "/usr/local/lib/python3.8/dist-packages/eventlet/greenio/__init__.py", line 3, in <module>
    from eventlet.greenio.base import *  # noqa
  File "/usr/local/lib/python3.8/dist-packages/eventlet/greenio/base.py", line 473, in <module>
    from OpenSSL import SSL
  File "/usr/lib/python3/dist-packages/OpenSSL/__init__.py", line 8, in <module>
    from OpenSSL import crypto, SSL
  File "/usr/lib/python3/dist-packages/OpenSSL/crypto.py", line 1550, in <module>
    class X509StoreFlags(object):
  File "/usr/lib/python3/dist-packages/OpenSSL/crypto.py", line 1570, in X509StoreFlags
    CB_ISSUER_CHECK = _lib.X509_V_FLAG_CB_ISSUER_CHECK
AttributeError: module 'lib' has no attribute 'X509_V_FLAG_CB_ISSUER_CHECK'
2023-02-12 11:34:42 Sunday  nameko serivce shutdown!
2023-02-12 11:34:42 Sunday  nameko serivce [name service] start!
2023-02-12 11:34:42 Sunday  nameko serivce [producer service] start!
2023-02-12 11:34:42 Sunday  nameko serivce [optimize service] start!
2023-02-12 11:34:42 Sunday  nameko serivce [image_recognition service] start!
2023-02-12 11:34:42 Sunday  nameko serivce [projectService service] start!
2023-02-12 11:34:42 Sunday  nameko serivce [organizationsService service] start!
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./image_recognition_service.py", line 4, in <module>
    from torchvision import models
ModuleNotFoundError: No module named 'torchvision'
starting services: organizationsService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: generate_service
starting services: projectService
Connected to amqp://guest:**@192.168.1.19:5672//
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
2023-02-13 16:23:35 Monday  nameko serivce shutdown!
2023-02-13 16:23:35 Monday  nameko serivce [name service] start!
2023-02-13 16:23:35 Monday  nameko serivce [producer service] start!
2023-02-13 16:23:35 Monday  nameko serivce [optimize service] start!
2023-02-13 16:23:35 Monday  nameko serivce [image_recognition service] start!
2023-02-13 16:23:35 Monday  nameko serivce [projectService service] start!
2023-02-13 16:23:35 Monday  nameko serivce [organizationsService service] start!
2023-02-13 16:23:35 Monday  nameko serivce [usersService service] start!
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./image_recognition_service.py", line 4, in <module>
    from torchvision import models
ModuleNotFoundError: No module named 'torchvision'
starting services: projectService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: generate_service
starting services: name_service
starting services: organizationsService
Connected to amqp://guest:**@192.168.1.19:5672//
Connected to amqp://guest:**@192.168.1.19:5672//
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: userService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
2023-02-13 17:14:41 Monday  nameko serivce shutdown!
2023-02-13 17:14:41 Monday  nameko serivce [name service] start!
2023-02-13 17:14:41 Monday  nameko serivce [producer service] start!
2023-02-13 17:14:41 Monday  nameko serivce [optimize service] start!
2023-02-13 17:14:41 Monday  nameko serivce [image_recognition service] start!
2023-02-13 17:14:41 Monday  nameko serivce [projectService service] start!
2023-02-13 17:14:41 Monday  nameko serivce [organizationsService service] start!
2023-02-13 17:14:41 Monday  nameko serivce [usersService service] start!
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./image_recognition_service.py", line 4, in <module>
    from torchvision import models
ModuleNotFoundError: No module named 'torchvision'
starting services: projectService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: organizationsService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: userService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
2023-02-13 17:34:19 Monday  nameko serivce shutdown!
2023-02-13 17:34:19 Monday  nameko serivce [name service] start!
2023-02-13 17:34:19 Monday  nameko serivce [producer service] start!
2023-02-13 17:34:19 Monday  nameko serivce [optimize service] start!
2023-02-13 17:34:19 Monday  nameko serivce [image_recognition service] start!
2023-02-13 17:34:19 Monday  nameko serivce [projectService service] start!
2023-02-13 17:34:19 Monday  nameko serivce [organizationsService service] start!
2023-02-13 17:34:19 Monday  nameko serivce [usersService service] start!
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./image_recognition_service.py", line 4, in <module>
    from torchvision import models
ModuleNotFoundError: No module named 'torchvision'
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: organizationsService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: projectService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: name_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
2023-02-13 17:36:04 Monday  nameko serivce shutdown!
2023-02-13 17:36:04 Monday  nameko serivce [name service] start!
2023-02-13 17:36:04 Monday  nameko serivce [producer service] start!
2023-02-13 17:36:04 Monday  nameko serivce [optimize service] start!
2023-02-13 17:36:04 Monday  nameko serivce [image_recognition service] start!
2023-02-13 17:36:04 Monday  nameko serivce [projectService service] start!
2023-02-13 17:36:04 Monday  nameko serivce [organizationsService service] start!
2023-02-13 17:36:04 Monday  nameko serivce [usersService service] start!
starting services: generate_service
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: organizationsService
Connected to amqp://guest:**@192.168.1.19:5672//
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./image_recognition_service.py", line 4, in <module>
    from torchvision import models
ModuleNotFoundError: No module named 'torchvision'
starting services: name_service
starting services: projectService
Connected to amqp://guest:**@192.168.1.19:5672//
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
starting services: optimize_service
Connected to amqp://guest:**@192.168.1.19:5672//
error handling worker <WorkerContext [usersService.Authentication] at 0x7ff148244700>: 'dict' object has no attribute 'read'
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 48, in Authentication
    json_user = json.load(user)
  File "/usr/lib/python3.8/json/__init__.py", line 293, in load
    return loads(fp.read(),
AttributeError: 'dict' object has no attribute 'read'
2023-02-14 13:34:48 Tuesday  nameko serivce [usersService service] start!
20230214 13:34:49  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 13:34:49  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 13:34:49  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 13:35:22  usersService.add_user:24  INFO: user{'username': 'sunhy5', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 13:35:22  usersService.add_user:26  INFO: username sunhy5
20230214 13:35:22  usersService.add_user:28  INFO: password0 sunhy
20230214 13:35:22  usersService.add_user:30  INFO: password pbkdf2:sha256:260000$WMJOGooCwpZXQjdt$cfd80f301ff3ff392d689ddaacfd618b4849858cc8630c9bf9f76f8fde58ddec
20230214 13:35:22  usersService.add_user:32  INFO: role admin
20230214 13:35:22  usersService.add_user:34  INFO: organization apoco
20230214 13:35:22  usersService.add_user:40  INFO: befor insert {'username': 'sunhy5', 'password': 'pbkdf2:sha256:260000$WMJOGooCwpZXQjdt$cfd80f301ff3ff392d689ddaacfd618b4849858cc8630c9bf9f76f8fde58ddec', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 13:35:22,914 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 13:35:22,914 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 13:35:22,915 INFO sqlalchemy.engine.Engine [generated in 0.00027s] ('sunhy5', 'pbkdf2:sha256:260000$WMJOGooCwpZXQjdt$cfd80f301ff3ff392d689ddaacfd618b4849858cc8630c9bf9f76f8fde58ddec', 'admin', 'apoco', '1')
[generated in 0.00027s] ('sunhy5', 'pbkdf2:sha256:260000$WMJOGooCwpZXQjdt$cfd80f301ff3ff392d689ddaacfd618b4849858cc8630c9bf9f76f8fde58ddec', 'admin', 'apoco', '1')
2023-02-14 13:35:22,915 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 13:35:22  usersService.add_user:46  INFO: excpetion (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy5', 'pbkdf2:sha256:260000$WMJOGooCwpZXQjdt$cfd80f301ff3ff392d689ddaacfd618b4849858cc8630c9bf9f76f8fde58ddec', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 13:35:22  usersService.add_user:48  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy5', 'pbkdf2:sha256:260000$WMJOGooCwpZXQjdt$cfd80f301ff3ff392d689ddaacfd618b4849858cc8630c9bf9f76f8fde58ddec', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
error handling worker <WorkerContext [usersService.add_user] at 0x7f0e550850a0>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 49, in add_user
    return jsonify(error_code='-1',message= 'User added failed.')
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
20230214 13:37:32  usersService.add_user:24  INFO: user{'username': 'sunhy5', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 13:37:32  usersService.add_user:26  INFO: username sunhy5
20230214 13:37:32  usersService.add_user:28  INFO: password0 sunhy
20230214 13:37:32  usersService.add_user:30  INFO: password pbkdf2:sha256:260000$MuMRbiR9orDM5sww$7da3f73334f54ffd6256869e24ced40f176ef4c366528c97fda316a5fbe5ad74
20230214 13:37:32  usersService.add_user:32  INFO: role admin
20230214 13:37:32  usersService.add_user:34  INFO: organization apoco
20230214 13:37:32  usersService.add_user:40  INFO: befor insert {'username': 'sunhy5', 'password': 'pbkdf2:sha256:260000$MuMRbiR9orDM5sww$7da3f73334f54ffd6256869e24ced40f176ef4c366528c97fda316a5fbe5ad74', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 13:37:32,627 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 13:37:32,627 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 13:37:32,627 INFO sqlalchemy.engine.Engine [cached since 129.7s ago] ('sunhy5', 'pbkdf2:sha256:260000$MuMRbiR9orDM5sww$7da3f73334f54ffd6256869e24ced40f176ef4c366528c97fda316a5fbe5ad74', 'admin', 'apoco', '1')
[cached since 129.7s ago] ('sunhy5', 'pbkdf2:sha256:260000$MuMRbiR9orDM5sww$7da3f73334f54ffd6256869e24ced40f176ef4c366528c97fda316a5fbe5ad74', 'admin', 'apoco', '1')
2023-02-14 13:37:32,627 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 13:37:32  usersService.add_user:46  INFO: excpetion (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy5', 'pbkdf2:sha256:260000$MuMRbiR9orDM5sww$7da3f73334f54ffd6256869e24ced40f176ef4c366528c97fda316a5fbe5ad74', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 13:37:32  usersService.add_user:48  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy5', 'pbkdf2:sha256:260000$MuMRbiR9orDM5sww$7da3f73334f54ffd6256869e24ced40f176ef4c366528c97fda316a5fbe5ad74', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
error handling worker <WorkerContext [usersService.add_user] at 0x7f0e5506ffa0>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 49, in add_user
    return jsonify(error_code='-1',message= 'User added failed.')
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
20230214 13:38:00  usersService.add_user:24  INFO: user{'username': 'sunhy6', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 13:38:00  usersService.add_user:26  INFO: username sunhy6
20230214 13:38:00  usersService.add_user:28  INFO: password0 sunhy
20230214 13:38:00  usersService.add_user:30  INFO: password pbkdf2:sha256:260000$aIMwgmsIjPijLWvJ$a6c53a79ef6db54ad803843d5a814968f7a4f868acebc49ffd64c6ede8e8de57
20230214 13:38:00  usersService.add_user:32  INFO: role admin
20230214 13:38:00  usersService.add_user:34  INFO: organization apoco
20230214 13:38:00  usersService.add_user:40  INFO: befor insert {'username': 'sunhy6', 'password': 'pbkdf2:sha256:260000$aIMwgmsIjPijLWvJ$a6c53a79ef6db54ad803843d5a814968f7a4f868acebc49ffd64c6ede8e8de57', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 13:38:00,393 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 13:38:00,393 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 13:38:00,393 INFO sqlalchemy.engine.Engine [cached since 157.5s ago] ('sunhy6', 'pbkdf2:sha256:260000$aIMwgmsIjPijLWvJ$a6c53a79ef6db54ad803843d5a814968f7a4f868acebc49ffd64c6ede8e8de57', 'admin', 'apoco', '1')
[cached since 157.5s ago] ('sunhy6', 'pbkdf2:sha256:260000$aIMwgmsIjPijLWvJ$a6c53a79ef6db54ad803843d5a814968f7a4f868acebc49ffd64c6ede8e8de57', 'admin', 'apoco', '1')
2023-02-14 13:38:00,394 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230214 13:38:00  usersService.add_user:46  INFO: excpetion This result object does not return rows. It has been closed automatically.
20230214 13:38:00  usersService.add_user:48  ERROR: This result object does not return rows. It has been closed automatically.
error handling worker <WorkerContext [usersService.add_user] at 0x7f0e54ebb6d0>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 49, in add_user
    return jsonify(error_code='-1',message= 'User added failed.')
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
20230214 13:39:17  usersService.add_user:24  INFO: user{'username': 'sunhy6', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 13:39:17  usersService.add_user:26  INFO: username sunhy6
20230214 13:39:17  usersService.add_user:28  INFO: password0 sunhy
20230214 13:39:18  usersService.add_user:30  INFO: password pbkdf2:sha256:260000$JYfNIxJd5NhQK3nG$998b1b2dc59c08297b17ff13da1b53263075b2a5169a0654cdfcfa265ec14c7b
20230214 13:39:18  usersService.add_user:32  INFO: role admin
20230214 13:39:18  usersService.add_user:34  INFO: organization apoco
20230214 13:39:18  usersService.add_user:40  INFO: befor insert {'username': 'sunhy6', 'password': 'pbkdf2:sha256:260000$JYfNIxJd5NhQK3nG$998b1b2dc59c08297b17ff13da1b53263075b2a5169a0654cdfcfa265ec14c7b', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 13:39:18,049 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 13:39:18,050 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 13:39:18,050 INFO sqlalchemy.engine.Engine [cached since 235.1s ago] ('sunhy6', 'pbkdf2:sha256:260000$JYfNIxJd5NhQK3nG$998b1b2dc59c08297b17ff13da1b53263075b2a5169a0654cdfcfa265ec14c7b', 'admin', 'apoco', '1')
[cached since 235.1s ago] ('sunhy6', 'pbkdf2:sha256:260000$JYfNIxJd5NhQK3nG$998b1b2dc59c08297b17ff13da1b53263075b2a5169a0654cdfcfa265ec14c7b', 'admin', 'apoco', '1')
2023-02-14 13:39:18,050 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 13:39:18  usersService.add_user:46  INFO: excpetion (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy6', 'pbkdf2:sha256:260000$JYfNIxJd5NhQK3nG$998b1b2dc59c08297b17ff13da1b53263075b2a5169a0654cdfcfa265ec14c7b', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 13:39:18  usersService.add_user:48  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy6', 'pbkdf2:sha256:260000$JYfNIxJd5NhQK3nG$998b1b2dc59c08297b17ff13da1b53263075b2a5169a0654cdfcfa265ec14c7b', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
error handling worker <WorkerContext [usersService.add_user] at 0x7f0e54ebba90>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 49, in add_user
    return jsonify(error_code='-1',message= 'User added failed.')
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
2023-02-14 13:47:31 Tuesday  nameko serivce [usersService service] start!
20230214 13:47:32  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 13:47:32  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 13:47:32  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 13:47:37  usersService.add_user:24  INFO: user{'username': 'sunhy6', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 13:47:37  usersService.add_user:26  INFO: username sunhy6
20230214 13:47:37  usersService.add_user:28  INFO: password0 sunhy
20230214 13:47:37  usersService.add_user:30  INFO: password pbkdf2:sha256:260000$ukpD49GDecn6zGYf$cdbe244683944cdc96c00a5328caadfdc68b407cfb8d4fc392864d848e92012c
20230214 13:47:37  usersService.add_user:32  INFO: role admin
20230214 13:47:37  usersService.add_user:34  INFO: organization apoco
20230214 13:47:37  usersService.add_user:40  INFO: befor insert {'username': 'sunhy6', 'password': 'pbkdf2:sha256:260000$ukpD49GDecn6zGYf$cdbe244683944cdc96c00a5328caadfdc68b407cfb8d4fc392864d848e92012c', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 13:47:37,905 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 13:47:37,907 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 13:47:37,907 INFO sqlalchemy.engine.Engine [generated in 0.00041s] ('sunhy6', 'pbkdf2:sha256:260000$ukpD49GDecn6zGYf$cdbe244683944cdc96c00a5328caadfdc68b407cfb8d4fc392864d848e92012c', 'admin', 'apoco', '1')
[generated in 0.00041s] ('sunhy6', 'pbkdf2:sha256:260000$ukpD49GDecn6zGYf$cdbe244683944cdc96c00a5328caadfdc68b407cfb8d4fc392864d848e92012c', 'admin', 'apoco', '1')
2023-02-14 13:47:37,908 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
error handling worker <WorkerContext [usersService.add_user] at 0x7f8893767490>: name 'IntegrityError' is not defined
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 747, in do_execute
    cursor.execute(statement, parameters)
sqlite3.IntegrityError: UNIQUE constraint failed: users.username

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 41, in add_user
    self.db_pool.insert("users",data)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/../apocolib/SQLiteDbPool.py", line 38, in insert
    return self.execute(query, data)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/../apocolib/SQLiteDbPool.py", line 22, in execute
    result = session.execute(text(statement), params)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 2229, in execute
    return self._execute_internal(
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 2133, in _execute_internal
    result = conn.execute(
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 485, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2325, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 747, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy6', 'pbkdf2:sha256:260000$ukpD49GDecn6zGYf$cdbe244683944cdc96c00a5328caadfdc68b407cfb8d4fc392864d848e92012c', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 45, in add_user
    except IntegrityError as e:
NameError: name 'IntegrityError' is not defined
2023-02-14 13:49:31 Tuesday  nameko serivce [usersService service] start!
20230214 13:49:32  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 13:49:32  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 13:49:32  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 13:49:38  usersService.add_user:25  INFO: user{'username': 'sunhy6', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 13:49:38  usersService.add_user:27  INFO: username sunhy6
20230214 13:49:38  usersService.add_user:29  INFO: password0 sunhy
20230214 13:49:38  usersService.add_user:31  INFO: password pbkdf2:sha256:260000$ttqvN9n1GSiYwzX3$fc26d344b8f8d28ee1113d39d724dba5ddddaaf37c9c5b4c5a2a6eef251c009d
20230214 13:49:38  usersService.add_user:33  INFO: role admin
20230214 13:49:38  usersService.add_user:35  INFO: organization apoco
20230214 13:49:38  usersService.add_user:41  INFO: befor insert {'username': 'sunhy6', 'password': 'pbkdf2:sha256:260000$ttqvN9n1GSiYwzX3$fc26d344b8f8d28ee1113d39d724dba5ddddaaf37c9c5b4c5a2a6eef251c009d', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 13:49:38,573 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 13:49:38,574 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 13:49:38,574 INFO sqlalchemy.engine.Engine [generated in 0.00041s] ('sunhy6', 'pbkdf2:sha256:260000$ttqvN9n1GSiYwzX3$fc26d344b8f8d28ee1113d39d724dba5ddddaaf37c9c5b4c5a2a6eef251c009d', 'admin', 'apoco', '1')
[generated in 0.00041s] ('sunhy6', 'pbkdf2:sha256:260000$ttqvN9n1GSiYwzX3$fc26d344b8f8d28ee1113d39d724dba5ddddaaf37c9c5b4c5a2a6eef251c009d', 'admin', 'apoco', '1')
2023-02-14 13:49:38,575 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 13:49:38  usersService.add_user:49  INFO: excpetion (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy6', 'pbkdf2:sha256:260000$ttqvN9n1GSiYwzX3$fc26d344b8f8d28ee1113d39d724dba5ddddaaf37c9c5b4c5a2a6eef251c009d', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 13:49:38  usersService.add_user:50  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy6', 'pbkdf2:sha256:260000$ttqvN9n1GSiYwzX3$fc26d344b8f8d28ee1113d39d724dba5ddddaaf37c9c5b4c5a2a6eef251c009d', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
error handling worker <WorkerContext [usersService.add_user] at 0x7f5e32e22490>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 51, in add_user
    return jsonify(error_code='-1',message= 'User added failed.')
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
2023-02-14 13:50:53 Tuesday  nameko serivce [usersService service] start!
20230214 13:50:53  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 13:50:53  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 13:50:53  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 13:51:08  usersService.add_user:25  INFO: user{'username': 'sunhy6', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 13:51:08  usersService.add_user:27  INFO: username sunhy6
20230214 13:51:08  usersService.add_user:29  INFO: password0 sunhy
20230214 13:51:09  usersService.add_user:31  INFO: password pbkdf2:sha256:260000$kHBG5BMezD2uxzg9$2a25f6fa034e0681c0924af29e0f71d658d4eab90181f381428cc7320d352221
20230214 13:51:09  usersService.add_user:33  INFO: role admin
20230214 13:51:09  usersService.add_user:35  INFO: organization apoco
20230214 13:51:09  usersService.add_user:41  INFO: befor insert {'username': 'sunhy6', 'password': 'pbkdf2:sha256:260000$kHBG5BMezD2uxzg9$2a25f6fa034e0681c0924af29e0f71d658d4eab90181f381428cc7320d352221', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 13:51:09,112 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 13:51:09,114 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 13:51:09,115 INFO sqlalchemy.engine.Engine [generated in 0.00041s] ('sunhy6', 'pbkdf2:sha256:260000$kHBG5BMezD2uxzg9$2a25f6fa034e0681c0924af29e0f71d658d4eab90181f381428cc7320d352221', 'admin', 'apoco', '1')
[generated in 0.00041s] ('sunhy6', 'pbkdf2:sha256:260000$kHBG5BMezD2uxzg9$2a25f6fa034e0681c0924af29e0f71d658d4eab90181f381428cc7320d352221', 'admin', 'apoco', '1')
2023-02-14 13:51:09,116 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 13:51:09  usersService.add_user:50  INFO: excpetion (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy6', 'pbkdf2:sha256:260000$kHBG5BMezD2uxzg9$2a25f6fa034e0681c0924af29e0f71d658d4eab90181f381428cc7320d352221', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 13:51:09  usersService.add_user:51  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy6', 'pbkdf2:sha256:260000$kHBG5BMezD2uxzg9$2a25f6fa034e0681c0924af29e0f71d658d4eab90181f381428cc7320d352221', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
error handling worker <WorkerContext [usersService.add_user] at 0x7f0effdf6220>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 52, in add_user
    return jsonify(error_code='-1',message= 'User added failed.')
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
20230214 13:53:38  usersService.add_user:25  INFO: user{'username': 'sunhy7', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 13:53:38  usersService.add_user:27  INFO: username sunhy7
20230214 13:53:38  usersService.add_user:29  INFO: password0 sunhy
20230214 13:53:39  usersService.add_user:31  INFO: password pbkdf2:sha256:260000$t82NcBV9b7TGLTGt$c71b537a7b606e3a757a53497c92b2de9b805699c4dfa0e1ecb91ec81cbe432e
20230214 13:53:39  usersService.add_user:33  INFO: role admin
20230214 13:53:39  usersService.add_user:35  INFO: organization apoco
20230214 13:53:39  usersService.add_user:41  INFO: befor insert {'username': 'sunhy7', 'password': 'pbkdf2:sha256:260000$t82NcBV9b7TGLTGt$c71b537a7b606e3a757a53497c92b2de9b805699c4dfa0e1ecb91ec81cbe432e', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 13:53:39,193 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 13:53:39,194 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 13:53:39,194 INFO sqlalchemy.engine.Engine [cached since 150.1s ago] ('sunhy7', 'pbkdf2:sha256:260000$t82NcBV9b7TGLTGt$c71b537a7b606e3a757a53497c92b2de9b805699c4dfa0e1ecb91ec81cbe432e', 'admin', 'apoco', '1')
[cached since 150.1s ago] ('sunhy7', 'pbkdf2:sha256:260000$t82NcBV9b7TGLTGt$c71b537a7b606e3a757a53497c92b2de9b805699c4dfa0e1ecb91ec81cbe432e', 'admin', 'apoco', '1')
2023-02-14 13:53:39,195 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230214 13:53:39  usersService.add_user:50  INFO: excpetion This result object does not return rows. It has been closed automatically.
20230214 13:53:39  usersService.add_user:51  ERROR: This result object does not return rows. It has been closed automatically.
error handling worker <WorkerContext [usersService.add_user] at 0x7f0effdf66d0>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 52, in add_user
    return jsonify(error_code='-1',message= 'User added failed.')
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
20230214 13:56:56  usersService.add_user:25  INFO: user{'username': 'sunhy7', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 13:56:56  usersService.add_user:27  INFO: username sunhy7
20230214 13:56:56  usersService.add_user:29  INFO: password0 sunhy
20230214 13:56:57  usersService.add_user:31  INFO: password pbkdf2:sha256:260000$h7krQhDTDHlDiyN3$7eb686e8129b7cd48323ae912b8cdfe98a189fdad438aa60ab4b988f670fc683
20230214 13:56:57  usersService.add_user:33  INFO: role admin
20230214 13:56:57  usersService.add_user:35  INFO: organization apoco
20230214 13:56:57  usersService.add_user:41  INFO: befor insert {'username': 'sunhy7', 'password': 'pbkdf2:sha256:260000$h7krQhDTDHlDiyN3$7eb686e8129b7cd48323ae912b8cdfe98a189fdad438aa60ab4b988f670fc683', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 13:56:57,157 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 13:56:57,158 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 13:56:57,158 INFO sqlalchemy.engine.Engine [cached since 348s ago] ('sunhy7', 'pbkdf2:sha256:260000$h7krQhDTDHlDiyN3$7eb686e8129b7cd48323ae912b8cdfe98a189fdad438aa60ab4b988f670fc683', 'admin', 'apoco', '1')
[cached since 348s ago] ('sunhy7', 'pbkdf2:sha256:260000$h7krQhDTDHlDiyN3$7eb686e8129b7cd48323ae912b8cdfe98a189fdad438aa60ab4b988f670fc683', 'admin', 'apoco', '1')
2023-02-14 13:56:57,158 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 13:56:57  usersService.add_user:50  INFO: excpetion (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$h7krQhDTDHlDiyN3$7eb686e8129b7cd48323ae912b8cdfe98a189fdad438aa60ab4b988f670fc683', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 13:56:57  usersService.add_user:51  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$h7krQhDTDHlDiyN3$7eb686e8129b7cd48323ae912b8cdfe98a189fdad438aa60ab4b988f670fc683', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
error handling worker <WorkerContext [usersService.add_user] at 0x7f0effc93f10>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 52, in add_user
    return jsonify(error_code='-1',message= 'User added failed.')
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
20230214 13:57:07  usersService.add_user:25  INFO: user{'username': 'sunhy7', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 13:57:07  usersService.add_user:27  INFO: username sunhy7
20230214 13:57:07  usersService.add_user:29  INFO: password0 sunhy
20230214 13:57:07  usersService.add_user:31  INFO: password pbkdf2:sha256:260000$KVOzkHfsKb3JvLyn$d348eea3a84edee7d459544055b1e940a64f6960b5725bb20cdc3f36210cafb2
20230214 13:57:07  usersService.add_user:33  INFO: role admin
20230214 13:57:07  usersService.add_user:35  INFO: organization apoco
20230214 13:57:07  usersService.add_user:41  INFO: befor insert {'username': 'sunhy7', 'password': 'pbkdf2:sha256:260000$KVOzkHfsKb3JvLyn$d348eea3a84edee7d459544055b1e940a64f6960b5725bb20cdc3f36210cafb2', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 13:57:07,744 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 13:57:07,744 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 13:57:07,744 INFO sqlalchemy.engine.Engine [cached since 358.6s ago] ('sunhy7', 'pbkdf2:sha256:260000$KVOzkHfsKb3JvLyn$d348eea3a84edee7d459544055b1e940a64f6960b5725bb20cdc3f36210cafb2', 'admin', 'apoco', '1')
[cached since 358.6s ago] ('sunhy7', 'pbkdf2:sha256:260000$KVOzkHfsKb3JvLyn$d348eea3a84edee7d459544055b1e940a64f6960b5725bb20cdc3f36210cafb2', 'admin', 'apoco', '1')
2023-02-14 13:57:07,745 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 13:57:07  usersService.add_user:50  INFO: excpetion (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$KVOzkHfsKb3JvLyn$d348eea3a84edee7d459544055b1e940a64f6960b5725bb20cdc3f36210cafb2', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 13:57:07  usersService.add_user:51  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$KVOzkHfsKb3JvLyn$d348eea3a84edee7d459544055b1e940a64f6960b5725bb20cdc3f36210cafb2', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
error handling worker <WorkerContext [usersService.add_user] at 0x7f0effc99910>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 52, in add_user
    return jsonify(error_code='-1',message= 'User added failed.')
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
2023-02-14 13:59:01 Tuesday  nameko serivce [usersService service] start!
20230214 13:59:02  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 13:59:02  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 13:59:02  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 13:59:07  usersService.add_user:25  INFO: user{'username': 'sunhy7', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 13:59:07  usersService.add_user:27  INFO: username sunhy7
20230214 13:59:07  usersService.add_user:29  INFO: password0 sunhy
20230214 13:59:07  usersService.add_user:31  INFO: password pbkdf2:sha256:260000$H1Byrby8eBfdO00n$a2b9d7ad0a70c66e88b036461df24946e4602885103782f38c7110524d35702c
20230214 13:59:07  usersService.add_user:33  INFO: role admin
20230214 13:59:07  usersService.add_user:35  INFO: organization apoco
20230214 13:59:07  usersService.add_user:41  INFO: befor insert {'username': 'sunhy7', 'password': 'pbkdf2:sha256:260000$H1Byrby8eBfdO00n$a2b9d7ad0a70c66e88b036461df24946e4602885103782f38c7110524d35702c', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 13:59:07,918 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 13:59:07,919 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 13:59:07,919 INFO sqlalchemy.engine.Engine [generated in 0.00041s] ('sunhy7', 'pbkdf2:sha256:260000$H1Byrby8eBfdO00n$a2b9d7ad0a70c66e88b036461df24946e4602885103782f38c7110524d35702c', 'admin', 'apoco', '1')
[generated in 0.00041s] ('sunhy7', 'pbkdf2:sha256:260000$H1Byrby8eBfdO00n$a2b9d7ad0a70c66e88b036461df24946e4602885103782f38c7110524d35702c', 'admin', 'apoco', '1')
2023-02-14 13:59:07,920 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 13:59:07  usersService.add_user:50  INFO: excpetion (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$H1Byrby8eBfdO00n$a2b9d7ad0a70c66e88b036461df24946e4602885103782f38c7110524d35702c', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 13:59:07  usersService.add_user:51  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$H1Byrby8eBfdO00n$a2b9d7ad0a70c66e88b036461df24946e4602885103782f38c7110524d35702c', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
error handling worker <WorkerContext [usersService.add_user] at 0x7f93d2f420a0>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 52, in add_user
    return jsonify(error_code='-1',message= 'User added failed.')
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
2023-02-14 14:00:32 Tuesday  nameko serivce [usersService service] start!
20230214 14:00:32  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 14:00:32  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 14:00:32  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 14:00:35  usersService.add_user:25  INFO: user{'username': 'sunhy7', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:00:35  usersService.add_user:27  INFO: username sunhy7
20230214 14:00:35  usersService.add_user:29  INFO: password0 sunhy
20230214 14:00:35  usersService.add_user:31  INFO: password pbkdf2:sha256:260000$u0TAlQOd9mzfEiN7$bcc70f84bbdd8986064f6f5cf5e307a673494967d2cd742ae96412809b24dfc7
20230214 14:00:35  usersService.add_user:33  INFO: role admin
20230214 14:00:35  usersService.add_user:35  INFO: organization apoco
20230214 14:00:35  usersService.add_user:41  INFO: befor insert {'username': 'sunhy7', 'password': 'pbkdf2:sha256:260000$u0TAlQOd9mzfEiN7$bcc70f84bbdd8986064f6f5cf5e307a673494967d2cd742ae96412809b24dfc7', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:00:35,885 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:00:35,887 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:00:35,887 INFO sqlalchemy.engine.Engine [generated in 0.00042s] ('sunhy7', 'pbkdf2:sha256:260000$u0TAlQOd9mzfEiN7$bcc70f84bbdd8986064f6f5cf5e307a673494967d2cd742ae96412809b24dfc7', 'admin', 'apoco', '1')
[generated in 0.00042s] ('sunhy7', 'pbkdf2:sha256:260000$u0TAlQOd9mzfEiN7$bcc70f84bbdd8986064f6f5cf5e307a673494967d2cd742ae96412809b24dfc7', 'admin', 'apoco', '1')
2023-02-14 14:00:35,888 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:00:35  usersService.add_user:50  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$u0TAlQOd9mzfEiN7$bcc70f84bbdd8986064f6f5cf5e307a673494967d2cd742ae96412809b24dfc7', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
error handling worker <WorkerContext [usersService.add_user] at 0x7fac6fe6d0d0>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 51, in add_user
    return jsonify(error_code='-1',message= 'User added failed.')
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
20230214 14:04:12  usersService.add_user:25  INFO: user{'username': 'sunhy7', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:04:12  usersService.add_user:27  INFO: username sunhy7
20230214 14:04:12  usersService.add_user:29  INFO: password0 sunhy
20230214 14:04:12  usersService.add_user:31  INFO: password pbkdf2:sha256:260000$v3NTNi0daT7Kvud9$054b5a39f64681030b44d3a116a3c9dd97b9c73f7d6581ffa52d31ec2cc2d6af
20230214 14:04:12  usersService.add_user:33  INFO: role admin
20230214 14:04:12  usersService.add_user:35  INFO: organization apoco
20230214 14:04:12  usersService.add_user:41  INFO: befor insert {'username': 'sunhy7', 'password': 'pbkdf2:sha256:260000$v3NTNi0daT7Kvud9$054b5a39f64681030b44d3a116a3c9dd97b9c73f7d6581ffa52d31ec2cc2d6af', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:04:12,516 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:04:12,516 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:04:12,516 INFO sqlalchemy.engine.Engine [cached since 216.6s ago] ('sunhy7', 'pbkdf2:sha256:260000$v3NTNi0daT7Kvud9$054b5a39f64681030b44d3a116a3c9dd97b9c73f7d6581ffa52d31ec2cc2d6af', 'admin', 'apoco', '1')
[cached since 216.6s ago] ('sunhy7', 'pbkdf2:sha256:260000$v3NTNi0daT7Kvud9$054b5a39f64681030b44d3a116a3c9dd97b9c73f7d6581ffa52d31ec2cc2d6af', 'admin', 'apoco', '1')
2023-02-14 14:04:12,517 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:04:12  usersService.add_user:50  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$v3NTNi0daT7Kvud9$054b5a39f64681030b44d3a116a3c9dd97b9c73f7d6581ffa52d31ec2cc2d6af', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
error handling worker <WorkerContext [usersService.add_user] at 0x7fac6fc9bfd0>: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 51, in add_user
    return jsonify(error_code='-1',message= 'User added failed.')
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/flask/json/__init__.py", line 342, in jsonify
    return current_app.json.response(*args, **kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 316, in __get__
    obj = instance._get_current_object()  # type: ignore[misc]
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/werkzeug/local.py", line 513, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.
2023-02-14 14:11:22 Tuesday  nameko serivce [usersService service] start!
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 54
    return jsonify(f"error_code":error_code,"message:":message)
                                ^
SyntaxError: invalid syntax
2023-02-14 14:27:41 Tuesday  nameko serivce [usersService service] start!
20230214 14:27:41  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 14:27:42  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 14:27:42  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 14:27:48  usersService.add_user:27  INFO: user{'username': 'sunhy7', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:27:48  usersService.add_user:29  INFO: username sunhy7
20230214 14:27:48  usersService.add_user:31  INFO: password0 sunhy
20230214 14:27:49  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$FPBWjGSmtT65FcSf$d6109abc4b524bc6d364c6fb2c9c1ab2808a5e9222228a0062fe65ada36a2079
20230214 14:27:49  usersService.add_user:35  INFO: role admin
20230214 14:27:49  usersService.add_user:37  INFO: organization apoco
20230214 14:27:49  usersService.add_user:43  INFO: befor insert {'username': 'sunhy7', 'password': 'pbkdf2:sha256:260000$FPBWjGSmtT65FcSf$d6109abc4b524bc6d364c6fb2c9c1ab2808a5e9222228a0062fe65ada36a2079', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:27:49,298 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:27:49,299 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:27:49,299 INFO sqlalchemy.engine.Engine [generated in 0.00027s] ('sunhy7', 'pbkdf2:sha256:260000$FPBWjGSmtT65FcSf$d6109abc4b524bc6d364c6fb2c9c1ab2808a5e9222228a0062fe65ada36a2079', 'admin', 'apoco', '1')
[generated in 0.00027s] ('sunhy7', 'pbkdf2:sha256:260000$FPBWjGSmtT65FcSf$d6109abc4b524bc6d364c6fb2c9c1ab2808a5e9222228a0062fe65ada36a2079', 'admin', 'apoco', '1')
2023-02-14 14:27:49,299 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:27:49  usersService.add_user:50  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$FPBWjGSmtT65FcSf$d6109abc4b524bc6d364c6fb2c9c1ab2808a5e9222228a0062fe65ada36a2079', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 14:27:49  usersService.add_user:54  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 14:28:40  usersService.add_user:27  INFO: user{'username': 'sunhy7', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:28:40  usersService.add_user:29  INFO: username sunhy7
20230214 14:28:40  usersService.add_user:31  INFO: password0 sunhy
20230214 14:28:40  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$ArqeSCrYgoZfVoNF$a5e5fe391bd1710657a2f385db4d0f643f9eca1cb0f1968af8a5686b258bc061
20230214 14:28:40  usersService.add_user:35  INFO: role admin
20230214 14:28:40  usersService.add_user:37  INFO: organization apoco
20230214 14:28:40  usersService.add_user:43  INFO: befor insert {'username': 'sunhy7', 'password': 'pbkdf2:sha256:260000$ArqeSCrYgoZfVoNF$a5e5fe391bd1710657a2f385db4d0f643f9eca1cb0f1968af8a5686b258bc061', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:28:40,441 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:28:40,441 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:28:40,441 INFO sqlalchemy.engine.Engine [cached since 51.14s ago] ('sunhy7', 'pbkdf2:sha256:260000$ArqeSCrYgoZfVoNF$a5e5fe391bd1710657a2f385db4d0f643f9eca1cb0f1968af8a5686b258bc061', 'admin', 'apoco', '1')
[cached since 51.14s ago] ('sunhy7', 'pbkdf2:sha256:260000$ArqeSCrYgoZfVoNF$a5e5fe391bd1710657a2f385db4d0f643f9eca1cb0f1968af8a5686b258bc061', 'admin', 'apoco', '1')
2023-02-14 14:28:40,441 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:28:40  usersService.add_user:50  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$ArqeSCrYgoZfVoNF$a5e5fe391bd1710657a2f385db4d0f643f9eca1cb0f1968af8a5686b258bc061', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 14:28:40  usersService.add_user:54  INFO: {'error_code': '-1', 'message': 'User added failed.'}
2023-02-14 14:33:29 Tuesday  nameko serivce [usersService service] start!
20230214 14:33:30  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 14:33:30  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 14:33:30  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 14:33:39  usersService.add_user:27  INFO: user{'username': 'sunhy7', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:33:39  usersService.add_user:29  INFO: username sunhy7
20230214 14:33:39  usersService.add_user:31  INFO: password0 sunhy
20230214 14:33:39  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$bQDd7WDMwrBUL5xY$8cd3425e50bf9c426820c0fc88e663971786f1b45c7c6bc860088d21d160ecfb
20230214 14:33:39  usersService.add_user:35  INFO: role admin
20230214 14:33:39  usersService.add_user:37  INFO: organization apoco
20230214 14:33:39  usersService.add_user:43  INFO: befor insert {'username': 'sunhy7', 'password': 'pbkdf2:sha256:260000$bQDd7WDMwrBUL5xY$8cd3425e50bf9c426820c0fc88e663971786f1b45c7c6bc860088d21d160ecfb', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:33:39,858 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:33:39,859 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:33:39,860 INFO sqlalchemy.engine.Engine [generated in 0.00027s] ('sunhy7', 'pbkdf2:sha256:260000$bQDd7WDMwrBUL5xY$8cd3425e50bf9c426820c0fc88e663971786f1b45c7c6bc860088d21d160ecfb', 'admin', 'apoco', '1')
[generated in 0.00027s] ('sunhy7', 'pbkdf2:sha256:260000$bQDd7WDMwrBUL5xY$8cd3425e50bf9c426820c0fc88e663971786f1b45c7c6bc860088d21d160ecfb', 'admin', 'apoco', '1')
2023-02-14 14:33:39,860 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:33:39  usersService.add_user:50  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$bQDd7WDMwrBUL5xY$8cd3425e50bf9c426820c0fc88e663971786f1b45c7c6bc860088d21d160ecfb', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 14:33:39  usersService.add_user:54  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 14:41:05  usersService.add_user:27  INFO: user{'username': 'sunhy7', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:41:05  usersService.add_user:29  INFO: username sunhy7
20230214 14:41:05  usersService.add_user:31  INFO: password0 sunhy
20230214 14:41:06  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$Gv3WUkq4shzHba1y$3261e2561cb22cd55b87f455ffa85b48c13c6f723b935914784d551391680605
20230214 14:41:06  usersService.add_user:35  INFO: role admin
20230214 14:41:06  usersService.add_user:37  INFO: organization apoco
20230214 14:41:06  usersService.add_user:43  INFO: befor insert {'username': 'sunhy7', 'password': 'pbkdf2:sha256:260000$Gv3WUkq4shzHba1y$3261e2561cb22cd55b87f455ffa85b48c13c6f723b935914784d551391680605', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:41:06,290 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:41:06,290 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:41:06,290 INFO sqlalchemy.engine.Engine [cached since 446.4s ago] ('sunhy7', 'pbkdf2:sha256:260000$Gv3WUkq4shzHba1y$3261e2561cb22cd55b87f455ffa85b48c13c6f723b935914784d551391680605', 'admin', 'apoco', '1')
[cached since 446.4s ago] ('sunhy7', 'pbkdf2:sha256:260000$Gv3WUkq4shzHba1y$3261e2561cb22cd55b87f455ffa85b48c13c6f723b935914784d551391680605', 'admin', 'apoco', '1')
2023-02-14 14:41:06,291 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:41:06  usersService.add_user:50  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$Gv3WUkq4shzHba1y$3261e2561cb22cd55b87f455ffa85b48c13c6f723b935914784d551391680605', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 14:41:06  usersService.add_user:54  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 14:45:45  usersService.add_user:27  INFO: user{'username': 'sunhy7', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:45:45  usersService.add_user:29  INFO: username sunhy7
20230214 14:45:45  usersService.add_user:31  INFO: password0 sunhy
20230214 14:45:45  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$8GJrX7mpSMWH53dh$1a86c93eae941d3003b86bbbc1092faa028038cbe3e3c2191d26ac087fb6c1ac
20230214 14:45:45  usersService.add_user:35  INFO: role admin
20230214 14:45:45  usersService.add_user:37  INFO: organization apoco
20230214 14:45:45  usersService.add_user:43  INFO: befor insert {'username': 'sunhy7', 'password': 'pbkdf2:sha256:260000$8GJrX7mpSMWH53dh$1a86c93eae941d3003b86bbbc1092faa028038cbe3e3c2191d26ac087fb6c1ac', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:45:45,983 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:45:45,983 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:45:45,983 INFO sqlalchemy.engine.Engine [cached since 726.1s ago] ('sunhy7', 'pbkdf2:sha256:260000$8GJrX7mpSMWH53dh$1a86c93eae941d3003b86bbbc1092faa028038cbe3e3c2191d26ac087fb6c1ac', 'admin', 'apoco', '1')
[cached since 726.1s ago] ('sunhy7', 'pbkdf2:sha256:260000$8GJrX7mpSMWH53dh$1a86c93eae941d3003b86bbbc1092faa028038cbe3e3c2191d26ac087fb6c1ac', 'admin', 'apoco', '1')
2023-02-14 14:45:45,984 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:45:45  usersService.add_user:50  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$8GJrX7mpSMWH53dh$1a86c93eae941d3003b86bbbc1092faa028038cbe3e3c2191d26ac087fb6c1ac', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 14:45:45  usersService.add_user:54  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 14:46:33  usersService.add_user:27  INFO: user{'username': 'sunhy7', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:46:33  usersService.add_user:29  INFO: username sunhy7
20230214 14:46:33  usersService.add_user:31  INFO: password0 sunhy
20230214 14:46:33  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$amQnJVFlttvbTEkS$272de038390665ab142260443ccbfdae66bcf008849c0c4b7bb3ef9b8b822f6a
20230214 14:46:33  usersService.add_user:35  INFO: role admin
20230214 14:46:33  usersService.add_user:37  INFO: organization apoco
20230214 14:46:33  usersService.add_user:43  INFO: befor insert {'username': 'sunhy7', 'password': 'pbkdf2:sha256:260000$amQnJVFlttvbTEkS$272de038390665ab142260443ccbfdae66bcf008849c0c4b7bb3ef9b8b822f6a', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:46:33,765 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:46:33,766 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:46:33,766 INFO sqlalchemy.engine.Engine [cached since 773.9s ago] ('sunhy7', 'pbkdf2:sha256:260000$amQnJVFlttvbTEkS$272de038390665ab142260443ccbfdae66bcf008849c0c4b7bb3ef9b8b822f6a', 'admin', 'apoco', '1')
[cached since 773.9s ago] ('sunhy7', 'pbkdf2:sha256:260000$amQnJVFlttvbTEkS$272de038390665ab142260443ccbfdae66bcf008849c0c4b7bb3ef9b8b822f6a', 'admin', 'apoco', '1')
2023-02-14 14:46:33,766 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:46:33  usersService.add_user:50  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy7', 'pbkdf2:sha256:260000$amQnJVFlttvbTEkS$272de038390665ab142260443ccbfdae66bcf008849c0c4b7bb3ef9b8b822f6a', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 14:46:33  usersService.add_user:54  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 14:46:49  usersService.add_user:27  INFO: user{'username': 'sunhy8', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:46:49  usersService.add_user:29  INFO: username sunhy8
20230214 14:46:49  usersService.add_user:31  INFO: password0 sunhy
20230214 14:46:49  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$bACQ0HsgF1BRCY6M$3aace00fecfb7fe6d960d2d15d9696087c366fe840b084ce481af07f7fc0399e
20230214 14:46:49  usersService.add_user:35  INFO: role admin
20230214 14:46:49  usersService.add_user:37  INFO: organization apoco
20230214 14:46:49  usersService.add_user:43  INFO: befor insert {'username': 'sunhy8', 'password': 'pbkdf2:sha256:260000$bACQ0HsgF1BRCY6M$3aace00fecfb7fe6d960d2d15d9696087c366fe840b084ce481af07f7fc0399e', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:46:49,493 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:46:49,493 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:46:49,493 INFO sqlalchemy.engine.Engine [cached since 789.6s ago] ('sunhy8', 'pbkdf2:sha256:260000$bACQ0HsgF1BRCY6M$3aace00fecfb7fe6d960d2d15d9696087c366fe840b084ce481af07f7fc0399e', 'admin', 'apoco', '1')
[cached since 789.6s ago] ('sunhy8', 'pbkdf2:sha256:260000$bACQ0HsgF1BRCY6M$3aace00fecfb7fe6d960d2d15d9696087c366fe840b084ce481af07f7fc0399e', 'admin', 'apoco', '1')
2023-02-14 14:46:49,493 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230214 14:46:49  usersService.add_user:50  ERROR: This result object does not return rows. It has been closed automatically.
20230214 14:46:49  usersService.add_user:54  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 14:47:12  usersService.add_user:27  INFO: user{'username': 'sunhy9', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:47:12  usersService.add_user:29  INFO: username sunhy9
20230214 14:47:12  usersService.add_user:31  INFO: password0 sunhy
20230214 14:47:12  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$v2IKYqAkuoOAToEn$fa7e947ba6edbec4f2bbec494541a413f41d7ea6ccec10945164ab54a6c9a09f
20230214 14:47:12  usersService.add_user:35  INFO: role admin
20230214 14:47:12  usersService.add_user:37  INFO: organization apoco
20230214 14:47:12  usersService.add_user:43  INFO: befor insert {'username': 'sunhy9', 'password': 'pbkdf2:sha256:260000$v2IKYqAkuoOAToEn$fa7e947ba6edbec4f2bbec494541a413f41d7ea6ccec10945164ab54a6c9a09f', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:47:12,848 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:47:12,848 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:47:12,848 INFO sqlalchemy.engine.Engine [cached since 813s ago] ('sunhy9', 'pbkdf2:sha256:260000$v2IKYqAkuoOAToEn$fa7e947ba6edbec4f2bbec494541a413f41d7ea6ccec10945164ab54a6c9a09f', 'admin', 'apoco', '1')
[cached since 813s ago] ('sunhy9', 'pbkdf2:sha256:260000$v2IKYqAkuoOAToEn$fa7e947ba6edbec4f2bbec494541a413f41d7ea6ccec10945164ab54a6c9a09f', 'admin', 'apoco', '1')
2023-02-14 14:47:12,849 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230214 14:47:12  usersService.add_user:50  ERROR: This result object does not return rows. It has been closed automatically.
20230214 14:47:12  usersService.add_user:54  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 14:47:43  usersService.add_user:27  INFO: user{'username': 'sunhy10', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:47:43  usersService.add_user:29  INFO: username sunhy10
20230214 14:47:43  usersService.add_user:31  INFO: password0 sunhy
20230214 14:47:43  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$MY38kq09uEb9ZYnk$7604bebbd0feadb69ea8fab24d54d35499d5a2b259c1a4db3bdab6748fe84329
20230214 14:47:43  usersService.add_user:35  INFO: role admin
20230214 14:47:43  usersService.add_user:37  INFO: organization apoco
20230214 14:47:43  usersService.add_user:43  INFO: befor insert {'username': 'sunhy10', 'password': 'pbkdf2:sha256:260000$MY38kq09uEb9ZYnk$7604bebbd0feadb69ea8fab24d54d35499d5a2b259c1a4db3bdab6748fe84329', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:47:43,478 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:47:43,479 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:47:43,479 INFO sqlalchemy.engine.Engine [cached since 843.6s ago] ('sunhy10', 'pbkdf2:sha256:260000$MY38kq09uEb9ZYnk$7604bebbd0feadb69ea8fab24d54d35499d5a2b259c1a4db3bdab6748fe84329', 'admin', 'apoco', '1')
[cached since 843.6s ago] ('sunhy10', 'pbkdf2:sha256:260000$MY38kq09uEb9ZYnk$7604bebbd0feadb69ea8fab24d54d35499d5a2b259c1a4db3bdab6748fe84329', 'admin', 'apoco', '1')
2023-02-14 14:47:43,479 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230214 14:47:43  usersService.add_user:50  ERROR: This result object does not return rows. It has been closed automatically.
20230214 14:47:43  usersService.add_user:54  INFO: {'error_code': '-1', 'message': 'User added failed.'}
2023-02-14 14:51:08 Tuesday  nameko serivce [usersService service] start!
20230214 14:51:08  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 14:51:08  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 14:51:08  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 14:51:11  usersService.add_user:27  INFO: user{'username': 'sunhy10', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:51:11  usersService.add_user:29  INFO: username sunhy10
20230214 14:51:11  usersService.add_user:31  INFO: password0 sunhy
20230214 14:51:12  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$qjvoyde4Rd5rmhjq$43281b7914a7e5afec225d8b2b03709a98b6b06dd84430927ab81a3aefd6a34f
20230214 14:51:12  usersService.add_user:35  INFO: role admin
20230214 14:51:12  usersService.add_user:37  INFO: organization apoco
20230214 14:51:12  usersService.add_user:43  INFO: befor insert {'username': 'sunhy10', 'password': 'pbkdf2:sha256:260000$qjvoyde4Rd5rmhjq$43281b7914a7e5afec225d8b2b03709a98b6b06dd84430927ab81a3aefd6a34f', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:51:12,210 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:51:12,211 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:51:12,211 INFO sqlalchemy.engine.Engine [generated in 0.00027s] ('sunhy10', 'pbkdf2:sha256:260000$qjvoyde4Rd5rmhjq$43281b7914a7e5afec225d8b2b03709a98b6b06dd84430927ab81a3aefd6a34f', 'admin', 'apoco', '1')
[generated in 0.00027s] ('sunhy10', 'pbkdf2:sha256:260000$qjvoyde4Rd5rmhjq$43281b7914a7e5afec225d8b2b03709a98b6b06dd84430927ab81a3aefd6a34f', 'admin', 'apoco', '1')
2023-02-14 14:51:12,212 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:51:12  usersService.add_user:51  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy10', 'pbkdf2:sha256:260000$qjvoyde4Rd5rmhjq$43281b7914a7e5afec225d8b2b03709a98b6b06dd84430927ab81a3aefd6a34f', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 14:51:12  usersService.add_user:55  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 14:51:50  usersService.add_user:27  INFO: user{'username': 'sunhy11', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:51:50  usersService.add_user:29  INFO: username sunhy11
20230214 14:51:50  usersService.add_user:31  INFO: password0 sunhy
20230214 14:51:50  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$fit6IYVgiNXCQZqC$0b555a0b0755a8921626d0335c9d3cb671a3b8b9b6af490f64785b0ce8531a65
20230214 14:51:50  usersService.add_user:35  INFO: role admin
20230214 14:51:50  usersService.add_user:37  INFO: organization apoco
20230214 14:51:50  usersService.add_user:43  INFO: befor insert {'username': 'sunhy11', 'password': 'pbkdf2:sha256:260000$fit6IYVgiNXCQZqC$0b555a0b0755a8921626d0335c9d3cb671a3b8b9b6af490f64785b0ce8531a65', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:51:50,540 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:51:50,540 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:51:50,541 INFO sqlalchemy.engine.Engine [cached since 38.33s ago] ('sunhy11', 'pbkdf2:sha256:260000$fit6IYVgiNXCQZqC$0b555a0b0755a8921626d0335c9d3cb671a3b8b9b6af490f64785b0ce8531a65', 'admin', 'apoco', '1')
[cached since 38.33s ago] ('sunhy11', 'pbkdf2:sha256:260000$fit6IYVgiNXCQZqC$0b555a0b0755a8921626d0335c9d3cb671a3b8b9b6af490f64785b0ce8531a65', 'admin', 'apoco', '1')
2023-02-14 14:51:50,541 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230214 14:51:50  usersService.add_user:51  ERROR: This result object does not return rows. It has been closed automatically.
20230214 14:51:50  usersService.add_user:55  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 14:54:27  usersService.add_user:27  INFO: user{'username': 'sunhy11', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:54:27  usersService.add_user:29  INFO: username sunhy11
20230214 14:54:27  usersService.add_user:31  INFO: password0 sunhy
20230214 14:54:27  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$m2YY11AbnqcdfYSx$9f5d98bb2be4462b06ff3b113ba960b816c2bcb1867a3932cf211458dc820fdd
20230214 14:54:27  usersService.add_user:35  INFO: role admin
20230214 14:54:27  usersService.add_user:37  INFO: organization apoco
20230214 14:54:27  usersService.add_user:43  INFO: befor insert {'username': 'sunhy11', 'password': 'pbkdf2:sha256:260000$m2YY11AbnqcdfYSx$9f5d98bb2be4462b06ff3b113ba960b816c2bcb1867a3932cf211458dc820fdd', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:54:27,573 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:54:27,573 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:54:27,574 INFO sqlalchemy.engine.Engine [cached since 195.4s ago] ('sunhy11', 'pbkdf2:sha256:260000$m2YY11AbnqcdfYSx$9f5d98bb2be4462b06ff3b113ba960b816c2bcb1867a3932cf211458dc820fdd', 'admin', 'apoco', '1')
[cached since 195.4s ago] ('sunhy11', 'pbkdf2:sha256:260000$m2YY11AbnqcdfYSx$9f5d98bb2be4462b06ff3b113ba960b816c2bcb1867a3932cf211458dc820fdd', 'admin', 'apoco', '1')
2023-02-14 14:54:27,574 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:54:27  usersService.add_user:51  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy11', 'pbkdf2:sha256:260000$m2YY11AbnqcdfYSx$9f5d98bb2be4462b06ff3b113ba960b816c2bcb1867a3932cf211458dc820fdd', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 14:54:27  usersService.add_user:55  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 14:54:49  usersService.add_user:27  INFO: user{'username': 'sunhy12', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:54:49  usersService.add_user:29  INFO: username sunhy12
20230214 14:54:49  usersService.add_user:31  INFO: password0 sunhy
20230214 14:54:49  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$1nvbUV0wzFgl1zAc$3569d81335387e94299fe073e8639f54a66da4aa2bd1d21c44d29b48345d2849
20230214 14:54:49  usersService.add_user:35  INFO: role admin
20230214 14:54:49  usersService.add_user:37  INFO: organization apoco
20230214 14:54:49  usersService.add_user:43  INFO: befor insert {'username': 'sunhy12', 'password': 'pbkdf2:sha256:260000$1nvbUV0wzFgl1zAc$3569d81335387e94299fe073e8639f54a66da4aa2bd1d21c44d29b48345d2849', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:54:49,596 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:54:49,596 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:54:49,596 INFO sqlalchemy.engine.Engine [cached since 217.4s ago] ('sunhy12', 'pbkdf2:sha256:260000$1nvbUV0wzFgl1zAc$3569d81335387e94299fe073e8639f54a66da4aa2bd1d21c44d29b48345d2849', 'admin', 'apoco', '1')
[cached since 217.4s ago] ('sunhy12', 'pbkdf2:sha256:260000$1nvbUV0wzFgl1zAc$3569d81335387e94299fe073e8639f54a66da4aa2bd1d21c44d29b48345d2849', 'admin', 'apoco', '1')
2023-02-14 14:54:49,597 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230214 14:54:49  usersService.add_user:51  ERROR: This result object does not return rows. It has been closed automatically.
20230214 14:54:49  usersService.add_user:55  INFO: {'error_code': '-1', 'message': 'User added failed.'}
2023-02-14 14:55:02 Tuesday  nameko serivce [usersService service] start!
20230214 14:55:03  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 14:55:03  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 14:55:03  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 14:55:09  usersService.add_user:27  INFO: user{'username': 'sunhy12', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:55:09  usersService.add_user:29  INFO: username sunhy12
20230214 14:55:09  usersService.add_user:31  INFO: password0 sunhy
20230214 14:55:10  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$jOIZQw8rdR2n4RFo$8b13bd42a4add382277e46994f7d463d55d56318110bfed1e946c24661e7b3bb
20230214 14:55:10  usersService.add_user:35  INFO: role admin
20230214 14:55:10  usersService.add_user:37  INFO: organization apoco
20230214 14:55:10  usersService.add_user:43  INFO: befor insert {'username': 'sunhy12', 'password': 'pbkdf2:sha256:260000$jOIZQw8rdR2n4RFo$8b13bd42a4add382277e46994f7d463d55d56318110bfed1e946c24661e7b3bb', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:55:10,233 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:55:10,235 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:55:10,235 INFO sqlalchemy.engine.Engine [generated in 0.00041s] ('sunhy12', 'pbkdf2:sha256:260000$jOIZQw8rdR2n4RFo$8b13bd42a4add382277e46994f7d463d55d56318110bfed1e946c24661e7b3bb', 'admin', 'apoco', '1')
[generated in 0.00041s] ('sunhy12', 'pbkdf2:sha256:260000$jOIZQw8rdR2n4RFo$8b13bd42a4add382277e46994f7d463d55d56318110bfed1e946c24661e7b3bb', 'admin', 'apoco', '1')
2023-02-14 14:55:10,236 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:55:10  usersService.add_user:51  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy12', 'pbkdf2:sha256:260000$jOIZQw8rdR2n4RFo$8b13bd42a4add382277e46994f7d463d55d56318110bfed1e946c24661e7b3bb', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 14:55:10  usersService.add_user:55  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 14:55:27  usersService.add_user:27  INFO: user{'username': 'sunhy13', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:55:27  usersService.add_user:29  INFO: username sunhy13
20230214 14:55:27  usersService.add_user:31  INFO: password0 sunhy
20230214 14:55:27  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$TUCtGmrqUMrrT0qh$66daccbae2917696a2fc8e75c192c248399a6bc80658a80718bd649156f59a89
20230214 14:55:27  usersService.add_user:35  INFO: role admin
20230214 14:55:27  usersService.add_user:37  INFO: organization apoco
20230214 14:55:27  usersService.add_user:43  INFO: befor insert {'username': 'sunhy13', 'password': 'pbkdf2:sha256:260000$TUCtGmrqUMrrT0qh$66daccbae2917696a2fc8e75c192c248399a6bc80658a80718bd649156f59a89', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 14:55:27,931 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:55:27,931 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:55:27,931 INFO sqlalchemy.engine.Engine [cached since 17.7s ago] ('sunhy13', 'pbkdf2:sha256:260000$TUCtGmrqUMrrT0qh$66daccbae2917696a2fc8e75c192c248399a6bc80658a80718bd649156f59a89', 'admin', 'apoco', '1')
[cached since 17.7s ago] ('sunhy13', 'pbkdf2:sha256:260000$TUCtGmrqUMrrT0qh$66daccbae2917696a2fc8e75c192c248399a6bc80658a80718bd649156f59a89', 'admin', 'apoco', '1')
2023-02-14 14:55:27,932 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:55:27  usersService.add_user:51  ERROR: This result object does not return rows. It has been closed automatically.
20230214 14:55:27  usersService.add_user:55  INFO: {'error_code': '-1', 'message': 'User added failed.'}
2023-02-14 14:58:26 Tuesday  nameko serivce [usersService service] start!
20230214 14:58:27  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 14:58:27  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 14:58:27  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 14:58:39  usersService.add_user:27  INFO: user{'username': 'sunhy13', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:58:39  usersService.add_user:29  INFO: username sunhy13
20230214 14:58:39  usersService.add_user:31  INFO: password0 sunhy
20230214 14:58:40  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$MvhVbP55crhuEHjr$20bc1e2c517d3f689c9d86444935165df29ded57da8c381df9f745f0016606c4
20230214 14:58:40  usersService.add_user:35  INFO: role admin
20230214 14:58:40  usersService.add_user:37  INFO: organization apoco
20230214 14:58:40  usersService.add_user:43  INFO: befor insert {'username': 'sunhy13', 'password': 'pbkdf2:sha256:260000$MvhVbP55crhuEHjr$20bc1e2c517d3f689c9d86444935165df29ded57da8c381df9f745f0016606c4', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
20230214 14:58:40  SQLiteDbPool.execute:22  INFO: before SQLiteDbPool excute
2023-02-14 14:58:40,167 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:58:40,168 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:58:40,169 INFO sqlalchemy.engine.Engine [generated in 0.00026s] ('sunhy13', 'pbkdf2:sha256:260000$MvhVbP55crhuEHjr$20bc1e2c517d3f689c9d86444935165df29ded57da8c381df9f745f0016606c4', 'admin', 'apoco', '1')
[generated in 0.00026s] ('sunhy13', 'pbkdf2:sha256:260000$MvhVbP55crhuEHjr$20bc1e2c517d3f689c9d86444935165df29ded57da8c381df9f745f0016606c4', 'admin', 'apoco', '1')
20230214 14:58:40  SQLiteDbPool.execute:24  INFO: after SQLiteDbPool excute
2023-02-14 14:58:40,170 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:58:40  usersService.add_user:51  ERROR: This result object does not return rows. It has been closed automatically.
20230214 14:58:40  usersService.add_user:55  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 14:58:58  usersService.add_user:27  INFO: user{'username': 'sunhy14', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 14:58:58  usersService.add_user:29  INFO: username sunhy14
20230214 14:58:58  usersService.add_user:31  INFO: password0 sunhy
20230214 14:58:58  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$gTfl0j81DS66iTRw$d691c538d074203316e0b8fa8b4fd5aabe99d86e13c3423d46d59bb07028f06d
20230214 14:58:58  usersService.add_user:35  INFO: role admin
20230214 14:58:58  usersService.add_user:37  INFO: organization apoco
20230214 14:58:58  usersService.add_user:43  INFO: befor insert {'username': 'sunhy14', 'password': 'pbkdf2:sha256:260000$gTfl0j81DS66iTRw$d691c538d074203316e0b8fa8b4fd5aabe99d86e13c3423d46d59bb07028f06d', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
20230214 14:58:58  SQLiteDbPool.execute:22  INFO: before SQLiteDbPool excute
2023-02-14 14:58:58,861 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 14:58:58,861 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 14:58:58,861 INFO sqlalchemy.engine.Engine [cached since 18.69s ago] ('sunhy14', 'pbkdf2:sha256:260000$gTfl0j81DS66iTRw$d691c538d074203316e0b8fa8b4fd5aabe99d86e13c3423d46d59bb07028f06d', 'admin', 'apoco', '1')
[cached since 18.69s ago] ('sunhy14', 'pbkdf2:sha256:260000$gTfl0j81DS66iTRw$d691c538d074203316e0b8fa8b4fd5aabe99d86e13c3423d46d59bb07028f06d', 'admin', 'apoco', '1')
20230214 14:58:58  SQLiteDbPool.execute:24  INFO: after SQLiteDbPool excute
2023-02-14 14:58:58,862 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 14:58:58  usersService.add_user:51  ERROR: This result object does not return rows. It has been closed automatically.
20230214 14:58:58  usersService.add_user:55  INFO: {'error_code': '-1', 'message': 'User added failed.'}
2023-02-14 15:07:15 Tuesday  nameko serivce [usersService service] start!
20230214 15:07:16  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 15:07:16  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 15:07:16  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 15:07:22  usersService.add_user:27  INFO: user{'username': 'sunhy14', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 15:07:22  usersService.add_user:29  INFO: username sunhy14
20230214 15:07:22  usersService.add_user:31  INFO: password0 sunhy
20230214 15:07:22  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$cRRgEM3Y1PDzhnaf$0e5274420cc279c44fcd10b1096202b6b80607f009c9fa571e8d6e3b6dd5ce7d
20230214 15:07:22  usersService.add_user:35  INFO: role admin
20230214 15:07:22  usersService.add_user:37  INFO: organization apoco
20230214 15:07:22  usersService.add_user:43  INFO: befor insert {'username': 'sunhy14', 'password': 'pbkdf2:sha256:260000$cRRgEM3Y1PDzhnaf$0e5274420cc279c44fcd10b1096202b6b80607f009c9fa571e8d6e3b6dd5ce7d', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 15:07:22,519 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 15:07:22,520 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 15:07:22,520 INFO sqlalchemy.engine.Engine [generated in 0.00029s] ('sunhy14', 'pbkdf2:sha256:260000$cRRgEM3Y1PDzhnaf$0e5274420cc279c44fcd10b1096202b6b80607f009c9fa571e8d6e3b6dd5ce7d', 'admin', 'apoco', '1')
[generated in 0.00029s] ('sunhy14', 'pbkdf2:sha256:260000$cRRgEM3Y1PDzhnaf$0e5274420cc279c44fcd10b1096202b6b80607f009c9fa571e8d6e3b6dd5ce7d', 'admin', 'apoco', '1')
2023-02-14 15:07:22,521 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230214 15:07:22  usersService.add_user:51  ERROR: name 'res' is not defined
20230214 15:07:22  usersService.add_user:55  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 15:07:39  usersService.add_user:27  INFO: user{'username': 'sunhy15', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 15:07:39  usersService.add_user:29  INFO: username sunhy15
20230214 15:07:39  usersService.add_user:31  INFO: password0 sunhy
20230214 15:07:39  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$UFPwl19BEJRmHvSU$9bfa5ae49190bb54e0a7c218889edd3babc3401fa653eebe53ad50cbcaa4b43d
20230214 15:07:39  usersService.add_user:35  INFO: role admin
20230214 15:07:39  usersService.add_user:37  INFO: organization apoco
20230214 15:07:39  usersService.add_user:43  INFO: befor insert {'username': 'sunhy15', 'password': 'pbkdf2:sha256:260000$UFPwl19BEJRmHvSU$9bfa5ae49190bb54e0a7c218889edd3babc3401fa653eebe53ad50cbcaa4b43d', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 15:07:39,503 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 15:07:39,504 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 15:07:39,504 INFO sqlalchemy.engine.Engine [cached since 16.98s ago] ('sunhy15', 'pbkdf2:sha256:260000$UFPwl19BEJRmHvSU$9bfa5ae49190bb54e0a7c218889edd3babc3401fa653eebe53ad50cbcaa4b43d', 'admin', 'apoco', '1')
[cached since 16.98s ago] ('sunhy15', 'pbkdf2:sha256:260000$UFPwl19BEJRmHvSU$9bfa5ae49190bb54e0a7c218889edd3babc3401fa653eebe53ad50cbcaa4b43d', 'admin', 'apoco', '1')
2023-02-14 15:07:39,504 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230214 15:07:39  usersService.add_user:51  ERROR: name 'res' is not defined
20230214 15:07:39  usersService.add_user:55  INFO: {'error_code': '-1', 'message': 'User added failed.'}
2023-02-14 15:08:28 Tuesday  nameko serivce [usersService service] start!
20230214 15:08:29  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 15:08:29  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 15:08:29  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 15:08:31  usersService.add_user:27  INFO: user{'username': 'sunhy15', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 15:08:31  usersService.add_user:29  INFO: username sunhy15
20230214 15:08:31  usersService.add_user:31  INFO: password0 sunhy
20230214 15:08:31  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$1GHz1VjSVwg8jXs9$c78cd6c9ec7c2a1bf43d6641d08f4275b5e22fb78e6b811ef2e94a5ce8665d86
20230214 15:08:31  usersService.add_user:35  INFO: role admin
20230214 15:08:31  usersService.add_user:37  INFO: organization apoco
20230214 15:08:31  usersService.add_user:43  INFO: befor insert {'username': 'sunhy15', 'password': 'pbkdf2:sha256:260000$1GHz1VjSVwg8jXs9$c78cd6c9ec7c2a1bf43d6641d08f4275b5e22fb78e6b811ef2e94a5ce8665d86', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 15:08:31,962 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 15:08:31,964 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 15:08:31,964 INFO sqlalchemy.engine.Engine [generated in 0.00042s] ('sunhy15', 'pbkdf2:sha256:260000$1GHz1VjSVwg8jXs9$c78cd6c9ec7c2a1bf43d6641d08f4275b5e22fb78e6b811ef2e94a5ce8665d86', 'admin', 'apoco', '1')
[generated in 0.00042s] ('sunhy15', 'pbkdf2:sha256:260000$1GHz1VjSVwg8jXs9$c78cd6c9ec7c2a1bf43d6641d08f4275b5e22fb78e6b811ef2e94a5ce8665d86', 'admin', 'apoco', '1')
2023-02-14 15:08:31,965 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 15:08:31  usersService.add_user:51  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy15', 'pbkdf2:sha256:260000$1GHz1VjSVwg8jXs9$c78cd6c9ec7c2a1bf43d6641d08f4275b5e22fb78e6b811ef2e94a5ce8665d86', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 15:08:31  usersService.add_user:55  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 15:08:55  usersService.add_user:27  INFO: user{'username': 'sunhy16', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 15:08:55  usersService.add_user:29  INFO: username sunhy16
20230214 15:08:55  usersService.add_user:31  INFO: password0 sunhy
20230214 15:08:55  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$Yh5aEvQE1mCcisiY$279683c6ea19157a89376fa09e91e4189f6c5dded94acb7c96f2bd725829ec9a
20230214 15:08:55  usersService.add_user:35  INFO: role admin
20230214 15:08:55  usersService.add_user:37  INFO: organization apoco
20230214 15:08:55  usersService.add_user:43  INFO: befor insert {'username': 'sunhy16', 'password': 'pbkdf2:sha256:260000$Yh5aEvQE1mCcisiY$279683c6ea19157a89376fa09e91e4189f6c5dded94acb7c96f2bd725829ec9a', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 15:08:55,972 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 15:08:55,972 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 15:08:55,972 INFO sqlalchemy.engine.Engine [cached since 24.01s ago] ('sunhy16', 'pbkdf2:sha256:260000$Yh5aEvQE1mCcisiY$279683c6ea19157a89376fa09e91e4189f6c5dded94acb7c96f2bd725829ec9a', 'admin', 'apoco', '1')
[cached since 24.01s ago] ('sunhy16', 'pbkdf2:sha256:260000$Yh5aEvQE1mCcisiY$279683c6ea19157a89376fa09e91e4189f6c5dded94acb7c96f2bd725829ec9a', 'admin', 'apoco', '1')
2023-02-14 15:08:55,973 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230214 15:08:56  usersService.add_user:45  INFO: befor insert <sqlalchemy.engine.cursor.CursorResult object at 0x7f8a77d19b80>
20230214 15:08:56  usersService.add_user:46  INFO: call insert successfully.
20230214 15:08:56  usersService.add_user:55  INFO: {'error_code': '0', 'message': 'User added successfully.'}
20230214 15:09:21  usersService.add_user:27  INFO: user{'username': 'sunhy16', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 15:09:21  usersService.add_user:29  INFO: username sunhy16
20230214 15:09:21  usersService.add_user:31  INFO: password0 sunhy
20230214 15:09:22  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$ENIqJiJ3811dcmxk$fdf12f2456f4dd0ec43fcbe7d7dc2d1b0b6bb1f084ea53e2dace0286256654b6
20230214 15:09:22  usersService.add_user:35  INFO: role admin
20230214 15:09:22  usersService.add_user:37  INFO: organization apoco
20230214 15:09:22  usersService.add_user:43  INFO: befor insert {'username': 'sunhy16', 'password': 'pbkdf2:sha256:260000$ENIqJiJ3811dcmxk$fdf12f2456f4dd0ec43fcbe7d7dc2d1b0b6bb1f084ea53e2dace0286256654b6', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 15:09:22,022 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 15:09:22,022 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 15:09:22,022 INFO sqlalchemy.engine.Engine [cached since 50.06s ago] ('sunhy16', 'pbkdf2:sha256:260000$ENIqJiJ3811dcmxk$fdf12f2456f4dd0ec43fcbe7d7dc2d1b0b6bb1f084ea53e2dace0286256654b6', 'admin', 'apoco', '1')
[cached since 50.06s ago] ('sunhy16', 'pbkdf2:sha256:260000$ENIqJiJ3811dcmxk$fdf12f2456f4dd0ec43fcbe7d7dc2d1b0b6bb1f084ea53e2dace0286256654b6', 'admin', 'apoco', '1')
2023-02-14 15:09:22,022 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 15:09:22  usersService.add_user:51  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy16', 'pbkdf2:sha256:260000$ENIqJiJ3811dcmxk$fdf12f2456f4dd0ec43fcbe7d7dc2d1b0b6bb1f084ea53e2dace0286256654b6', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 15:09:22  usersService.add_user:55  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 15:09:26  usersService.add_user:27  INFO: user{'username': 'sunhy16', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 15:09:26  usersService.add_user:29  INFO: username sunhy16
20230214 15:09:26  usersService.add_user:31  INFO: password0 sunhy
20230214 15:09:27  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$TDFM83LhML7wV2vT$cb81f5c2a065dda590934f19b0ac8e0f68f76025744aa513603c5a4578b50ebf
20230214 15:09:27  usersService.add_user:35  INFO: role admin
20230214 15:09:27  usersService.add_user:37  INFO: organization apoco
20230214 15:09:27  usersService.add_user:43  INFO: befor insert {'username': 'sunhy16', 'password': 'pbkdf2:sha256:260000$TDFM83LhML7wV2vT$cb81f5c2a065dda590934f19b0ac8e0f68f76025744aa513603c5a4578b50ebf', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 15:09:27,328 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 15:09:27,328 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 15:09:27,329 INFO sqlalchemy.engine.Engine [cached since 55.37s ago] ('sunhy16', 'pbkdf2:sha256:260000$TDFM83LhML7wV2vT$cb81f5c2a065dda590934f19b0ac8e0f68f76025744aa513603c5a4578b50ebf', 'admin', 'apoco', '1')
[cached since 55.37s ago] ('sunhy16', 'pbkdf2:sha256:260000$TDFM83LhML7wV2vT$cb81f5c2a065dda590934f19b0ac8e0f68f76025744aa513603c5a4578b50ebf', 'admin', 'apoco', '1')
2023-02-14 15:09:27,329 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 15:09:27  usersService.add_user:51  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy16', 'pbkdf2:sha256:260000$TDFM83LhML7wV2vT$cb81f5c2a065dda590934f19b0ac8e0f68f76025744aa513603c5a4578b50ebf', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 15:09:27  usersService.add_user:55  INFO: {'error_code': '-1', 'message': 'User added failed.'}
20230214 15:09:34  usersService.add_user:27  INFO: user{'username': 'sunhy17', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 15:09:34  usersService.add_user:29  INFO: username sunhy17
20230214 15:09:34  usersService.add_user:31  INFO: password0 sunhy
20230214 15:09:35  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$8gV9VCLKfTrTiHt8$a86d8085ee45587f0c4e95eb06af0b80f73b008d3e4db3ef80d757e462bf8427
20230214 15:09:35  usersService.add_user:35  INFO: role admin
20230214 15:09:35  usersService.add_user:37  INFO: organization apoco
20230214 15:09:35  usersService.add_user:43  INFO: befor insert {'username': 'sunhy17', 'password': 'pbkdf2:sha256:260000$8gV9VCLKfTrTiHt8$a86d8085ee45587f0c4e95eb06af0b80f73b008d3e4db3ef80d757e462bf8427', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 15:09:35,106 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 15:09:35,107 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 15:09:35,107 INFO sqlalchemy.engine.Engine [cached since 63.14s ago] ('sunhy17', 'pbkdf2:sha256:260000$8gV9VCLKfTrTiHt8$a86d8085ee45587f0c4e95eb06af0b80f73b008d3e4db3ef80d757e462bf8427', 'admin', 'apoco', '1')
[cached since 63.14s ago] ('sunhy17', 'pbkdf2:sha256:260000$8gV9VCLKfTrTiHt8$a86d8085ee45587f0c4e95eb06af0b80f73b008d3e4db3ef80d757e462bf8427', 'admin', 'apoco', '1')
2023-02-14 15:09:35,108 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230214 15:09:35  usersService.add_user:45  INFO: befor insert <sqlalchemy.engine.cursor.CursorResult object at 0x7f8a77d19ee0>
20230214 15:09:35  usersService.add_user:46  INFO: call insert successfully.
20230214 15:09:35  usersService.add_user:55  INFO: {'error_code': '0', 'message': 'User added successfully.'}
2023-02-14 15:11:46 Tuesday  nameko serivce [usersService service] start!
20230214 15:11:47  SQLiteDbPool.__init__:13  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 15:11:47  SQLiteDbPool.__init__:16  INFO: create engine successfully.
20230214 15:11:47  SQLiteDbPool.__init__:18  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 15:11:50  usersService.add_user:27  INFO: user{'username': 'sunhy17', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 15:11:50  usersService.add_user:29  INFO: username sunhy17
20230214 15:11:50  usersService.add_user:31  INFO: password0 sunhy
20230214 15:11:50  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$ZObw9ooGEylg4EZh$75348f01d9188651d1fd2fdd4e1fde0cc853d61c0977763cc44e0322f505d944
20230214 15:11:50  usersService.add_user:35  INFO: role admin
20230214 15:11:50  usersService.add_user:37  INFO: organization apoco
20230214 15:11:50  usersService.add_user:43  INFO: befor insert {'username': 'sunhy17', 'password': 'pbkdf2:sha256:260000$ZObw9ooGEylg4EZh$75348f01d9188651d1fd2fdd4e1fde0cc853d61c0977763cc44e0322f505d944', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 15:11:50,741 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 15:11:50,743 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 15:11:50,743 INFO sqlalchemy.engine.Engine [generated in 0.00042s] ('sunhy17', 'pbkdf2:sha256:260000$ZObw9ooGEylg4EZh$75348f01d9188651d1fd2fdd4e1fde0cc853d61c0977763cc44e0322f505d944', 'admin', 'apoco', '1')
[generated in 0.00042s] ('sunhy17', 'pbkdf2:sha256:260000$ZObw9ooGEylg4EZh$75348f01d9188651d1fd2fdd4e1fde0cc853d61c0977763cc44e0322f505d944', 'admin', 'apoco', '1')
2023-02-14 15:11:50,744 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 15:11:50  usersService.add_user:53  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy17', 'pbkdf2:sha256:260000$ZObw9ooGEylg4EZh$75348f01d9188651d1fd2fdd4e1fde0cc853d61c0977763cc44e0322f505d944', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 15:11:50  usersService.add_user:57  INFO: {'error_code': '-1', 'message': 'User added failed.'}
2023-02-14 15:25:09 Tuesday  nameko serivce [usersService service] start!
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 11, in <module>
    from apocolib.SQLiteDbPool import SQLiteDbPool
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/../apocolib/SQLiteDbPool.py", line 28
    except Exception e:
                     ^
SyntaxError: invalid syntax
2023-02-14 15:25:24 Tuesday  nameko serivce [usersService service] start!
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 11, in <module>
    from apocolib.SQLiteDbPool import SQLiteDbPool
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/../apocolib/SQLiteDbPool.py", line 28
    except Exception e:
                     ^
SyntaxError: invalid syntax
2023-02-14 15:29:52 Tuesday  nameko serivce [usersService service] start!
20230214 15:29:53  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 15:29:53  SQLiteDbPool.__init__:18  INFO: create engine successfully.
20230214 15:29:53  SQLiteDbPool.__init__:20  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 15:30:01  usersService.add_user:27  INFO: user{'username': 'sunhy18', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 15:30:01  usersService.add_user:29  INFO: username sunhy18
20230214 15:30:01  usersService.add_user:31  INFO: password0 sunhy
20230214 15:30:01  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$tsnglM4PnTT1bbfY$39a5863e219f986fd66d84245b0b2a03358e91fcdcbfdf6256beac93943f5751
20230214 15:30:01  usersService.add_user:35  INFO: role admin
20230214 15:30:01  usersService.add_user:37  INFO: organization apoco
20230214 15:30:01  usersService.add_user:43  INFO: befor insert {'username': 'sunhy18', 'password': 'pbkdf2:sha256:260000$tsnglM4PnTT1bbfY$39a5863e219f986fd66d84245b0b2a03358e91fcdcbfdf6256beac93943f5751', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 15:30:01,479 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 15:30:01,481 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 15:30:01,481 INFO sqlalchemy.engine.Engine [generated in 0.00041s] ('sunhy18', 'pbkdf2:sha256:260000$tsnglM4PnTT1bbfY$39a5863e219f986fd66d84245b0b2a03358e91fcdcbfdf6256beac93943f5751', 'admin', 'apoco', '1')
[generated in 0.00041s] ('sunhy18', 'pbkdf2:sha256:260000$tsnglM4PnTT1bbfY$39a5863e219f986fd66d84245b0b2a03358e91fcdcbfdf6256beac93943f5751', 'admin', 'apoco', '1')
2023-02-14 15:30:01,482 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 15:30:01  usersService.add_user:45  INFO: befor insert (-2, 'database error')
20230214 15:30:01  usersService.add_user:46  INFO: call insert successfully.
20230214 15:30:01  usersService.add_user:57  INFO: {'error_code': '0', 'message': 'User added successfully.'}
20230214 15:30:12  usersService.add_user:27  INFO: user{'username': 'sunhy18', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 15:30:12  usersService.add_user:29  INFO: username sunhy18
20230214 15:30:12  usersService.add_user:31  INFO: password0 sunhy
20230214 15:30:12  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$LjuTC5qn6zrDlFe2$e7f5bb477c61fa3a814bafa42db0cfca5bcca701a070e74de68adb56b937f0ad
20230214 15:30:12  usersService.add_user:35  INFO: role admin
20230214 15:30:12  usersService.add_user:37  INFO: organization apoco
20230214 15:30:12  usersService.add_user:43  INFO: befor insert {'username': 'sunhy18', 'password': 'pbkdf2:sha256:260000$LjuTC5qn6zrDlFe2$e7f5bb477c61fa3a814bafa42db0cfca5bcca701a070e74de68adb56b937f0ad', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 15:30:12,857 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 15:30:12,857 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 15:30:12,857 INFO sqlalchemy.engine.Engine [cached since 11.38s ago] ('sunhy18', 'pbkdf2:sha256:260000$LjuTC5qn6zrDlFe2$e7f5bb477c61fa3a814bafa42db0cfca5bcca701a070e74de68adb56b937f0ad', 'admin', 'apoco', '1')
[cached since 11.38s ago] ('sunhy18', 'pbkdf2:sha256:260000$LjuTC5qn6zrDlFe2$e7f5bb477c61fa3a814bafa42db0cfca5bcca701a070e74de68adb56b937f0ad', 'admin', 'apoco', '1')
2023-02-14 15:30:12,858 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 15:30:12  usersService.add_user:45  INFO: befor insert (-2, 'database error')
20230214 15:30:12  usersService.add_user:46  INFO: call insert successfully.
20230214 15:30:12  usersService.add_user:57  INFO: {'error_code': '0', 'message': 'User added successfully.'}
20230214 15:30:47  usersService.add_user:27  INFO: user{'username': 'sunhy18', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 15:30:47  usersService.add_user:29  INFO: username sunhy18
20230214 15:30:47  usersService.add_user:31  INFO: password0 sunhy
20230214 15:30:47  usersService.add_user:33  INFO: password pbkdf2:sha256:260000$7ReUzEtBEX6ru86t$2cdac0633bd7cd57f9c8a775af3e3d75f2fa926345ed73af426c4d6e9e3ed6dd
20230214 15:30:47  usersService.add_user:35  INFO: role admin
20230214 15:30:47  usersService.add_user:37  INFO: organization apoco
20230214 15:30:47  usersService.add_user:43  INFO: befor insert {'username': 'sunhy18', 'password': 'pbkdf2:sha256:260000$7ReUzEtBEX6ru86t$2cdac0633bd7cd57f9c8a775af3e3d75f2fa926345ed73af426c4d6e9e3ed6dd', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 15:30:47,956 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 15:30:47,957 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 15:30:47,957 INFO sqlalchemy.engine.Engine [cached since 46.48s ago] ('sunhy18', 'pbkdf2:sha256:260000$7ReUzEtBEX6ru86t$2cdac0633bd7cd57f9c8a775af3e3d75f2fa926345ed73af426c4d6e9e3ed6dd', 'admin', 'apoco', '1')
[cached since 46.48s ago] ('sunhy18', 'pbkdf2:sha256:260000$7ReUzEtBEX6ru86t$2cdac0633bd7cd57f9c8a775af3e3d75f2fa926345ed73af426c4d6e9e3ed6dd', 'admin', 'apoco', '1')
2023-02-14 15:30:47,957 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 15:30:47  usersService.add_user:45  INFO: befor insert (-2, 'database error')
20230214 15:30:47  usersService.add_user:46  INFO: call insert successfully.
20230214 15:30:47  usersService.add_user:57  INFO: {'error_code': '0', 'message': 'User added successfully.'}
2023-02-14 16:02:27 Tuesday  nameko serivce [usersService service] start!
20230214 16:02:28  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 16:02:28  SQLiteDbPool.__init__:18  INFO: create engine successfully.
20230214 16:02:28  SQLiteDbPool.__init__:20  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 16:02:32  usersService.add_user:26  INFO: user{'username': 'sunhy34', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 16:02:32  usersService.add_user:28  INFO: username sunhy34
20230214 16:02:32  usersService.add_user:30  INFO: password0 sunhy
20230214 16:02:33  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$PZWlPmhDmC0JdoIz$b5b14dfa47ee80b5632d50fecb7e7d0c18007ca463a97f1902debfcada99a322
20230214 16:02:33  usersService.add_user:34  INFO: role admin
20230214 16:02:33  usersService.add_user:36  INFO: organization apoco
20230214 16:02:33  usersService.add_user:42  INFO: befor insert {'username': 'sunhy34', 'password': 'pbkdf2:sha256:260000$PZWlPmhDmC0JdoIz$b5b14dfa47ee80b5632d50fecb7e7d0c18007ca463a97f1902debfcada99a322', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 16:02:33,256 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 16:02:33,257 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 16:02:33,257 INFO sqlalchemy.engine.Engine [generated in 0.00028s] ('sunhy34', 'pbkdf2:sha256:260000$PZWlPmhDmC0JdoIz$b5b14dfa47ee80b5632d50fecb7e7d0c18007ca463a97f1902debfcada99a322', 'admin', 'apoco', '1')
[generated in 0.00028s] ('sunhy34', 'pbkdf2:sha256:260000$PZWlPmhDmC0JdoIz$b5b14dfa47ee80b5632d50fecb7e7d0c18007ca463a97f1902debfcada99a322', 'admin', 'apoco', '1')
2023-02-14 16:02:33,258 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
2023-02-14 16:14:37 Tuesday  nameko serivce [usersService service] start!
20230214 16:14:38  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 16:14:38  SQLiteDbPool.__init__:18  INFO: create engine successfully.
20230214 16:14:38  SQLiteDbPool.__init__:20  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 16:14:40  usersService.add_user:26  INFO: user{'username': 'sunhy34', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 16:14:40  usersService.add_user:28  INFO: username sunhy34
20230214 16:14:40  usersService.add_user:30  INFO: password0 sunhy
20230214 16:14:41  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$9pxkhRY4cwW80SZb$1d21e2ef46d6c99ea1b1dda281868c036aa54a80159f8b00f538bb645c99269c
20230214 16:14:41  usersService.add_user:34  INFO: role admin
20230214 16:14:41  usersService.add_user:36  INFO: organization apoco
20230214 16:14:41  usersService.add_user:42  INFO: befor insert {'username': 'sunhy34', 'password': 'pbkdf2:sha256:260000$9pxkhRY4cwW80SZb$1d21e2ef46d6c99ea1b1dda281868c036aa54a80159f8b00f538bb645c99269c', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 16:14:41,333 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 16:14:41,335 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 16:14:41,335 INFO sqlalchemy.engine.Engine [generated in 0.00039s] ('sunhy34', 'pbkdf2:sha256:260000$9pxkhRY4cwW80SZb$1d21e2ef46d6c99ea1b1dda281868c036aa54a80159f8b00f538bb645c99269c', 'admin', 'apoco', '1')
[generated in 0.00039s] ('sunhy34', 'pbkdf2:sha256:260000$9pxkhRY4cwW80SZb$1d21e2ef46d6c99ea1b1dda281868c036aa54a80159f8b00f538bb645c99269c', 'admin', 'apoco', '1')
2023-02-14 16:14:41,336 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 16:15:14  usersService.add_user:26  INFO: user{'username': 'sunhy35', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 16:15:14  usersService.add_user:28  INFO: username sunhy35
20230214 16:15:14  usersService.add_user:30  INFO: password0 sunhy
20230214 16:15:15  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$IzgGD2R0kwGGGwOx$a4b69038242cd0067a9bae9c8996bbc7f81157793236ee6ec6dc97c98f1a1c55
20230214 16:15:15  usersService.add_user:34  INFO: role admin
20230214 16:15:15  usersService.add_user:36  INFO: organization apoco
20230214 16:15:15  usersService.add_user:42  INFO: befor insert {'username': 'sunhy35', 'password': 'pbkdf2:sha256:260000$IzgGD2R0kwGGGwOx$a4b69038242cd0067a9bae9c8996bbc7f81157793236ee6ec6dc97c98f1a1c55', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 16:15:15,084 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 16:15:15,084 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 16:15:15,085 INFO sqlalchemy.engine.Engine [cached since 33.75s ago] ('sunhy35', 'pbkdf2:sha256:260000$IzgGD2R0kwGGGwOx$a4b69038242cd0067a9bae9c8996bbc7f81157793236ee6ec6dc97c98f1a1c55', 'admin', 'apoco', '1')
[cached since 33.75s ago] ('sunhy35', 'pbkdf2:sha256:260000$IzgGD2R0kwGGGwOx$a4b69038242cd0067a9bae9c8996bbc7f81157793236ee6ec6dc97c98f1a1c55', 'admin', 'apoco', '1')
2023-02-14 16:15:15,085 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230214 16:15:47  usersService.add_user:26  INFO: user{'username': 'sunhy35', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 16:15:47  usersService.add_user:28  INFO: username sunhy35
20230214 16:15:47  usersService.add_user:30  INFO: password0 sunhy
20230214 16:15:47  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$N3VewecW5QpQvZE8$6b13c5bfd622b753028879f2e6aeb0d115a052617e8df4ada2d22f0e21157ec0
20230214 16:15:47  usersService.add_user:34  INFO: role admin
20230214 16:15:47  usersService.add_user:36  INFO: organization apoco
20230214 16:15:47  usersService.add_user:42  INFO: befor insert {'username': 'sunhy35', 'password': 'pbkdf2:sha256:260000$N3VewecW5QpQvZE8$6b13c5bfd622b753028879f2e6aeb0d115a052617e8df4ada2d22f0e21157ec0', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 16:15:47,932 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 16:15:47,932 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 16:15:47,932 INFO sqlalchemy.engine.Engine [cached since 66.6s ago] ('sunhy35', 'pbkdf2:sha256:260000$N3VewecW5QpQvZE8$6b13c5bfd622b753028879f2e6aeb0d115a052617e8df4ada2d22f0e21157ec0', 'admin', 'apoco', '1')
[cached since 66.6s ago] ('sunhy35', 'pbkdf2:sha256:260000$N3VewecW5QpQvZE8$6b13c5bfd622b753028879f2e6aeb0d115a052617e8df4ada2d22f0e21157ec0', 'admin', 'apoco', '1')
2023-02-14 16:15:47,933 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 16:15:53  usersService.add_user:26  INFO: user{'username': 'sunhy35', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 16:15:53  usersService.add_user:28  INFO: username sunhy35
20230214 16:15:53  usersService.add_user:30  INFO: password0 sunhy
20230214 16:15:53  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$GKP7poIYGbRbN6RX$327088d30994e5c7b66e23fa3bdcdb3e18554b6c6b0f8b790ce40369189e2daf
20230214 16:15:53  usersService.add_user:34  INFO: role admin
20230214 16:15:53  usersService.add_user:36  INFO: organization apoco
20230214 16:15:53  usersService.add_user:42  INFO: befor insert {'username': 'sunhy35', 'password': 'pbkdf2:sha256:260000$GKP7poIYGbRbN6RX$327088d30994e5c7b66e23fa3bdcdb3e18554b6c6b0f8b790ce40369189e2daf', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 16:15:53,831 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 16:15:53,831 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 16:15:53,831 INFO sqlalchemy.engine.Engine [cached since 72.5s ago] ('sunhy35', 'pbkdf2:sha256:260000$GKP7poIYGbRbN6RX$327088d30994e5c7b66e23fa3bdcdb3e18554b6c6b0f8b790ce40369189e2daf', 'admin', 'apoco', '1')
[cached since 72.5s ago] ('sunhy35', 'pbkdf2:sha256:260000$GKP7poIYGbRbN6RX$327088d30994e5c7b66e23fa3bdcdb3e18554b6c6b0f8b790ce40369189e2daf', 'admin', 'apoco', '1')
2023-02-14 16:15:53,832 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
2023-02-14 16:28:08 Tuesday  nameko serivce [usersService service] start!
20230214 16:28:09  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 16:28:09  SQLiteDbPool.__init__:18  INFO: create engine successfully.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 15, in <module>
    class usersService(object):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 17, in usersService
    db_pool = SQLiteDbPool(config.SQLITE_DBFILE) 
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/../apocolib/SQLiteDbPool.py", line 20, in __init__
    session.execute("PRAGMA read_uncommitted = 0;")
NameError: name 'session' is not defined
2023-02-14 16:29:25 Tuesday  nameko serivce [usersService service] start!
20230214 16:29:25  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 16:29:25  SQLiteDbPool.__init__:18  INFO: create engine successfully.
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 15, in <module>
    class usersService(object):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 17, in usersService
    db_pool = SQLiteDbPool(config.SQLITE_DBFILE) 
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/../apocolib/SQLiteDbPool.py", line 20, in __init__
    session.execute("PRAGMA read_uncommitted = 0;")
NameError: name 'session' is not defined
2023-02-14 16:37:36 Tuesday  nameko serivce [usersService service] start!
20230214 16:37:37  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 16:37:37  SQLiteDbPool.__init__:18  INFO: create engine successfully.
20230214 16:37:37  SQLiteDbPool.__init__:25  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 16:37:43  usersService.add_user:26  INFO: user{'username': 'sunhy38', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 16:37:43  usersService.add_user:28  INFO: username sunhy38
20230214 16:37:43  usersService.add_user:30  INFO: password0 sunhy
20230214 16:37:44  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$DjxN1un8LMJr3vt1$ba7621048a7c62c8c825607a69e84a94e40f474f456e2ae60fd0312bbab5f9d2
20230214 16:37:44  usersService.add_user:34  INFO: role admin
20230214 16:37:44  usersService.add_user:36  INFO: organization apoco
20230214 16:37:44  usersService.add_user:42  INFO: befor insert {'username': 'sunhy38', 'password': 'pbkdf2:sha256:260000$DjxN1un8LMJr3vt1$ba7621048a7c62c8c825607a69e84a94e40f474f456e2ae60fd0312bbab5f9d2', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 16:37:44,141 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 16:37:44,142 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 16:37:44,143 INFO sqlalchemy.engine.Engine [generated in 0.00028s] ('sunhy38', 'pbkdf2:sha256:260000$DjxN1un8LMJr3vt1$ba7621048a7c62c8c825607a69e84a94e40f474f456e2ae60fd0312bbab5f9d2', 'admin', 'apoco', '1')
[generated in 0.00028s] ('sunhy38', 'pbkdf2:sha256:260000$DjxN1un8LMJr3vt1$ba7621048a7c62c8c825607a69e84a94e40f474f456e2ae60fd0312bbab5f9d2', 'admin', 'apoco', '1')
2023-02-14 16:37:44,143 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2023-02-14 16:40:08 Tuesday  nameko serivce [usersService service] start!
20230214 16:40:09  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 16:40:09  SQLiteDbPool.__init__:18  INFO: create engine successfully.
20230214 16:40:09  SQLiteDbPool.__init__:25  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 16:40:11  usersService.add_user:26  INFO: user{'username': 'sunhy38', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 16:40:11  usersService.add_user:28  INFO: username sunhy38
20230214 16:40:11  usersService.add_user:30  INFO: password0 sunhy
20230214 16:40:11  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$cbA4QlXSjN69Amn8$0078058a8be22fee1225ecba31c5a19adbaa585fea592cf02317beede4504197
20230214 16:40:11  usersService.add_user:34  INFO: role admin
20230214 16:40:11  usersService.add_user:36  INFO: organization apoco
20230214 16:40:11  usersService.add_user:42  INFO: befor insert {'username': 'sunhy38', 'password': 'pbkdf2:sha256:260000$cbA4QlXSjN69Amn8$0078058a8be22fee1225ecba31c5a19adbaa585fea592cf02317beede4504197', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 16:40:11,900 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 16:40:11,901 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 16:40:11,902 INFO sqlalchemy.engine.Engine [generated in 0.00040s] ('sunhy38', 'pbkdf2:sha256:260000$cbA4QlXSjN69Amn8$0078058a8be22fee1225ecba31c5a19adbaa585fea592cf02317beede4504197', 'admin', 'apoco', '1')
[generated in 0.00040s] ('sunhy38', 'pbkdf2:sha256:260000$cbA4QlXSjN69Amn8$0078058a8be22fee1225ecba31c5a19adbaa585fea592cf02317beede4504197', 'admin', 'apoco', '1')
2023-02-14 16:40:11,902 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 16:40:11  SQLiteDbPool.execute:38  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy38', 'pbkdf2:sha256:260000$cbA4QlXSjN69Amn8$0078058a8be22fee1225ecba31c5a19adbaa585fea592cf02317beede4504197', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2023-02-14 16:55:39 Tuesday  nameko serivce [usersService service] start!
20230214 16:55:40  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 16:55:40  SQLiteDbPool.__init__:18  INFO: create engine successfully.
20230214 16:55:40  SQLiteDbPool.__init__:25  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 16:56:24  usersService.Authentication:65  INFO: user{'username': 'sunhy5', 'password': 'sunhy'}
20230214 16:56:24  usersService.Authentication:67  INFO: after load json.user{'username': 'sunhy5', 'password': 'sunhy'}
20230214 16:56:24  usersService.Authentication:69  INFO: username = sunhy5
error handling worker <WorkerContext [usersService.Authentication] at 0x7f1af9010880>: name 'bcrypt' is not defined
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 70, in Authentication
    input_password = bcrypt.generate_password_hash(json_user['password']).decode('utf-8')
NameError: name 'bcrypt' is not defined
2023-02-14 16:59:44 Tuesday  nameko serivce [usersService service] start!
20230214 16:59:45  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 16:59:45  SQLiteDbPool.__init__:18  INFO: create engine successfully.
20230214 16:59:45  SQLiteDbPool.__init__:25  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
2023-02-14 17:01:28 Tuesday  nameko serivce [usersService service] start!
20230214 17:01:29  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 17:01:29  SQLiteDbPool.__init__:18  INFO: create engine successfully.
20230214 17:01:29  SQLiteDbPool.__init__:25  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 17:01:56  usersService.Authentication:65  INFO: user{'username': 'sunhy5', 'password': 'sunhy'}
20230214 17:01:56  usersService.Authentication:67  INFO: after load json.user{'username': 'sunhy5', 'password': 'sunhy'}
20230214 17:01:56  usersService.Authentication:69  INFO: username = sunhy5
20230214 17:01:57  usersService.Authentication:71  INFO: input_password = pbkdf2:sha256:260000$eomJIp594UZGwxan$962b0eb3f45e3b4d83a8df296c4f94c2df4ead951afc84399f878ae83a8fbfe7
error handling worker <WorkerContext [usersService.Authentication] at 0x7f55b451b400>: 'usersService' object has no attribute 'dbtool'
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 72, in Authentication
    password = self.dbtool.select("select password from users WHERE username = ?", (username))
AttributeError: 'usersService' object has no attribute 'dbtool'
2023-02-14 17:03:26 Tuesday  nameko serivce [usersService service] start!
20230214 17:03:26  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 17:03:26  SQLiteDbPool.__init__:18  INFO: create engine successfully.
20230214 17:03:26  SQLiteDbPool.__init__:25  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 17:03:30  usersService.Authentication:65  INFO: user{'username': 'sunhy5', 'password': 'sunhy'}
20230214 17:03:30  usersService.Authentication:67  INFO: after load json.user{'username': 'sunhy5', 'password': 'sunhy'}
20230214 17:03:30  usersService.Authentication:69  INFO: username = sunhy5
20230214 17:03:30  usersService.Authentication:71  INFO: input_password = pbkdf2:sha256:260000$wxLK6uM20NzLeJ4A$53d9812423646c203647867ee7bbbf5b4fef52f1ef8d4a3bafeaa70f31f22a73
2023-02-14 17:03:30,738 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 17:03:30,739 INFO sqlalchemy.engine.Engine SELECT sunhy5 FROM select password from users WHERE username = ?
SELECT sunhy5 FROM select password from users WHERE username = ?
2023-02-14 17:03:30,739 INFO sqlalchemy.engine.Engine [generated in 0.00023s] ()
[generated in 0.00023s] ()
2023-02-14 17:03:30,739 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 17:03:30  SQLiteDbPool.execute:38  ERROR: (sqlite3.OperationalError) near "select": syntax error
[SQL: SELECT sunhy5 FROM select password from users WHERE username = ?]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
error handling worker <WorkerContext [usersService.Authentication] at 0x7f6cd723eb50>: can only concatenate str (not "tuple") to str
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/containers.py", line 392, in _run_worker
    result = method(*worker_ctx.args, **worker_ctx.kwargs)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 73, in Authentication
    apolog.info('password = ' + password)
TypeError: can only concatenate str (not "tuple") to str
2023-02-14 17:35:29 Tuesday  nameko serivce [usersService service] start!
Traceback (most recent call last):
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/bin/nameko", line 8, in <module>
    sys.exit(main())
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/main.py", line 143, in main
    args.main(args, *unknown_args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/commands.py", line 113, in main
    main(args)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 179, in main
    import_service(path)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/venv/lib/python3.8/site-packages/nameko/cli/run.py", line 44, in import_service
    __import__(module_name)
  File "/home/apoco/ai_micro_services/apoco_intelligent_inalytics/nameko_server/./usersService.py", line 72
    error_code ,result = self.db_pool.select("users",["password"], "username=" + username))
                                                                                          ^
SyntaxError: unmatched ')'
2023-02-14 17:36:35 Tuesday  nameko serivce [usersService service] start!
20230214 17:36:36  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230214 17:36:36  SQLiteDbPool.__init__:18  INFO: create engine successfully.
20230214 17:36:36  SQLiteDbPool.__init__:25  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230214 17:37:06  usersService.add_user:26  INFO: user{'username': 'sunhy38', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 17:37:06  usersService.add_user:28  INFO: username sunhy38
20230214 17:37:06  usersService.add_user:30  INFO: password0 sunhy
20230214 17:37:07  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$ZqdNE6m6UxrbfSNN$f3c234a0615d3c94f79704246a3cf4910589d3368d5dd1ddce26c04eaad6b4b6
20230214 17:37:07  usersService.add_user:34  INFO: role admin
20230214 17:37:07  usersService.add_user:36  INFO: organization apoco
20230214 17:37:07  usersService.add_user:42  INFO: befor insert {'username': 'sunhy38', 'password': 'pbkdf2:sha256:260000$ZqdNE6m6UxrbfSNN$f3c234a0615d3c94f79704246a3cf4910589d3368d5dd1ddce26c04eaad6b4b6', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 17:37:07,235 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 17:37:07,236 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 17:37:07,236 INFO sqlalchemy.engine.Engine [generated in 0.00027s] ('sunhy38', 'pbkdf2:sha256:260000$ZqdNE6m6UxrbfSNN$f3c234a0615d3c94f79704246a3cf4910589d3368d5dd1ddce26c04eaad6b4b6', 'admin', 'apoco', '1')
[generated in 0.00027s] ('sunhy38', 'pbkdf2:sha256:260000$ZqdNE6m6UxrbfSNN$f3c234a0615d3c94f79704246a3cf4910589d3368d5dd1ddce26c04eaad6b4b6', 'admin', 'apoco', '1')
2023-02-14 17:37:07,237 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230214 17:37:07  SQLiteDbPool.execute:38  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy38', 'pbkdf2:sha256:260000$ZqdNE6m6UxrbfSNN$f3c234a0615d3c94f79704246a3cf4910589d3368d5dd1ddce26c04eaad6b4b6', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230214 17:37:25  usersService.add_user:26  INFO: user{'username': 'sunhy39', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230214 17:37:25  usersService.add_user:28  INFO: username sunhy39
20230214 17:37:25  usersService.add_user:30  INFO: password0 sunhy
20230214 17:37:25  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$9fhQw2JSbwfVdwv3$109d5934452cf8ba04c990019ba9c1997b59e760b6af45a14129fa0df61ceb0f
20230214 17:37:25  usersService.add_user:34  INFO: role admin
20230214 17:37:25  usersService.add_user:36  INFO: organization apoco
20230214 17:37:25  usersService.add_user:42  INFO: befor insert {'username': 'sunhy39', 'password': 'pbkdf2:sha256:260000$9fhQw2JSbwfVdwv3$109d5934452cf8ba04c990019ba9c1997b59e760b6af45a14129fa0df61ceb0f', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-14 17:37:25,811 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-14 17:37:25,812 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-14 17:37:25,812 INFO sqlalchemy.engine.Engine [cached since 18.58s ago] ('sunhy39', 'pbkdf2:sha256:260000$9fhQw2JSbwfVdwv3$109d5934452cf8ba04c990019ba9c1997b59e760b6af45a14129fa0df61ceb0f', 'admin', 'apoco', '1')
[cached since 18.58s ago] ('sunhy39', 'pbkdf2:sha256:260000$9fhQw2JSbwfVdwv3$109d5934452cf8ba04c990019ba9c1997b59e760b6af45a14129fa0df61ceb0f', 'admin', 'apoco', '1')
2023-02-14 17:37:25,813 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
2023-02-15 14:06:17 Wednesday  nameko serivce [usersService service] start!
20230215 14:06:18  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230215 14:06:18  SQLiteDbPool.__init__:18  INFO: create engine successfully.
20230215 14:06:18  SQLiteDbPool.__init__:25  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230215 14:06:22  usersService.add_user:26  INFO: user{'username': 'sunhy40', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230215 14:06:22  usersService.add_user:28  INFO: username sunhy40
20230215 14:06:22  usersService.add_user:30  INFO: password0 sunhy
20230215 14:06:23  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$XfdtiZPjcB6W4NMo$f7913cb0819c3adb15efbceb15efc1ce3339090bb77ca8b80f6dba4e7ee2cb01
20230215 14:06:23  usersService.add_user:34  INFO: role admin
20230215 14:06:23  usersService.add_user:36  INFO: organization apoco
20230215 14:06:23  usersService.add_user:42  INFO: befor insert {'username': 'sunhy40', 'password': 'pbkdf2:sha256:260000$XfdtiZPjcB6W4NMo$f7913cb0819c3adb15efbceb15efc1ce3339090bb77ca8b80f6dba4e7ee2cb01', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-15 14:06:23,268 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-15 14:06:23,269 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-15 14:06:23,269 INFO sqlalchemy.engine.Engine [generated in 0.00029s] ('sunhy40', 'pbkdf2:sha256:260000$XfdtiZPjcB6W4NMo$f7913cb0819c3adb15efbceb15efc1ce3339090bb77ca8b80f6dba4e7ee2cb01', 'admin', 'apoco', '1')
[generated in 0.00029s] ('sunhy40', 'pbkdf2:sha256:260000$XfdtiZPjcB6W4NMo$f7913cb0819c3adb15efbceb15efc1ce3339090bb77ca8b80f6dba4e7ee2cb01', 'admin', 'apoco', '1')
2023-02-15 14:06:23,270 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230215 14:06:23  SQLiteDbPool.execute:38  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy40', 'pbkdf2:sha256:260000$XfdtiZPjcB6W4NMo$f7913cb0819c3adb15efbceb15efc1ce3339090bb77ca8b80f6dba4e7ee2cb01', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2023-02-15 15:04:06 Wednesday  nameko serivce [usersService service] start!
20230215 15:04:07  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230215 15:04:07  SQLiteDbPool.__init__:18  INFO: create engine successfully.
20230215 15:04:07  SQLiteDbPool.__init__:25  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230215 15:04:15  usersService.add_user:26  INFO: user{'username': 'sunhy41', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230215 15:04:15  usersService.add_user:28  INFO: username sunhy41
20230215 15:04:15  usersService.add_user:30  INFO: password0 sunhy
20230215 15:04:15  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$hQ52vSQiUhTitFSL$3aa5c4e76f23b879731c6ba8b2b6a3d3a622232aa1168fa58e2ab657284430b1
20230215 15:04:15  usersService.add_user:34  INFO: role admin
20230215 15:04:15  usersService.add_user:36  INFO: organization apoco
20230215 15:04:15  usersService.add_user:42  INFO: befor insert {'username': 'sunhy41', 'password': 'pbkdf2:sha256:260000$hQ52vSQiUhTitFSL$3aa5c4e76f23b879731c6ba8b2b6a3d3a622232aa1168fa58e2ab657284430b1', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-15 15:04:15,349 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-15 15:04:15,351 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-15 15:04:15,351 INFO sqlalchemy.engine.Engine [generated in 0.00041s] ('sunhy41', 'pbkdf2:sha256:260000$hQ52vSQiUhTitFSL$3aa5c4e76f23b879731c6ba8b2b6a3d3a622232aa1168fa58e2ab657284430b1', 'admin', 'apoco', '1')
[generated in 0.00041s] ('sunhy41', 'pbkdf2:sha256:260000$hQ52vSQiUhTitFSL$3aa5c4e76f23b879731c6ba8b2b6a3d3a622232aa1168fa58e2ab657284430b1', 'admin', 'apoco', '1')
2023-02-15 15:04:15,352 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230215 15:04:15  SQLiteDbPool.execute:38  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy41', 'pbkdf2:sha256:260000$hQ52vSQiUhTitFSL$3aa5c4e76f23b879731c6ba8b2b6a3d3a622232aa1168fa58e2ab657284430b1', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2023-02-16 14:24:55 Thursday  nameko serivce [usersService service] start!
20230216 14:24:56  SQLiteDbPool.__init__:15  INFO: db_urlsqlite:////home/apoco/ai_micro_services/apoco_intelligent_inalytics/database/apoco_ai_masterdb.db
20230216 14:24:56  SQLiteDbPool.__init__:18  INFO: create engine successfully.
20230216 14:24:56  SQLiteDbPool.__init__:25  INFO: create session successfully.
starting services: usersService
Connected to amqp://guest:**@192.168.1.19:5672//
20230216 14:24:56  usersService.add_user:26  INFO: user{'username': 'sunhy42', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230216 14:24:56  usersService.add_user:28  INFO: username sunhy42
20230216 14:24:56  usersService.add_user:30  INFO: password0 sunhy
20230216 14:24:57  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$M12WYMLbflaLWelw$20033275ce861abcdc71366c26b5e076cda22aa8040aa959f340780f3b06b1a0
20230216 14:24:57  usersService.add_user:34  INFO: role admin
20230216 14:24:57  usersService.add_user:36  INFO: organization apoco
20230216 14:24:57  usersService.add_user:42  INFO: befor insert {'username': 'sunhy42', 'password': 'pbkdf2:sha256:260000$M12WYMLbflaLWelw$20033275ce861abcdc71366c26b5e076cda22aa8040aa959f340780f3b06b1a0', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-16 14:24:57,101 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-16 14:24:57,102 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-16 14:24:57,102 INFO sqlalchemy.engine.Engine [generated in 0.00026s] ('sunhy42', 'pbkdf2:sha256:260000$M12WYMLbflaLWelw$20033275ce861abcdc71366c26b5e076cda22aa8040aa959f340780f3b06b1a0', 'admin', 'apoco', '1')
[generated in 0.00026s] ('sunhy42', 'pbkdf2:sha256:260000$M12WYMLbflaLWelw$20033275ce861abcdc71366c26b5e076cda22aa8040aa959f340780f3b06b1a0', 'admin', 'apoco', '1')
2023-02-16 14:24:57,102 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230216 14:24:57  SQLiteDbPool.execute:38  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy42', 'pbkdf2:sha256:260000$M12WYMLbflaLWelw$20033275ce861abcdc71366c26b5e076cda22aa8040aa959f340780f3b06b1a0', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230216 14:25:04  usersService.add_user:26  INFO: user{'username': 'sunhy42', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230216 14:25:04  usersService.add_user:28  INFO: username sunhy42
20230216 14:25:04  usersService.add_user:30  INFO: password0 sunhy
20230216 14:25:04  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$b7SZClZJn56gbmHz$1621d2ada3b6ee5e81b1c6aa75abe77cc2d99a84f6ac3a0bf72faa43b9cb3b0e
20230216 14:25:04  usersService.add_user:34  INFO: role admin
20230216 14:25:04  usersService.add_user:36  INFO: organization apoco
20230216 14:25:04  usersService.add_user:42  INFO: befor insert {'username': 'sunhy42', 'password': 'pbkdf2:sha256:260000$b7SZClZJn56gbmHz$1621d2ada3b6ee5e81b1c6aa75abe77cc2d99a84f6ac3a0bf72faa43b9cb3b0e', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-16 14:25:04,879 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-16 14:25:04,879 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-16 14:25:04,879 INFO sqlalchemy.engine.Engine [cached since 7.778s ago] ('sunhy42', 'pbkdf2:sha256:260000$b7SZClZJn56gbmHz$1621d2ada3b6ee5e81b1c6aa75abe77cc2d99a84f6ac3a0bf72faa43b9cb3b0e', 'admin', 'apoco', '1')
[cached since 7.778s ago] ('sunhy42', 'pbkdf2:sha256:260000$b7SZClZJn56gbmHz$1621d2ada3b6ee5e81b1c6aa75abe77cc2d99a84f6ac3a0bf72faa43b9cb3b0e', 'admin', 'apoco', '1')
2023-02-16 14:25:04,880 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230216 14:25:04  SQLiteDbPool.execute:38  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy42', 'pbkdf2:sha256:260000$b7SZClZJn56gbmHz$1621d2ada3b6ee5e81b1c6aa75abe77cc2d99a84f6ac3a0bf72faa43b9cb3b0e', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230216 14:25:35  usersService.add_user:26  INFO: user{'username': 'sunhy43', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230216 14:25:35  usersService.add_user:28  INFO: username sunhy43
20230216 14:25:35  usersService.add_user:30  INFO: password0 sunhy
20230216 14:25:35  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$tvu5uUAZ4L2kIXl1$667c907b799964f8da37e8762da70b17b2ebd0e3d1d4774c913889e3b751d95a
20230216 14:25:35  usersService.add_user:34  INFO: role admin
20230216 14:25:35  usersService.add_user:36  INFO: organization apoco
20230216 14:25:35  usersService.add_user:42  INFO: befor insert {'username': 'sunhy43', 'password': 'pbkdf2:sha256:260000$tvu5uUAZ4L2kIXl1$667c907b799964f8da37e8762da70b17b2ebd0e3d1d4774c913889e3b751d95a', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-16 14:25:35,287 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-16 14:25:35,287 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-16 14:25:35,287 INFO sqlalchemy.engine.Engine [cached since 38.19s ago] ('sunhy43', 'pbkdf2:sha256:260000$tvu5uUAZ4L2kIXl1$667c907b799964f8da37e8762da70b17b2ebd0e3d1d4774c913889e3b751d95a', 'admin', 'apoco', '1')
[cached since 38.19s ago] ('sunhy43', 'pbkdf2:sha256:260000$tvu5uUAZ4L2kIXl1$667c907b799964f8da37e8762da70b17b2ebd0e3d1d4774c913889e3b751d95a', 'admin', 'apoco', '1')
2023-02-16 14:25:35,288 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230216 14:25:58  usersService.add_user:26  INFO: user{'username': 'sunhy44', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230216 14:25:58  usersService.add_user:28  INFO: username sunhy44
20230216 14:25:58  usersService.add_user:30  INFO: password0 sunhy
20230216 14:25:58  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$0jaRGy8CWUZWco0y$78cd9467d988a474a6644c99da3cb6d55cdc39d7c3a1e70cd70a8aae14f2512e
20230216 14:25:58  usersService.add_user:34  INFO: role admin
20230216 14:25:58  usersService.add_user:36  INFO: organization apoco
20230216 14:25:58  usersService.add_user:42  INFO: befor insert {'username': 'sunhy44', 'password': 'pbkdf2:sha256:260000$0jaRGy8CWUZWco0y$78cd9467d988a474a6644c99da3cb6d55cdc39d7c3a1e70cd70a8aae14f2512e', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-16 14:25:58,861 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-16 14:25:58,862 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-16 14:25:58,862 INFO sqlalchemy.engine.Engine [cached since 61.76s ago] ('sunhy44', 'pbkdf2:sha256:260000$0jaRGy8CWUZWco0y$78cd9467d988a474a6644c99da3cb6d55cdc39d7c3a1e70cd70a8aae14f2512e', 'admin', 'apoco', '1')
[cached since 61.76s ago] ('sunhy44', 'pbkdf2:sha256:260000$0jaRGy8CWUZWco0y$78cd9467d988a474a6644c99da3cb6d55cdc39d7c3a1e70cd70a8aae14f2512e', 'admin', 'apoco', '1')
2023-02-16 14:25:58,862 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230216 14:26:07  usersService.add_user:26  INFO: user{'username': 'sunhy45', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230216 14:26:07  usersService.add_user:28  INFO: username sunhy45
20230216 14:26:07  usersService.add_user:30  INFO: password0 sunhy
20230216 14:26:08  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$Jt1BGldOQDdjVCuH$4442f8296957c3bdb1e2d972d089dbfd2dabc823fabd686fd1640c6cee45e15e
20230216 14:26:08  usersService.add_user:34  INFO: role admin
20230216 14:26:08  usersService.add_user:36  INFO: organization apoco
20230216 14:26:08  usersService.add_user:42  INFO: befor insert {'username': 'sunhy45', 'password': 'pbkdf2:sha256:260000$Jt1BGldOQDdjVCuH$4442f8296957c3bdb1e2d972d089dbfd2dabc823fabd686fd1640c6cee45e15e', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-16 14:26:08,285 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-16 14:26:08,285 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-16 14:26:08,286 INFO sqlalchemy.engine.Engine [cached since 71.18s ago] ('sunhy45', 'pbkdf2:sha256:260000$Jt1BGldOQDdjVCuH$4442f8296957c3bdb1e2d972d089dbfd2dabc823fabd686fd1640c6cee45e15e', 'admin', 'apoco', '1')
[cached since 71.18s ago] ('sunhy45', 'pbkdf2:sha256:260000$Jt1BGldOQDdjVCuH$4442f8296957c3bdb1e2d972d089dbfd2dabc823fabd686fd1640c6cee45e15e', 'admin', 'apoco', '1')
2023-02-16 14:26:08,286 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230216 14:26:15  usersService.add_user:26  INFO: user{'username': 'sunhy46', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230216 14:26:15  usersService.add_user:28  INFO: username sunhy46
20230216 14:26:15  usersService.add_user:30  INFO: password0 sunhy
20230216 14:26:15  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$kpXhqsnoLvucbyQO$7394dbeecf8b3e8fa55d32350b8d7bad1adb201eb09ee626882bfcac7828344c
20230216 14:26:15  usersService.add_user:34  INFO: role admin
20230216 14:26:15  usersService.add_user:36  INFO: organization apoco
20230216 14:26:15  usersService.add_user:42  INFO: befor insert {'username': 'sunhy46', 'password': 'pbkdf2:sha256:260000$kpXhqsnoLvucbyQO$7394dbeecf8b3e8fa55d32350b8d7bad1adb201eb09ee626882bfcac7828344c', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-16 14:26:15,456 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-16 14:26:15,456 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-16 14:26:15,456 INFO sqlalchemy.engine.Engine [cached since 78.35s ago] ('sunhy46', 'pbkdf2:sha256:260000$kpXhqsnoLvucbyQO$7394dbeecf8b3e8fa55d32350b8d7bad1adb201eb09ee626882bfcac7828344c', 'admin', 'apoco', '1')
[cached since 78.35s ago] ('sunhy46', 'pbkdf2:sha256:260000$kpXhqsnoLvucbyQO$7394dbeecf8b3e8fa55d32350b8d7bad1adb201eb09ee626882bfcac7828344c', 'admin', 'apoco', '1')
2023-02-16 14:26:15,457 INFO sqlalchemy.engine.Engine COMMIT
COMMIT
20230216 14:26:17  usersService.add_user:26  INFO: user{'username': 'sunhy46', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230216 14:26:17  usersService.add_user:28  INFO: username sunhy46
20230216 14:26:17  usersService.add_user:30  INFO: password0 sunhy
20230216 14:26:17  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$uZfb6pWYreZdJlDJ$5053274ca110ca3396892f003bb17cd21566db4598fff97bc7ed569aa27da81c
20230216 14:26:17  usersService.add_user:34  INFO: role admin
20230216 14:26:17  usersService.add_user:36  INFO: organization apoco
20230216 14:26:17  usersService.add_user:42  INFO: befor insert {'username': 'sunhy46', 'password': 'pbkdf2:sha256:260000$uZfb6pWYreZdJlDJ$5053274ca110ca3396892f003bb17cd21566db4598fff97bc7ed569aa27da81c', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-16 14:26:17,595 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-16 14:26:17,595 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-16 14:26:17,595 INFO sqlalchemy.engine.Engine [cached since 80.49s ago] ('sunhy46', 'pbkdf2:sha256:260000$uZfb6pWYreZdJlDJ$5053274ca110ca3396892f003bb17cd21566db4598fff97bc7ed569aa27da81c', 'admin', 'apoco', '1')
[cached since 80.49s ago] ('sunhy46', 'pbkdf2:sha256:260000$uZfb6pWYreZdJlDJ$5053274ca110ca3396892f003bb17cd21566db4598fff97bc7ed569aa27da81c', 'admin', 'apoco', '1')
2023-02-16 14:26:17,596 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230216 14:26:17  SQLiteDbPool.execute:38  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy46', 'pbkdf2:sha256:260000$uZfb6pWYreZdJlDJ$5053274ca110ca3396892f003bb17cd21566db4598fff97bc7ed569aa27da81c', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230216 14:26:19  usersService.add_user:26  INFO: user{'username': 'sunhy46', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230216 14:26:19  usersService.add_user:28  INFO: username sunhy46
20230216 14:26:19  usersService.add_user:30  INFO: password0 sunhy
20230216 14:26:20  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$RGLg9UP7gu3AZEeO$5a506cd639cd4a5ad5e6c63ac97f26bd41d01a5a0d5e233df7b152027adc99d5
20230216 14:26:20  usersService.add_user:34  INFO: role admin
20230216 14:26:20  usersService.add_user:36  INFO: organization apoco
20230216 14:26:20  usersService.add_user:42  INFO: befor insert {'username': 'sunhy46', 'password': 'pbkdf2:sha256:260000$RGLg9UP7gu3AZEeO$5a506cd639cd4a5ad5e6c63ac97f26bd41d01a5a0d5e233df7b152027adc99d5', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-16 14:26:20,257 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-16 14:26:20,257 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-16 14:26:20,257 INFO sqlalchemy.engine.Engine [cached since 83.16s ago] ('sunhy46', 'pbkdf2:sha256:260000$RGLg9UP7gu3AZEeO$5a506cd639cd4a5ad5e6c63ac97f26bd41d01a5a0d5e233df7b152027adc99d5', 'admin', 'apoco', '1')
[cached since 83.16s ago] ('sunhy46', 'pbkdf2:sha256:260000$RGLg9UP7gu3AZEeO$5a506cd639cd4a5ad5e6c63ac97f26bd41d01a5a0d5e233df7b152027adc99d5', 'admin', 'apoco', '1')
2023-02-16 14:26:20,258 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230216 14:26:20  SQLiteDbPool.execute:38  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy46', 'pbkdf2:sha256:260000$RGLg9UP7gu3AZEeO$5a506cd639cd4a5ad5e6c63ac97f26bd41d01a5a0d5e233df7b152027adc99d5', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
20230216 14:26:21  usersService.add_user:26  INFO: user{'username': 'sunhy46', 'password': 'sunhy', 'organization': 'apoco', 'role': 'admin', 'status': '1'}
20230216 14:26:21  usersService.add_user:28  INFO: username sunhy46
20230216 14:26:21  usersService.add_user:30  INFO: password0 sunhy
20230216 14:26:22  usersService.add_user:32  INFO: password pbkdf2:sha256:260000$QtUlJbx2i5FdjwYN$a2137eea7d36f48a6ff667db72ed562dfc17a6f26759e54bd9c7d07e732a54fc
20230216 14:26:22  usersService.add_user:34  INFO: role admin
20230216 14:26:22  usersService.add_user:36  INFO: organization apoco
20230216 14:26:22  usersService.add_user:42  INFO: befor insert {'username': 'sunhy46', 'password': 'pbkdf2:sha256:260000$QtUlJbx2i5FdjwYN$a2137eea7d36f48a6ff667db72ed562dfc17a6f26759e54bd9c7d07e732a54fc', 'role': 'admin', 'organization': 'apoco', 'status': '1'}
2023-02-16 14:26:22,013 INFO sqlalchemy.engine.Engine BEGIN (implicit)
BEGIN (implicit)
2023-02-16 14:26:22,014 INFO sqlalchemy.engine.Engine INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)
2023-02-16 14:26:22,014 INFO sqlalchemy.engine.Engine [cached since 84.91s ago] ('sunhy46', 'pbkdf2:sha256:260000$QtUlJbx2i5FdjwYN$a2137eea7d36f48a6ff667db72ed562dfc17a6f26759e54bd9c7d07e732a54fc', 'admin', 'apoco', '1')
[cached since 84.91s ago] ('sunhy46', 'pbkdf2:sha256:260000$QtUlJbx2i5FdjwYN$a2137eea7d36f48a6ff667db72ed562dfc17a6f26759e54bd9c7d07e732a54fc', 'admin', 'apoco', '1')
2023-02-16 14:26:22,014 INFO sqlalchemy.engine.Engine ROLLBACK
ROLLBACK
20230216 14:26:22  SQLiteDbPool.execute:38  ERROR: (sqlite3.IntegrityError) UNIQUE constraint failed: users.username
[SQL: INSERT INTO users (username, password, role, organization, status) VALUES (?, ?, ?, ?, ?)]
[parameters: ('sunhy46', 'pbkdf2:sha256:260000$QtUlJbx2i5FdjwYN$a2137eea7d36f48a6ff667db72ed562dfc17a6f26759e54bd9c7d07e732a54fc', 'admin', 'apoco', '1')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
